Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    DOT
    KEYWORD_CONTINUE
    SYSTEM_EXIT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement
Rule 3     params -> param_list
Rule 4     params -> empty
Rule 5     param_list -> param
Rule 6     param_list -> param_list COMMA param
Rule 7     param -> type_specifier IDENTIFIER
Rule 8     statement_list -> statement
Rule 9     statement_list -> statement_list statement
Rule 10    statement -> declaration_statement
Rule 11    statement -> assignment_statement
Rule 12    statement -> if_statement
Rule 13    statement -> while_statement
Rule 14    statement -> do_while_statement
Rule 15    statement -> for_statement
Rule 16    statement -> switch_statement
Rule 17    statement -> break_statement
Rule 18    statement -> return_statement
Rule 19    statement -> function_call_statement
Rule 20    statement -> block_statement
Rule 21    statement -> function_definition
Rule 22    do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
Rule 23    switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
Rule 24    case_list -> case_clause
Rule 25    case_list -> case_list case_clause
Rule 26    case_clause -> KEYWORD_CASE expression COLON statement_list
Rule 27    case_clause -> KEYWORD_DEFAULT COLON statement_list
Rule 28    break_statement -> KEYWORD_BREAK SEMICOLON
Rule 29    declaration_statement -> type_specifier IDENTIFIER SEMICOLON
Rule 30    declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON
Rule 31    declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
Rule 32    declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
Rule 33    declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
Rule 34    declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
Rule 35    declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
Rule 36    type_specifier -> primitive_type
Rule 37    type_specifier -> array_type
Rule 38    primitive_type -> KEYWORD_INT
Rule 39    primitive_type -> KEYWORD_FLOAT
Rule 40    primitive_type -> KEYWORD_CHAR
Rule 41    primitive_type -> KEYWORD_VOID
Rule 42    primitive_type -> KEYWORD_STRING
Rule 43    primitive_type -> KEYWORD_BOOL
Rule 44    primitive_type -> KEYWORD_FILE
Rule 45    primitive_type -> KEYWORD_SOCKET
Rule 46    primitive_type -> KEYWORD_DICT
Rule 47    primitive_type -> KEYWORD_REGEX
Rule 48    primitive_type -> KEYWORD_ARRAY
Rule 49    array_type -> primitive_type LBRACKET RBRACKET
Rule 50    assignment_statement -> left_hand_side ASSIGN expression SEMICOLON
Rule 51    left_hand_side -> IDENTIFIER
Rule 52    left_hand_side -> subscript_access
Rule 53    assignment_statement_no_semi -> left_hand_side ASSIGN expression
Rule 54    if_statement -> KEYWORD_IF LPAREN expression RPAREN statement
Rule 55    if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
Rule 56    while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement
Rule 57    for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
Rule 58    for_init -> assignment_statement_no_semi SEMICOLON
Rule 59    for_init -> declaration_statement
Rule 60    for_init -> SEMICOLON
Rule 61    expression_statement -> expression SEMICOLON
Rule 62    expression_statement -> SEMICOLON
Rule 63    expression_opt -> expression
Rule 64    expression_opt -> assignment_statement_no_semi
Rule 65    expression_opt -> increment_decrement
Rule 66    expression_opt -> empty
Rule 67    increment_decrement -> IDENTIFIER PLUS PLUS
Rule 68    increment_decrement -> IDENTIFIER MINUS MINUS
Rule 69    empty -> <empty>
Rule 70    return_statement -> KEYWORD_RETURN SEMICOLON
Rule 71    return_statement -> KEYWORD_RETURN expression SEMICOLON
Rule 72    function_call_statement -> function_call SEMICOLON
Rule 73    function_call -> IDENTIFIER LPAREN argument_list RPAREN
Rule 74    function_call -> IDENTIFIER LPAREN RPAREN
Rule 75    function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
Rule 76    function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
Rule 77    function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
Rule 78    function_call -> KEYWORD_EXIT LPAREN RPAREN
Rule 79    function_call -> SYSTEM_SLEEP LPAREN expression RPAREN
Rule 80    function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
Rule 81    function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN
Rule 82    function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN
Rule 83    function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
Rule 84    function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
Rule 85    function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN
Rule 86    function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
Rule 87    argument_list -> expression
Rule 88    argument_list -> argument_list COMMA expression
Rule 89    block_statement -> LBRACE RBRACE
Rule 90    block_statement -> LBRACE statement_list RBRACE
Rule 91    initializer_list -> LBRACKET expression_list_opt RBRACKET
Rule 92    expression_list_opt -> expression_list
Rule 93    expression_list_opt -> empty
Rule 94    expression_list -> expression
Rule 95    expression_list -> expression_list COMMA expression
Rule 96    expression -> logical_expression
Rule 97    expression -> initializer_list
Rule 98    logical_expression -> equality_expression
Rule 99    logical_expression -> logical_expression AND equality_expression
Rule 100   logical_expression -> logical_expression OR equality_expression
Rule 101   equality_expression -> relational_expression
Rule 102   equality_expression -> equality_expression EQ relational_expression
Rule 103   equality_expression -> equality_expression NEQ relational_expression
Rule 104   relational_expression -> additive_expression
Rule 105   relational_expression -> relational_expression GT additive_expression
Rule 106   relational_expression -> relational_expression LT additive_expression
Rule 107   relational_expression -> relational_expression GEQ additive_expression
Rule 108   relational_expression -> relational_expression LEQ additive_expression
Rule 109   additive_expression -> multiplicative_expression
Rule 110   additive_expression -> additive_expression PLUS multiplicative_expression
Rule 111   additive_expression -> additive_expression MINUS multiplicative_expression
Rule 112   multiplicative_expression -> unary_expression
Rule 113   multiplicative_expression -> multiplicative_expression MUL unary_expression
Rule 114   multiplicative_expression -> multiplicative_expression DIV unary_expression
Rule 115   multiplicative_expression -> multiplicative_expression MOD unary_expression
Rule 116   unary_expression -> primary_expression
Rule 117   unary_expression -> MINUS unary_expression
Rule 118   primary_expression -> IDENTIFIER
Rule 119   primary_expression -> INT_LITERAL
Rule 120   primary_expression -> FLOAT_LITERAL
Rule 121   primary_expression -> STRING_LITERAL
Rule 122   primary_expression -> CHAR_LITERAL
Rule 123   primary_expression -> KEYWORD_TRUE
Rule 124   primary_expression -> KEYWORD_FALSE
Rule 125   primary_expression -> KEYWORD_NULL
Rule 126   primary_expression -> LPAREN expression RPAREN
Rule 127   primary_expression -> function_call
Rule 128   primary_expression -> subscript_access
Rule 129   primary_expression -> dictionary_literal
Rule 130   dictionary_literal -> LBRACE key_value_list_opt RBRACE
Rule 131   key_value_list_opt -> key_value_list
Rule 132   key_value_list_opt -> empty
Rule 133   key_value_list -> key_value
Rule 134   key_value_list -> key_value_list COMMA key_value
Rule 135   key_value -> expression COLON expression
Rule 136   subscript_access -> IDENTIFIER LBRACKET expression RBRACKET

Terminals, with rules where they appear

AND                  : 99
ASSIGN               : 30 32 33 34 50 53
CHAR_LITERAL         : 122
COLON                : 26 27 135
COMMA                : 6 75 76 77 77 80 83 84 86 88 95 134
COMMENT              : 
DIV                  : 114
DOT                  : 
EQ                   : 102
FLOAT_LITERAL        : 120
GEQ                  : 107
GT                   : 105
IDENTIFIER           : 2 7 29 30 31 32 33 34 35 51 67 68 73 74 75 118 136
INT_LITERAL          : 119
KEYWORD_ARRAY        : 48
KEYWORD_BOOL         : 43
KEYWORD_BREAK        : 28
KEYWORD_CASE         : 26
KEYWORD_CHAR         : 40
KEYWORD_CONTINUE     : 
KEYWORD_DEFAULT      : 27
KEYWORD_DICT         : 46
KEYWORD_DO           : 22
KEYWORD_ELSE         : 55
KEYWORD_EXIT         : 78
KEYWORD_FALSE        : 124
KEYWORD_FILE         : 44
KEYWORD_FLOAT        : 39
KEYWORD_FOR          : 57
KEYWORD_IF           : 54 55
KEYWORD_INT          : 38
KEYWORD_NULL         : 125
KEYWORD_REGEX        : 47
KEYWORD_RETURN       : 70 71
KEYWORD_SOCKET       : 45
KEYWORD_STRING       : 42
KEYWORD_SWITCH       : 23
KEYWORD_TRUE         : 123
KEYWORD_VOID         : 41
KEYWORD_WHILE        : 22 56
LBRACE               : 23 89 90 130
LBRACKET             : 31 32 33 34 35 49 91 136
LEQ                  : 108
LPAREN               : 2 22 23 54 55 56 57 73 74 75 76 77 78 79 80 81 82 83 84 85 86 126
LT                   : 106
MINUS                : 68 68 111 117
MOD                  : 115
MUL                  : 113
NEQ                  : 103
OR                   : 100
PLUS                 : 67 67 110
RBRACE               : 23 89 90 130
RBRACKET             : 31 32 33 34 35 49 91 136
RPAREN               : 2 22 23 54 55 56 57 73 74 75 76 77 78 79 80 81 82 83 84 85 86 126
SEMICOLON            : 22 28 29 30 31 32 33 34 35 50 57 58 60 61 62 70 71 72
STRING_LITERAL       : 121
SYSTEM_ARR_AVG       : 85 86
SYSTEM_ARR_CONTAINS  : 83
SYSTEM_ARR_INDEXOF   : 84
SYSTEM_ARR_POP       : 81
SYSTEM_ARR_PUSH      : 80
SYSTEM_ARR_SIZE      : 82
SYSTEM_EXIT          : 
SYSTEM_INPUT         : 75
SYSTEM_OUTPUT        : 76 77
SYSTEM_SLEEP         : 79
error                : 

Nonterminals, with rules where they appear

additive_expression  : 104 105 106 107 108 110 111
argument_list        : 73 88
array_type           : 37
assignment_statement : 11
assignment_statement_no_semi : 58 64
block_statement      : 2 20
break_statement      : 17
case_clause          : 24 25
case_list            : 23 25
declaration_statement : 10 59
dictionary_literal   : 129
do_while_statement   : 14
empty                : 4 66 93 132
equality_expression  : 98 99 100 102 103
expression           : 22 23 26 30 31 32 34 50 53 54 55 56 61 63 71 76 77 77 79 80 80 81 82 83 83 84 84 85 86 86 87 88 94 95 126 135 135 136
expression_list      : 92 95
expression_list_opt  : 91
expression_opt       : 57 57
expression_statement : 
for_init             : 57
for_statement        : 15
function_call        : 72 127
function_call_statement : 19
function_definition  : 21
if_statement         : 12
increment_decrement  : 65
initializer_list     : 32 33 97
key_value            : 133 134
key_value_list       : 131 134
key_value_list_opt   : 130
left_hand_side       : 50 53
logical_expression   : 96 99 100
multiplicative_expression : 109 110 111 113 114 115
param                : 5 6
param_list           : 3 6
params               : 2
primary_expression   : 116
primitive_type       : 36 49
program              : 0
relational_expression : 101 102 103 105 106 107 108
return_statement     : 18
statement            : 8 9 22 54 55 55 56 57
statement_list       : 1 9 26 27 90
subscript_access     : 52 128
switch_statement     : 16
type_specifier       : 2 7 29 30 31 32 33 34 35 75 76 77
unary_expression     : 112 113 114 115 117
while_statement      : 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (8) statement_list -> . statement
    (9) statement_list -> . statement_list statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (9) statement_list -> statement_list . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    $end            reduce using rule 1 (program -> statement_list .)
    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    statement                      shift and go to state 52
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 3

    (8) statement_list -> statement .

    KEYWORD_IF      reduce using rule 8 (statement_list -> statement .)
    KEYWORD_WHILE   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_DO      reduce using rule 8 (statement_list -> statement .)
    KEYWORD_FOR     reduce using rule 8 (statement_list -> statement .)
    KEYWORD_SWITCH  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_BREAK   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_RETURN  reduce using rule 8 (statement_list -> statement .)
    LBRACE          reduce using rule 8 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 8 (statement_list -> statement .)
    SYSTEM_INPUT    reduce using rule 8 (statement_list -> statement .)
    SYSTEM_OUTPUT   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_EXIT    reduce using rule 8 (statement_list -> statement .)
    SYSTEM_SLEEP    reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_PUSH reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_POP  reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_SIZE reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_AVG  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_INT     reduce using rule 8 (statement_list -> statement .)
    KEYWORD_FLOAT   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_CHAR    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_VOID    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_STRING  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_BOOL    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_FILE    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_SOCKET  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_DICT    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_REGEX   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_ARRAY   reduce using rule 8 (statement_list -> statement .)
    $end            reduce using rule 8 (statement_list -> statement .)
    RBRACE          reduce using rule 8 (statement_list -> statement .)
    KEYWORD_CASE    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_DEFAULT reduce using rule 8 (statement_list -> statement .)


state 4

    (10) statement -> declaration_statement .

    KEYWORD_IF      reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_WHILE   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_DO      reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_FOR     reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_SWITCH  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_BREAK   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_RETURN  reduce using rule 10 (statement -> declaration_statement .)
    LBRACE          reduce using rule 10 (statement -> declaration_statement .)
    IDENTIFIER      reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_INPUT    reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_OUTPUT   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_EXIT    reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_SLEEP    reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_PUSH reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_POP  reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_SIZE reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_AVG  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_INT     reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_FLOAT   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_CHAR    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_VOID    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_STRING  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_BOOL    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_FILE    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_SOCKET  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_DICT    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_REGEX   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_ARRAY   reduce using rule 10 (statement -> declaration_statement .)
    $end            reduce using rule 10 (statement -> declaration_statement .)
    RBRACE          reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_ELSE    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_CASE    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_DEFAULT reduce using rule 10 (statement -> declaration_statement .)


state 5

    (11) statement -> assignment_statement .

    KEYWORD_IF      reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_WHILE   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_DO      reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_FOR     reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_SWITCH  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_BREAK   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_RETURN  reduce using rule 11 (statement -> assignment_statement .)
    LBRACE          reduce using rule 11 (statement -> assignment_statement .)
    IDENTIFIER      reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_INPUT    reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_OUTPUT   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_EXIT    reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_SLEEP    reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_PUSH reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_POP  reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_SIZE reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_AVG  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_INT     reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_FLOAT   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_CHAR    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_VOID    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_STRING  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_BOOL    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_FILE    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_SOCKET  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_DICT    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_REGEX   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_ARRAY   reduce using rule 11 (statement -> assignment_statement .)
    $end            reduce using rule 11 (statement -> assignment_statement .)
    RBRACE          reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_ELSE    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_CASE    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_DEFAULT reduce using rule 11 (statement -> assignment_statement .)


state 6

    (12) statement -> if_statement .

    KEYWORD_IF      reduce using rule 12 (statement -> if_statement .)
    KEYWORD_WHILE   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_DO      reduce using rule 12 (statement -> if_statement .)
    KEYWORD_FOR     reduce using rule 12 (statement -> if_statement .)
    KEYWORD_SWITCH  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_BREAK   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_RETURN  reduce using rule 12 (statement -> if_statement .)
    LBRACE          reduce using rule 12 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 12 (statement -> if_statement .)
    SYSTEM_INPUT    reduce using rule 12 (statement -> if_statement .)
    SYSTEM_OUTPUT   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_EXIT    reduce using rule 12 (statement -> if_statement .)
    SYSTEM_SLEEP    reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_PUSH reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_POP  reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_SIZE reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_AVG  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_INT     reduce using rule 12 (statement -> if_statement .)
    KEYWORD_FLOAT   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_CHAR    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_VOID    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_STRING  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_BOOL    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_FILE    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_SOCKET  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_DICT    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_REGEX   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_ARRAY   reduce using rule 12 (statement -> if_statement .)
    $end            reduce using rule 12 (statement -> if_statement .)
    RBRACE          reduce using rule 12 (statement -> if_statement .)
    KEYWORD_ELSE    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_CASE    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_DEFAULT reduce using rule 12 (statement -> if_statement .)


state 7

    (13) statement -> while_statement .

    KEYWORD_IF      reduce using rule 13 (statement -> while_statement .)
    KEYWORD_WHILE   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_DO      reduce using rule 13 (statement -> while_statement .)
    KEYWORD_FOR     reduce using rule 13 (statement -> while_statement .)
    KEYWORD_SWITCH  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_BREAK   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_RETURN  reduce using rule 13 (statement -> while_statement .)
    LBRACE          reduce using rule 13 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 13 (statement -> while_statement .)
    SYSTEM_INPUT    reduce using rule 13 (statement -> while_statement .)
    SYSTEM_OUTPUT   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_EXIT    reduce using rule 13 (statement -> while_statement .)
    SYSTEM_SLEEP    reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_PUSH reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_POP  reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_SIZE reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_AVG  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_INT     reduce using rule 13 (statement -> while_statement .)
    KEYWORD_FLOAT   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_CHAR    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_VOID    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_STRING  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_BOOL    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_FILE    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_SOCKET  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_DICT    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_REGEX   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_ARRAY   reduce using rule 13 (statement -> while_statement .)
    $end            reduce using rule 13 (statement -> while_statement .)
    RBRACE          reduce using rule 13 (statement -> while_statement .)
    KEYWORD_ELSE    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_CASE    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_DEFAULT reduce using rule 13 (statement -> while_statement .)


state 8

    (14) statement -> do_while_statement .

    KEYWORD_IF      reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_WHILE   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_DO      reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_FOR     reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_SWITCH  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_BREAK   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_RETURN  reduce using rule 14 (statement -> do_while_statement .)
    LBRACE          reduce using rule 14 (statement -> do_while_statement .)
    IDENTIFIER      reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_INPUT    reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_OUTPUT   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_EXIT    reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_SLEEP    reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_PUSH reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_POP  reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_SIZE reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_AVG  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_INT     reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_FLOAT   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_CHAR    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_VOID    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_STRING  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_BOOL    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_FILE    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_SOCKET  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_DICT    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_REGEX   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_ARRAY   reduce using rule 14 (statement -> do_while_statement .)
    $end            reduce using rule 14 (statement -> do_while_statement .)
    RBRACE          reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_ELSE    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_CASE    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_DEFAULT reduce using rule 14 (statement -> do_while_statement .)


state 9

    (15) statement -> for_statement .

    KEYWORD_IF      reduce using rule 15 (statement -> for_statement .)
    KEYWORD_WHILE   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_DO      reduce using rule 15 (statement -> for_statement .)
    KEYWORD_FOR     reduce using rule 15 (statement -> for_statement .)
    KEYWORD_SWITCH  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_BREAK   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_RETURN  reduce using rule 15 (statement -> for_statement .)
    LBRACE          reduce using rule 15 (statement -> for_statement .)
    IDENTIFIER      reduce using rule 15 (statement -> for_statement .)
    SYSTEM_INPUT    reduce using rule 15 (statement -> for_statement .)
    SYSTEM_OUTPUT   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_EXIT    reduce using rule 15 (statement -> for_statement .)
    SYSTEM_SLEEP    reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_PUSH reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_POP  reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_SIZE reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_AVG  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_INT     reduce using rule 15 (statement -> for_statement .)
    KEYWORD_FLOAT   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_CHAR    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_VOID    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_STRING  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_BOOL    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_FILE    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_SOCKET  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_DICT    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_REGEX   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_ARRAY   reduce using rule 15 (statement -> for_statement .)
    $end            reduce using rule 15 (statement -> for_statement .)
    RBRACE          reduce using rule 15 (statement -> for_statement .)
    KEYWORD_ELSE    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_CASE    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_DEFAULT reduce using rule 15 (statement -> for_statement .)


state 10

    (16) statement -> switch_statement .

    KEYWORD_IF      reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_WHILE   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_DO      reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_FOR     reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_SWITCH  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_BREAK   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_RETURN  reduce using rule 16 (statement -> switch_statement .)
    LBRACE          reduce using rule 16 (statement -> switch_statement .)
    IDENTIFIER      reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_INPUT    reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_OUTPUT   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_EXIT    reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_SLEEP    reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_PUSH reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_POP  reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_SIZE reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_AVG  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_INT     reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_FLOAT   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_CHAR    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_VOID    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_STRING  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_BOOL    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_FILE    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_SOCKET  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_DICT    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_REGEX   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_ARRAY   reduce using rule 16 (statement -> switch_statement .)
    $end            reduce using rule 16 (statement -> switch_statement .)
    RBRACE          reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_ELSE    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_CASE    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_DEFAULT reduce using rule 16 (statement -> switch_statement .)


state 11

    (17) statement -> break_statement .

    KEYWORD_IF      reduce using rule 17 (statement -> break_statement .)
    KEYWORD_WHILE   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_DO      reduce using rule 17 (statement -> break_statement .)
    KEYWORD_FOR     reduce using rule 17 (statement -> break_statement .)
    KEYWORD_SWITCH  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_BREAK   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_RETURN  reduce using rule 17 (statement -> break_statement .)
    LBRACE          reduce using rule 17 (statement -> break_statement .)
    IDENTIFIER      reduce using rule 17 (statement -> break_statement .)
    SYSTEM_INPUT    reduce using rule 17 (statement -> break_statement .)
    SYSTEM_OUTPUT   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_EXIT    reduce using rule 17 (statement -> break_statement .)
    SYSTEM_SLEEP    reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_PUSH reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_POP  reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_SIZE reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_AVG  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_INT     reduce using rule 17 (statement -> break_statement .)
    KEYWORD_FLOAT   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_CHAR    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_VOID    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_STRING  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_BOOL    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_FILE    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_SOCKET  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_DICT    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_REGEX   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_ARRAY   reduce using rule 17 (statement -> break_statement .)
    $end            reduce using rule 17 (statement -> break_statement .)
    RBRACE          reduce using rule 17 (statement -> break_statement .)
    KEYWORD_ELSE    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_CASE    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_DEFAULT reduce using rule 17 (statement -> break_statement .)


state 12

    (18) statement -> return_statement .

    KEYWORD_IF      reduce using rule 18 (statement -> return_statement .)
    KEYWORD_WHILE   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_DO      reduce using rule 18 (statement -> return_statement .)
    KEYWORD_FOR     reduce using rule 18 (statement -> return_statement .)
    KEYWORD_SWITCH  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_BREAK   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_RETURN  reduce using rule 18 (statement -> return_statement .)
    LBRACE          reduce using rule 18 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 18 (statement -> return_statement .)
    SYSTEM_INPUT    reduce using rule 18 (statement -> return_statement .)
    SYSTEM_OUTPUT   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_EXIT    reduce using rule 18 (statement -> return_statement .)
    SYSTEM_SLEEP    reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_PUSH reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_POP  reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_SIZE reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_AVG  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_INT     reduce using rule 18 (statement -> return_statement .)
    KEYWORD_FLOAT   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_CHAR    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_VOID    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_STRING  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_BOOL    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_FILE    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_SOCKET  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_DICT    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_REGEX   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_ARRAY   reduce using rule 18 (statement -> return_statement .)
    $end            reduce using rule 18 (statement -> return_statement .)
    RBRACE          reduce using rule 18 (statement -> return_statement .)
    KEYWORD_ELSE    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_CASE    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_DEFAULT reduce using rule 18 (statement -> return_statement .)


state 13

    (19) statement -> function_call_statement .

    KEYWORD_IF      reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_WHILE   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_DO      reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_FOR     reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_SWITCH  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_BREAK   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_RETURN  reduce using rule 19 (statement -> function_call_statement .)
    LBRACE          reduce using rule 19 (statement -> function_call_statement .)
    IDENTIFIER      reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_INPUT    reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_OUTPUT   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_EXIT    reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_SLEEP    reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_PUSH reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_POP  reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_SIZE reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_AVG  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_INT     reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_FLOAT   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_CHAR    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_VOID    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_STRING  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_BOOL    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_FILE    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_SOCKET  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_DICT    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_REGEX   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_ARRAY   reduce using rule 19 (statement -> function_call_statement .)
    $end            reduce using rule 19 (statement -> function_call_statement .)
    RBRACE          reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_ELSE    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_CASE    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_DEFAULT reduce using rule 19 (statement -> function_call_statement .)


state 14

    (20) statement -> block_statement .

    KEYWORD_IF      reduce using rule 20 (statement -> block_statement .)
    KEYWORD_WHILE   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_DO      reduce using rule 20 (statement -> block_statement .)
    KEYWORD_FOR     reduce using rule 20 (statement -> block_statement .)
    KEYWORD_SWITCH  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_BREAK   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_RETURN  reduce using rule 20 (statement -> block_statement .)
    LBRACE          reduce using rule 20 (statement -> block_statement .)
    IDENTIFIER      reduce using rule 20 (statement -> block_statement .)
    SYSTEM_INPUT    reduce using rule 20 (statement -> block_statement .)
    SYSTEM_OUTPUT   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_EXIT    reduce using rule 20 (statement -> block_statement .)
    SYSTEM_SLEEP    reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_PUSH reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_POP  reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_SIZE reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_AVG  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_INT     reduce using rule 20 (statement -> block_statement .)
    KEYWORD_FLOAT   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_CHAR    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_VOID    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_STRING  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_BOOL    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_FILE    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_SOCKET  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_DICT    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_REGEX   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_ARRAY   reduce using rule 20 (statement -> block_statement .)
    $end            reduce using rule 20 (statement -> block_statement .)
    RBRACE          reduce using rule 20 (statement -> block_statement .)
    KEYWORD_ELSE    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_CASE    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_DEFAULT reduce using rule 20 (statement -> block_statement .)


state 15

    (21) statement -> function_definition .

    KEYWORD_IF      reduce using rule 21 (statement -> function_definition .)
    KEYWORD_WHILE   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_DO      reduce using rule 21 (statement -> function_definition .)
    KEYWORD_FOR     reduce using rule 21 (statement -> function_definition .)
    KEYWORD_SWITCH  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_BREAK   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_RETURN  reduce using rule 21 (statement -> function_definition .)
    LBRACE          reduce using rule 21 (statement -> function_definition .)
    IDENTIFIER      reduce using rule 21 (statement -> function_definition .)
    SYSTEM_INPUT    reduce using rule 21 (statement -> function_definition .)
    SYSTEM_OUTPUT   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_EXIT    reduce using rule 21 (statement -> function_definition .)
    SYSTEM_SLEEP    reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_PUSH reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_POP  reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_SIZE reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_CONTAINS reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_INDEXOF reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_AVG  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_INT     reduce using rule 21 (statement -> function_definition .)
    KEYWORD_FLOAT   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_CHAR    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_VOID    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_STRING  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_BOOL    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_FILE    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_SOCKET  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_DICT    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_REGEX   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_ARRAY   reduce using rule 21 (statement -> function_definition .)
    $end            reduce using rule 21 (statement -> function_definition .)
    RBRACE          reduce using rule 21 (statement -> function_definition .)
    KEYWORD_ELSE    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_CASE    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_DEFAULT reduce using rule 21 (statement -> function_definition .)


state 16

    (29) declaration_statement -> type_specifier . IDENTIFIER SEMICOLON
    (30) declaration_statement -> type_specifier . IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (2) function_definition -> type_specifier . IDENTIFIER LPAREN params RPAREN block_statement

    IDENTIFIER      shift and go to state 53


state 17

    (51) left_hand_side -> IDENTIFIER .
    (73) function_call -> IDENTIFIER . LPAREN argument_list RPAREN
    (74) function_call -> IDENTIFIER . LPAREN RPAREN
    (136) subscript_access -> IDENTIFIER . LBRACKET expression RBRACKET

    ASSIGN          reduce using rule 51 (left_hand_side -> IDENTIFIER .)
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 55


state 18

    (50) assignment_statement -> left_hand_side . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 56


state 19

    (54) if_statement -> KEYWORD_IF . LPAREN expression RPAREN statement
    (55) if_statement -> KEYWORD_IF . LPAREN expression RPAREN statement KEYWORD_ELSE statement

    LPAREN          shift and go to state 57


state 20

    (56) while_statement -> KEYWORD_WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 58


state 21

    (22) do_while_statement -> KEYWORD_DO . statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    statement                      shift and go to state 59
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 22

    (57) for_statement -> KEYWORD_FOR . LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement

    LPAREN          shift and go to state 60


state 23

    (23) switch_statement -> KEYWORD_SWITCH . LPAREN expression RPAREN LBRACE case_list RBRACE

    LPAREN          shift and go to state 61


state 24

    (89) block_statement -> LBRACE . RBRACE
    (90) block_statement -> LBRACE . statement_list RBRACE
    (8) statement_list -> . statement
    (9) statement_list -> . statement_list statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    RBRACE          shift and go to state 62
    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    statement_list                 shift and go to state 63
    statement                      shift and go to state 3
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 25

    (28) break_statement -> KEYWORD_BREAK . SEMICOLON

    SEMICOLON       shift and go to state 64


state 26

    (70) return_statement -> KEYWORD_RETURN . SEMICOLON
    (71) return_statement -> KEYWORD_RETURN . expression SEMICOLON
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    SEMICOLON       shift and go to state 65
    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 66
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 27

    (72) function_call_statement -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 90


state 28

    (36) type_specifier -> primitive_type .
    (49) array_type -> primitive_type . LBRACKET RBRACKET

    IDENTIFIER      reduce using rule 36 (type_specifier -> primitive_type .)
    RPAREN          reduce using rule 36 (type_specifier -> primitive_type .)
    COMMA           reduce using rule 36 (type_specifier -> primitive_type .)
    LBRACKET        shift and go to state 91


state 29

    (37) type_specifier -> array_type .

    IDENTIFIER      reduce using rule 37 (type_specifier -> array_type .)
    RPAREN          reduce using rule 37 (type_specifier -> array_type .)
    COMMA           reduce using rule 37 (type_specifier -> array_type .)


state 30

    (52) left_hand_side -> subscript_access .

    ASSIGN          reduce using rule 52 (left_hand_side -> subscript_access .)


state 31

    (75) function_call -> SYSTEM_INPUT . LPAREN IDENTIFIER COMMA type_specifier RPAREN

    LPAREN          shift and go to state 92


state 32

    (76) function_call -> SYSTEM_OUTPUT . LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> SYSTEM_OUTPUT . LPAREN expression COMMA type_specifier COMMA expression RPAREN

    LPAREN          shift and go to state 93


state 33

    (78) function_call -> KEYWORD_EXIT . LPAREN RPAREN

    LPAREN          shift and go to state 94


state 34

    (79) function_call -> SYSTEM_SLEEP . LPAREN expression RPAREN

    LPAREN          shift and go to state 95


state 35

    (80) function_call -> SYSTEM_ARR_PUSH . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 96


state 36

    (81) function_call -> SYSTEM_ARR_POP . LPAREN expression RPAREN

    LPAREN          shift and go to state 97


state 37

    (82) function_call -> SYSTEM_ARR_SIZE . LPAREN expression RPAREN

    LPAREN          shift and go to state 98


state 38

    (83) function_call -> SYSTEM_ARR_CONTAINS . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 99


state 39

    (84) function_call -> SYSTEM_ARR_INDEXOF . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 100


state 40

    (85) function_call -> SYSTEM_ARR_AVG . LPAREN expression RPAREN
    (86) function_call -> SYSTEM_ARR_AVG . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 101


state 41

    (38) primitive_type -> KEYWORD_INT .

    LBRACKET        reduce using rule 38 (primitive_type -> KEYWORD_INT .)
    IDENTIFIER      reduce using rule 38 (primitive_type -> KEYWORD_INT .)
    RPAREN          reduce using rule 38 (primitive_type -> KEYWORD_INT .)
    COMMA           reduce using rule 38 (primitive_type -> KEYWORD_INT .)


state 42

    (39) primitive_type -> KEYWORD_FLOAT .

    LBRACKET        reduce using rule 39 (primitive_type -> KEYWORD_FLOAT .)
    IDENTIFIER      reduce using rule 39 (primitive_type -> KEYWORD_FLOAT .)
    RPAREN          reduce using rule 39 (primitive_type -> KEYWORD_FLOAT .)
    COMMA           reduce using rule 39 (primitive_type -> KEYWORD_FLOAT .)


state 43

    (40) primitive_type -> KEYWORD_CHAR .

    LBRACKET        reduce using rule 40 (primitive_type -> KEYWORD_CHAR .)
    IDENTIFIER      reduce using rule 40 (primitive_type -> KEYWORD_CHAR .)
    RPAREN          reduce using rule 40 (primitive_type -> KEYWORD_CHAR .)
    COMMA           reduce using rule 40 (primitive_type -> KEYWORD_CHAR .)


state 44

    (41) primitive_type -> KEYWORD_VOID .

    LBRACKET        reduce using rule 41 (primitive_type -> KEYWORD_VOID .)
    IDENTIFIER      reduce using rule 41 (primitive_type -> KEYWORD_VOID .)
    RPAREN          reduce using rule 41 (primitive_type -> KEYWORD_VOID .)
    COMMA           reduce using rule 41 (primitive_type -> KEYWORD_VOID .)


state 45

    (42) primitive_type -> KEYWORD_STRING .

    LBRACKET        reduce using rule 42 (primitive_type -> KEYWORD_STRING .)
    IDENTIFIER      reduce using rule 42 (primitive_type -> KEYWORD_STRING .)
    RPAREN          reduce using rule 42 (primitive_type -> KEYWORD_STRING .)
    COMMA           reduce using rule 42 (primitive_type -> KEYWORD_STRING .)


state 46

    (43) primitive_type -> KEYWORD_BOOL .

    LBRACKET        reduce using rule 43 (primitive_type -> KEYWORD_BOOL .)
    IDENTIFIER      reduce using rule 43 (primitive_type -> KEYWORD_BOOL .)
    RPAREN          reduce using rule 43 (primitive_type -> KEYWORD_BOOL .)
    COMMA           reduce using rule 43 (primitive_type -> KEYWORD_BOOL .)


state 47

    (44) primitive_type -> KEYWORD_FILE .

    LBRACKET        reduce using rule 44 (primitive_type -> KEYWORD_FILE .)
    IDENTIFIER      reduce using rule 44 (primitive_type -> KEYWORD_FILE .)
    RPAREN          reduce using rule 44 (primitive_type -> KEYWORD_FILE .)
    COMMA           reduce using rule 44 (primitive_type -> KEYWORD_FILE .)


state 48

    (45) primitive_type -> KEYWORD_SOCKET .

    LBRACKET        reduce using rule 45 (primitive_type -> KEYWORD_SOCKET .)
    IDENTIFIER      reduce using rule 45 (primitive_type -> KEYWORD_SOCKET .)
    RPAREN          reduce using rule 45 (primitive_type -> KEYWORD_SOCKET .)
    COMMA           reduce using rule 45 (primitive_type -> KEYWORD_SOCKET .)


state 49

    (46) primitive_type -> KEYWORD_DICT .

    LBRACKET        reduce using rule 46 (primitive_type -> KEYWORD_DICT .)
    IDENTIFIER      reduce using rule 46 (primitive_type -> KEYWORD_DICT .)
    RPAREN          reduce using rule 46 (primitive_type -> KEYWORD_DICT .)
    COMMA           reduce using rule 46 (primitive_type -> KEYWORD_DICT .)


state 50

    (47) primitive_type -> KEYWORD_REGEX .

    LBRACKET        reduce using rule 47 (primitive_type -> KEYWORD_REGEX .)
    IDENTIFIER      reduce using rule 47 (primitive_type -> KEYWORD_REGEX .)
    RPAREN          reduce using rule 47 (primitive_type -> KEYWORD_REGEX .)
    COMMA           reduce using rule 47 (primitive_type -> KEYWORD_REGEX .)


state 51

    (48) primitive_type -> KEYWORD_ARRAY .

    LBRACKET        reduce using rule 48 (primitive_type -> KEYWORD_ARRAY .)
    IDENTIFIER      reduce using rule 48 (primitive_type -> KEYWORD_ARRAY .)
    RPAREN          reduce using rule 48 (primitive_type -> KEYWORD_ARRAY .)
    COMMA           reduce using rule 48 (primitive_type -> KEYWORD_ARRAY .)


state 52

    (9) statement_list -> statement_list statement .

    KEYWORD_IF      reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_WHILE   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_DO      reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_FOR     reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_SWITCH  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_BREAK   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_RETURN  reduce using rule 9 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 9 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_INPUT    reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_OUTPUT   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_EXIT    reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_SLEEP    reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_PUSH reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_POP  reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_SIZE reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_AVG  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_INT     reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_FLOAT   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_CHAR    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_VOID    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_STRING  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_BOOL    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_FILE    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_SOCKET  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_DICT    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_REGEX   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_ARRAY   reduce using rule 9 (statement_list -> statement_list statement .)
    $end            reduce using rule 9 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_CASE    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_DEFAULT reduce using rule 9 (statement_list -> statement_list statement .)


state 53

    (29) declaration_statement -> type_specifier IDENTIFIER . SEMICOLON
    (30) declaration_statement -> type_specifier IDENTIFIER . ASSIGN expression SEMICOLON
    (31) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET SEMICOLON
    (2) function_definition -> type_specifier IDENTIFIER . LPAREN params RPAREN block_statement

    SEMICOLON       shift and go to state 102
    ASSIGN          shift and go to state 103
    LBRACKET        shift and go to state 104
    LPAREN          shift and go to state 105


state 54

    (73) function_call -> IDENTIFIER LPAREN . argument_list RPAREN
    (74) function_call -> IDENTIFIER LPAREN . RPAREN
    (87) argument_list -> . expression
    (88) argument_list -> . argument_list COMMA expression
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RPAREN          shift and go to state 107
    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    argument_list                  shift and go to state 106
    expression                     shift and go to state 108
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 55

    (136) subscript_access -> IDENTIFIER LBRACKET . expression RBRACKET
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 109
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 56

    (50) assignment_statement -> left_hand_side ASSIGN . expression SEMICOLON
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 110
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 57

    (54) if_statement -> KEYWORD_IF LPAREN . expression RPAREN statement
    (55) if_statement -> KEYWORD_IF LPAREN . expression RPAREN statement KEYWORD_ELSE statement
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 111
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 58

    (56) while_statement -> KEYWORD_WHILE LPAREN . expression RPAREN statement
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 112
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 59

    (22) do_while_statement -> KEYWORD_DO statement . KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON

    KEYWORD_WHILE   shift and go to state 113


state 60

    (57) for_statement -> KEYWORD_FOR LPAREN . for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (58) for_init -> . assignment_statement_no_semi SEMICOLON
    (59) for_init -> . declaration_statement
    (60) for_init -> . SEMICOLON
    (53) assignment_statement_no_semi -> . left_hand_side ASSIGN expression
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET

    SEMICOLON       shift and go to state 115
    IDENTIFIER      shift and go to state 120
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    for_init                       shift and go to state 114
    assignment_statement_no_semi   shift and go to state 116
    declaration_statement          shift and go to state 117
    left_hand_side                 shift and go to state 118
    type_specifier                 shift and go to state 119
    subscript_access               shift and go to state 30
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29

state 61

    (23) switch_statement -> KEYWORD_SWITCH LPAREN . expression RPAREN LBRACE case_list RBRACE
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 121
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 62

    (89) block_statement -> LBRACE RBRACE .

    KEYWORD_IF      reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_WHILE   reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_DO      reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_FOR     reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_SWITCH  reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_BREAK   reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_RETURN  reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    LBRACE          reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    SYSTEM_INPUT    reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    SYSTEM_OUTPUT   reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_EXIT    reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    SYSTEM_SLEEP    reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_PUSH reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_POP  reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_SIZE reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_CONTAINS reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_INDEXOF reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_AVG  reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_INT     reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_FLOAT   reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_CHAR    reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_VOID    reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_STRING  reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_BOOL    reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_FILE    reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_SOCKET  reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_DICT    reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_REGEX   reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_ARRAY   reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    $end            reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    RBRACE          reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_ELSE    reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_CASE    reduce using rule 89 (block_statement -> LBRACE RBRACE .)
    KEYWORD_DEFAULT reduce using rule 89 (block_statement -> LBRACE RBRACE .)


state 63

    (90) block_statement -> LBRACE statement_list . RBRACE
    (9) statement_list -> statement_list . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    RBRACE          shift and go to state 122
    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    statement                      shift and go to state 52
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 64

    (28) break_statement -> KEYWORD_BREAK SEMICOLON .

    KEYWORD_IF      reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_DO      reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_FOR     reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    LBRACE          reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_INT     reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_VOID    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_STRING  reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_FILE    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_DICT    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    $end            reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    RBRACE          reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_CASE    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)


state 65

    (70) return_statement -> KEYWORD_RETURN SEMICOLON .

    KEYWORD_IF      reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_DO      reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_FOR     reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    LBRACE          reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_INT     reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_VOID    reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_STRING  reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_FILE    reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_DICT    reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    $end            reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    RBRACE          reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_CASE    reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 70 (return_statement -> KEYWORD_RETURN SEMICOLON .)


state 66

    (71) return_statement -> KEYWORD_RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 123


state 67

    (96) expression -> logical_expression .
    (99) logical_expression -> logical_expression . AND equality_expression
    (100) logical_expression -> logical_expression . OR equality_expression

    SEMICOLON       reduce using rule 96 (expression -> logical_expression .)
    RPAREN          reduce using rule 96 (expression -> logical_expression .)
    COMMA           reduce using rule 96 (expression -> logical_expression .)
    RBRACKET        reduce using rule 96 (expression -> logical_expression .)
    COLON           reduce using rule 96 (expression -> logical_expression .)
    RBRACE          reduce using rule 96 (expression -> logical_expression .)
    AND             shift and go to state 124
    OR              shift and go to state 125


state 68

    (97) expression -> initializer_list .

    SEMICOLON       reduce using rule 97 (expression -> initializer_list .)
    RPAREN          reduce using rule 97 (expression -> initializer_list .)
    COMMA           reduce using rule 97 (expression -> initializer_list .)
    RBRACKET        reduce using rule 97 (expression -> initializer_list .)
    COLON           reduce using rule 97 (expression -> initializer_list .)
    RBRACE          reduce using rule 97 (expression -> initializer_list .)


state 69

    (98) logical_expression -> equality_expression .
    (102) equality_expression -> equality_expression . EQ relational_expression
    (103) equality_expression -> equality_expression . NEQ relational_expression

    AND             reduce using rule 98 (logical_expression -> equality_expression .)
    OR              reduce using rule 98 (logical_expression -> equality_expression .)
    SEMICOLON       reduce using rule 98 (logical_expression -> equality_expression .)
    RPAREN          reduce using rule 98 (logical_expression -> equality_expression .)
    COMMA           reduce using rule 98 (logical_expression -> equality_expression .)
    RBRACKET        reduce using rule 98 (logical_expression -> equality_expression .)
    COLON           reduce using rule 98 (logical_expression -> equality_expression .)
    RBRACE          reduce using rule 98 (logical_expression -> equality_expression .)
    EQ              shift and go to state 126
    NEQ             shift and go to state 127


state 70

    (91) initializer_list -> LBRACKET . expression_list_opt RBRACKET
    (92) expression_list_opt -> . expression_list
    (93) expression_list_opt -> . empty
    (94) expression_list -> . expression
    (95) expression_list -> . expression_list COMMA expression
    (69) empty -> .
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RBRACKET        reduce using rule 69 (empty -> .)
    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression_list_opt            shift and go to state 128
    expression_list                shift and go to state 129
    empty                          shift and go to state 130
    expression                     shift and go to state 131
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 71

    (101) equality_expression -> relational_expression .
    (105) relational_expression -> relational_expression . GT additive_expression
    (106) relational_expression -> relational_expression . LT additive_expression
    (107) relational_expression -> relational_expression . GEQ additive_expression
    (108) relational_expression -> relational_expression . LEQ additive_expression

    EQ              reduce using rule 101 (equality_expression -> relational_expression .)
    NEQ             reduce using rule 101 (equality_expression -> relational_expression .)
    AND             reduce using rule 101 (equality_expression -> relational_expression .)
    OR              reduce using rule 101 (equality_expression -> relational_expression .)
    SEMICOLON       reduce using rule 101 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 101 (equality_expression -> relational_expression .)
    COMMA           reduce using rule 101 (equality_expression -> relational_expression .)
    RBRACKET        reduce using rule 101 (equality_expression -> relational_expression .)
    COLON           reduce using rule 101 (equality_expression -> relational_expression .)
    RBRACE          reduce using rule 101 (equality_expression -> relational_expression .)
    GT              shift and go to state 132
    LT              shift and go to state 133
    GEQ             shift and go to state 134
    LEQ             shift and go to state 135


state 72

    (104) relational_expression -> additive_expression .
    (110) additive_expression -> additive_expression . PLUS multiplicative_expression
    (111) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 104 (relational_expression -> additive_expression .)
    LT              reduce using rule 104 (relational_expression -> additive_expression .)
    GEQ             reduce using rule 104 (relational_expression -> additive_expression .)
    LEQ             reduce using rule 104 (relational_expression -> additive_expression .)
    EQ              reduce using rule 104 (relational_expression -> additive_expression .)
    NEQ             reduce using rule 104 (relational_expression -> additive_expression .)
    AND             reduce using rule 104 (relational_expression -> additive_expression .)
    OR              reduce using rule 104 (relational_expression -> additive_expression .)
    SEMICOLON       reduce using rule 104 (relational_expression -> additive_expression .)
    RPAREN          reduce using rule 104 (relational_expression -> additive_expression .)
    COMMA           reduce using rule 104 (relational_expression -> additive_expression .)
    RBRACKET        reduce using rule 104 (relational_expression -> additive_expression .)
    COLON           reduce using rule 104 (relational_expression -> additive_expression .)
    RBRACE          reduce using rule 104 (relational_expression -> additive_expression .)
    PLUS            shift and go to state 136
    MINUS           shift and go to state 137


state 73

    (109) additive_expression -> multiplicative_expression .
    (113) multiplicative_expression -> multiplicative_expression . MUL unary_expression
    (114) multiplicative_expression -> multiplicative_expression . DIV unary_expression
    (115) multiplicative_expression -> multiplicative_expression . MOD unary_expression

    PLUS            reduce using rule 109 (additive_expression -> multiplicative_expression .)
    MINUS           reduce using rule 109 (additive_expression -> multiplicative_expression .)
    GT              reduce using rule 109 (additive_expression -> multiplicative_expression .)
    LT              reduce using rule 109 (additive_expression -> multiplicative_expression .)
    GEQ             reduce using rule 109 (additive_expression -> multiplicative_expression .)
    LEQ             reduce using rule 109 (additive_expression -> multiplicative_expression .)
    EQ              reduce using rule 109 (additive_expression -> multiplicative_expression .)
    NEQ             reduce using rule 109 (additive_expression -> multiplicative_expression .)
    AND             reduce using rule 109 (additive_expression -> multiplicative_expression .)
    OR              reduce using rule 109 (additive_expression -> multiplicative_expression .)
    SEMICOLON       reduce using rule 109 (additive_expression -> multiplicative_expression .)
    RPAREN          reduce using rule 109 (additive_expression -> multiplicative_expression .)
    COMMA           reduce using rule 109 (additive_expression -> multiplicative_expression .)
    RBRACKET        reduce using rule 109 (additive_expression -> multiplicative_expression .)
    COLON           reduce using rule 109 (additive_expression -> multiplicative_expression .)
    RBRACE          reduce using rule 109 (additive_expression -> multiplicative_expression .)
    MUL             shift and go to state 138
    DIV             shift and go to state 139
    MOD             shift and go to state 140


state 74

    (117) unary_expression -> MINUS . unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    unary_expression               shift and go to state 141
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 75

    (112) multiplicative_expression -> unary_expression .

    MUL             reduce using rule 112 (multiplicative_expression -> unary_expression .)
    DIV             reduce using rule 112 (multiplicative_expression -> unary_expression .)
    MOD             reduce using rule 112 (multiplicative_expression -> unary_expression .)
    PLUS            reduce using rule 112 (multiplicative_expression -> unary_expression .)
    MINUS           reduce using rule 112 (multiplicative_expression -> unary_expression .)
    GT              reduce using rule 112 (multiplicative_expression -> unary_expression .)
    LT              reduce using rule 112 (multiplicative_expression -> unary_expression .)
    GEQ             reduce using rule 112 (multiplicative_expression -> unary_expression .)
    LEQ             reduce using rule 112 (multiplicative_expression -> unary_expression .)
    EQ              reduce using rule 112 (multiplicative_expression -> unary_expression .)
    NEQ             reduce using rule 112 (multiplicative_expression -> unary_expression .)
    AND             reduce using rule 112 (multiplicative_expression -> unary_expression .)
    OR              reduce using rule 112 (multiplicative_expression -> unary_expression .)
    SEMICOLON       reduce using rule 112 (multiplicative_expression -> unary_expression .)
    RPAREN          reduce using rule 112 (multiplicative_expression -> unary_expression .)
    COMMA           reduce using rule 112 (multiplicative_expression -> unary_expression .)
    RBRACKET        reduce using rule 112 (multiplicative_expression -> unary_expression .)
    COLON           reduce using rule 112 (multiplicative_expression -> unary_expression .)
    RBRACE          reduce using rule 112 (multiplicative_expression -> unary_expression .)


state 76

    (116) unary_expression -> primary_expression .

    MUL             reduce using rule 116 (unary_expression -> primary_expression .)
    DIV             reduce using rule 116 (unary_expression -> primary_expression .)
    MOD             reduce using rule 116 (unary_expression -> primary_expression .)
    PLUS            reduce using rule 116 (unary_expression -> primary_expression .)
    MINUS           reduce using rule 116 (unary_expression -> primary_expression .)
    GT              reduce using rule 116 (unary_expression -> primary_expression .)
    LT              reduce using rule 116 (unary_expression -> primary_expression .)
    GEQ             reduce using rule 116 (unary_expression -> primary_expression .)
    LEQ             reduce using rule 116 (unary_expression -> primary_expression .)
    EQ              reduce using rule 116 (unary_expression -> primary_expression .)
    NEQ             reduce using rule 116 (unary_expression -> primary_expression .)
    AND             reduce using rule 116 (unary_expression -> primary_expression .)
    OR              reduce using rule 116 (unary_expression -> primary_expression .)
    SEMICOLON       reduce using rule 116 (unary_expression -> primary_expression .)
    RPAREN          reduce using rule 116 (unary_expression -> primary_expression .)
    COMMA           reduce using rule 116 (unary_expression -> primary_expression .)
    RBRACKET        reduce using rule 116 (unary_expression -> primary_expression .)
    COLON           reduce using rule 116 (unary_expression -> primary_expression .)
    RBRACE          reduce using rule 116 (unary_expression -> primary_expression .)


state 77

    (118) primary_expression -> IDENTIFIER .
    (73) function_call -> IDENTIFIER . LPAREN argument_list RPAREN
    (74) function_call -> IDENTIFIER . LPAREN RPAREN
    (136) subscript_access -> IDENTIFIER . LBRACKET expression RBRACKET

    MUL             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    DIV             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    MOD             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    PLUS            reduce using rule 118 (primary_expression -> IDENTIFIER .)
    MINUS           reduce using rule 118 (primary_expression -> IDENTIFIER .)
    GT              reduce using rule 118 (primary_expression -> IDENTIFIER .)
    LT              reduce using rule 118 (primary_expression -> IDENTIFIER .)
    GEQ             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    LEQ             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    EQ              reduce using rule 118 (primary_expression -> IDENTIFIER .)
    NEQ             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    AND             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    OR              reduce using rule 118 (primary_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 118 (primary_expression -> IDENTIFIER .)
    RPAREN          reduce using rule 118 (primary_expression -> IDENTIFIER .)
    COMMA           reduce using rule 118 (primary_expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 118 (primary_expression -> IDENTIFIER .)
    COLON           reduce using rule 118 (primary_expression -> IDENTIFIER .)
    RBRACE          reduce using rule 118 (primary_expression -> IDENTIFIER .)
    LPAREN          shift and go to state 54
    LBRACKET        shift and go to state 55


state 78

    (119) primary_expression -> INT_LITERAL .

    MUL             reduce using rule 119 (primary_expression -> INT_LITERAL .)
    DIV             reduce using rule 119 (primary_expression -> INT_LITERAL .)
    MOD             reduce using rule 119 (primary_expression -> INT_LITERAL .)
    PLUS            reduce using rule 119 (primary_expression -> INT_LITERAL .)
    MINUS           reduce using rule 119 (primary_expression -> INT_LITERAL .)
    GT              reduce using rule 119 (primary_expression -> INT_LITERAL .)
    LT              reduce using rule 119 (primary_expression -> INT_LITERAL .)
    GEQ             reduce using rule 119 (primary_expression -> INT_LITERAL .)
    LEQ             reduce using rule 119 (primary_expression -> INT_LITERAL .)
    EQ              reduce using rule 119 (primary_expression -> INT_LITERAL .)
    NEQ             reduce using rule 119 (primary_expression -> INT_LITERAL .)
    AND             reduce using rule 119 (primary_expression -> INT_LITERAL .)
    OR              reduce using rule 119 (primary_expression -> INT_LITERAL .)
    SEMICOLON       reduce using rule 119 (primary_expression -> INT_LITERAL .)
    RPAREN          reduce using rule 119 (primary_expression -> INT_LITERAL .)
    COMMA           reduce using rule 119 (primary_expression -> INT_LITERAL .)
    RBRACKET        reduce using rule 119 (primary_expression -> INT_LITERAL .)
    COLON           reduce using rule 119 (primary_expression -> INT_LITERAL .)
    RBRACE          reduce using rule 119 (primary_expression -> INT_LITERAL .)


state 79

    (120) primary_expression -> FLOAT_LITERAL .

    MUL             reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    DIV             reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    MOD             reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    PLUS            reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    MINUS           reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    GT              reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    LT              reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    GEQ             reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    LEQ             reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    EQ              reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    NEQ             reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    AND             reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    OR              reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    SEMICOLON       reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    RPAREN          reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    COMMA           reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    RBRACKET        reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    COLON           reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)
    RBRACE          reduce using rule 120 (primary_expression -> FLOAT_LITERAL .)


state 80

    (121) primary_expression -> STRING_LITERAL .

    MUL             reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    DIV             reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    MOD             reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    PLUS            reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    MINUS           reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    GT              reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    LT              reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    GEQ             reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    LEQ             reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    EQ              reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    NEQ             reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    AND             reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    OR              reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    RPAREN          reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    COMMA           reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    RBRACKET        reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    COLON           reduce using rule 121 (primary_expression -> STRING_LITERAL .)
    RBRACE          reduce using rule 121 (primary_expression -> STRING_LITERAL .)


state 81

    (122) primary_expression -> CHAR_LITERAL .

    MUL             reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    DIV             reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    MOD             reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    PLUS            reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    MINUS           reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    GT              reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    LT              reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    GEQ             reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    LEQ             reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    EQ              reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    NEQ             reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    AND             reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    OR              reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    SEMICOLON       reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    RPAREN          reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    COMMA           reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    RBRACKET        reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    COLON           reduce using rule 122 (primary_expression -> CHAR_LITERAL .)
    RBRACE          reduce using rule 122 (primary_expression -> CHAR_LITERAL .)


state 82

    (123) primary_expression -> KEYWORD_TRUE .

    MUL             reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    DIV             reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    MOD             reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    PLUS            reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    MINUS           reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    GT              reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    LT              reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    GEQ             reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    LEQ             reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    EQ              reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    NEQ             reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    AND             reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    OR              reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    SEMICOLON       reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    RPAREN          reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    COMMA           reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    RBRACKET        reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    COLON           reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)
    RBRACE          reduce using rule 123 (primary_expression -> KEYWORD_TRUE .)


state 83

    (124) primary_expression -> KEYWORD_FALSE .

    MUL             reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    DIV             reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    MOD             reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    PLUS            reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    MINUS           reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    GT              reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    LT              reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    GEQ             reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    LEQ             reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    EQ              reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    NEQ             reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    AND             reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    OR              reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    SEMICOLON       reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    RPAREN          reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    COMMA           reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    RBRACKET        reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    COLON           reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)
    RBRACE          reduce using rule 124 (primary_expression -> KEYWORD_FALSE .)


state 84

    (125) primary_expression -> KEYWORD_NULL .

    MUL             reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    DIV             reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    MOD             reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    PLUS            reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    MINUS           reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    GT              reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    LT              reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    GEQ             reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    LEQ             reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    EQ              reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    NEQ             reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    AND             reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    OR              reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    SEMICOLON       reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    RPAREN          reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    COMMA           reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    RBRACKET        reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    COLON           reduce using rule 125 (primary_expression -> KEYWORD_NULL .)
    RBRACE          reduce using rule 125 (primary_expression -> KEYWORD_NULL .)


state 85

    (126) primary_expression -> LPAREN . expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 142
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 86

    (127) primary_expression -> function_call .

    MUL             reduce using rule 127 (primary_expression -> function_call .)
    DIV             reduce using rule 127 (primary_expression -> function_call .)
    MOD             reduce using rule 127 (primary_expression -> function_call .)
    PLUS            reduce using rule 127 (primary_expression -> function_call .)
    MINUS           reduce using rule 127 (primary_expression -> function_call .)
    GT              reduce using rule 127 (primary_expression -> function_call .)
    LT              reduce using rule 127 (primary_expression -> function_call .)
    GEQ             reduce using rule 127 (primary_expression -> function_call .)
    LEQ             reduce using rule 127 (primary_expression -> function_call .)
    EQ              reduce using rule 127 (primary_expression -> function_call .)
    NEQ             reduce using rule 127 (primary_expression -> function_call .)
    AND             reduce using rule 127 (primary_expression -> function_call .)
    OR              reduce using rule 127 (primary_expression -> function_call .)
    SEMICOLON       reduce using rule 127 (primary_expression -> function_call .)
    RPAREN          reduce using rule 127 (primary_expression -> function_call .)
    COMMA           reduce using rule 127 (primary_expression -> function_call .)
    RBRACKET        reduce using rule 127 (primary_expression -> function_call .)
    COLON           reduce using rule 127 (primary_expression -> function_call .)
    RBRACE          reduce using rule 127 (primary_expression -> function_call .)


state 87

    (128) primary_expression -> subscript_access .

    MUL             reduce using rule 128 (primary_expression -> subscript_access .)
    DIV             reduce using rule 128 (primary_expression -> subscript_access .)
    MOD             reduce using rule 128 (primary_expression -> subscript_access .)
    PLUS            reduce using rule 128 (primary_expression -> subscript_access .)
    MINUS           reduce using rule 128 (primary_expression -> subscript_access .)
    GT              reduce using rule 128 (primary_expression -> subscript_access .)
    LT              reduce using rule 128 (primary_expression -> subscript_access .)
    GEQ             reduce using rule 128 (primary_expression -> subscript_access .)
    LEQ             reduce using rule 128 (primary_expression -> subscript_access .)
    EQ              reduce using rule 128 (primary_expression -> subscript_access .)
    NEQ             reduce using rule 128 (primary_expression -> subscript_access .)
    AND             reduce using rule 128 (primary_expression -> subscript_access .)
    OR              reduce using rule 128 (primary_expression -> subscript_access .)
    SEMICOLON       reduce using rule 128 (primary_expression -> subscript_access .)
    RPAREN          reduce using rule 128 (primary_expression -> subscript_access .)
    COMMA           reduce using rule 128 (primary_expression -> subscript_access .)
    RBRACKET        reduce using rule 128 (primary_expression -> subscript_access .)
    COLON           reduce using rule 128 (primary_expression -> subscript_access .)
    RBRACE          reduce using rule 128 (primary_expression -> subscript_access .)


state 88

    (129) primary_expression -> dictionary_literal .

    MUL             reduce using rule 129 (primary_expression -> dictionary_literal .)
    DIV             reduce using rule 129 (primary_expression -> dictionary_literal .)
    MOD             reduce using rule 129 (primary_expression -> dictionary_literal .)
    PLUS            reduce using rule 129 (primary_expression -> dictionary_literal .)
    MINUS           reduce using rule 129 (primary_expression -> dictionary_literal .)
    GT              reduce using rule 129 (primary_expression -> dictionary_literal .)
    LT              reduce using rule 129 (primary_expression -> dictionary_literal .)
    GEQ             reduce using rule 129 (primary_expression -> dictionary_literal .)
    LEQ             reduce using rule 129 (primary_expression -> dictionary_literal .)
    EQ              reduce using rule 129 (primary_expression -> dictionary_literal .)
    NEQ             reduce using rule 129 (primary_expression -> dictionary_literal .)
    AND             reduce using rule 129 (primary_expression -> dictionary_literal .)
    OR              reduce using rule 129 (primary_expression -> dictionary_literal .)
    SEMICOLON       reduce using rule 129 (primary_expression -> dictionary_literal .)
    RPAREN          reduce using rule 129 (primary_expression -> dictionary_literal .)
    COMMA           reduce using rule 129 (primary_expression -> dictionary_literal .)
    RBRACKET        reduce using rule 129 (primary_expression -> dictionary_literal .)
    COLON           reduce using rule 129 (primary_expression -> dictionary_literal .)
    RBRACE          reduce using rule 129 (primary_expression -> dictionary_literal .)


state 89

    (130) dictionary_literal -> LBRACE . key_value_list_opt RBRACE
    (131) key_value_list_opt -> . key_value_list
    (132) key_value_list_opt -> . empty
    (133) key_value_list -> . key_value
    (134) key_value_list -> . key_value_list COMMA key_value
    (69) empty -> .
    (135) key_value -> . expression COLON expression
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RBRACE          reduce using rule 69 (empty -> .)
    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    key_value_list_opt             shift and go to state 143
    key_value_list                 shift and go to state 144
    empty                          shift and go to state 145
    key_value                      shift and go to state 146
    expression                     shift and go to state 147
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 90

    (72) function_call_statement -> function_call SEMICOLON .

    KEYWORD_IF      reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_DO      reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_FOR     reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    LBRACE          reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    IDENTIFIER      reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_INT     reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_VOID    reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_STRING  reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_FILE    reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_DICT    reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    $end            reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    RBRACE          reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_CASE    reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 72 (function_call_statement -> function_call SEMICOLON .)


state 91

    (49) array_type -> primitive_type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 148


state 92

    (75) function_call -> SYSTEM_INPUT LPAREN . IDENTIFIER COMMA type_specifier RPAREN

    IDENTIFIER      shift and go to state 149


state 93

    (76) function_call -> SYSTEM_OUTPUT LPAREN . expression COMMA type_specifier RPAREN
    (77) function_call -> SYSTEM_OUTPUT LPAREN . expression COMMA type_specifier COMMA expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 150
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 94

    (78) function_call -> KEYWORD_EXIT LPAREN . RPAREN

    RPAREN          shift and go to state 151


state 95

    (79) function_call -> SYSTEM_SLEEP LPAREN . expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 152
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 96

    (80) function_call -> SYSTEM_ARR_PUSH LPAREN . expression COMMA expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 153
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 97

    (81) function_call -> SYSTEM_ARR_POP LPAREN . expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 154
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 98

    (82) function_call -> SYSTEM_ARR_SIZE LPAREN . expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 155
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 99

    (83) function_call -> SYSTEM_ARR_CONTAINS LPAREN . expression COMMA expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 156
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 100

    (84) function_call -> SYSTEM_ARR_INDEXOF LPAREN . expression COMMA expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 157
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 101

    (85) function_call -> SYSTEM_ARR_AVG LPAREN . expression RPAREN
    (86) function_call -> SYSTEM_ARR_AVG LPAREN . expression COMMA expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 158
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 102

    (29) declaration_statement -> type_specifier IDENTIFIER SEMICOLON .

    KEYWORD_IF      reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_DO      reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_FOR     reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    LBRACE          reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_INT     reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_VOID    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_STRING  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_FILE    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_DICT    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    $end            reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    LBRACKET        reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    INT_LITERAL     reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    STRING_LITERAL  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    CHAR_LITERAL    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_NULL    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SEMICOLON       reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_CASE    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)


state 103

    (30) declaration_statement -> type_specifier IDENTIFIER ASSIGN . expression SEMICOLON
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 159
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 104

    (31) declaration_statement -> type_specifier IDENTIFIER LBRACKET . expression RBRACKET SEMICOLON
    (32) declaration_statement -> type_specifier IDENTIFIER LBRACKET . expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> type_specifier IDENTIFIER LBRACKET . RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier IDENTIFIER LBRACKET . RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> type_specifier IDENTIFIER LBRACKET . RBRACKET SEMICOLON
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RBRACKET        shift and go to state 161
    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 160
    initializer_list               shift and go to state 68
    logical_expression             shift and go to state 67
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 105

    (2) function_definition -> type_specifier IDENTIFIER LPAREN . params RPAREN block_statement
    (3) params -> . param_list
    (4) params -> . empty
    (5) param_list -> . param
    (6) param_list -> . param_list COMMA param
    (69) empty -> .
    (7) param -> . type_specifier IDENTIFIER
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET

    RPAREN          reduce using rule 69 (empty -> .)
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    type_specifier                 shift and go to state 162
    params                         shift and go to state 163
    param_list                     shift and go to state 164
    empty                          shift and go to state 165
    param                          shift and go to state 166
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29

state 106

    (73) function_call -> IDENTIFIER LPAREN argument_list . RPAREN
    (88) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 167
    COMMA           shift and go to state 168


state 107

    (74) function_call -> IDENTIFIER LPAREN RPAREN .

    SEMICOLON       reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MUL             reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    DIV             reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MOD             reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GT              reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LT              reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GEQ             reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LEQ             reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    EQ              reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    NEQ             reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COLON           reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 74 (function_call -> IDENTIFIER LPAREN RPAREN .)


state 108

    (87) argument_list -> expression .

    RPAREN          reduce using rule 87 (argument_list -> expression .)
    COMMA           reduce using rule 87 (argument_list -> expression .)


state 109

    (136) subscript_access -> IDENTIFIER LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 169


state 110

    (50) assignment_statement -> left_hand_side ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 170


state 111

    (54) if_statement -> KEYWORD_IF LPAREN expression . RPAREN statement
    (55) if_statement -> KEYWORD_IF LPAREN expression . RPAREN statement KEYWORD_ELSE statement

    RPAREN          shift and go to state 171


state 112

    (56) while_statement -> KEYWORD_WHILE LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 172


state 113

    (22) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 173


state 114

    (57) for_statement -> KEYWORD_FOR LPAREN for_init . expression_opt SEMICOLON expression_opt RPAREN statement
    (63) expression_opt -> . expression
    (64) expression_opt -> . assignment_statement_no_semi
    (65) expression_opt -> . increment_decrement
    (66) expression_opt -> . empty
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (53) assignment_statement_no_semi -> . left_hand_side ASSIGN expression
    (67) increment_decrement -> . IDENTIFIER PLUS PLUS
    (68) increment_decrement -> . IDENTIFIER MINUS MINUS
    (69) empty -> .
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    IDENTIFIER      shift and go to state 179
    SEMICOLON       reduce using rule 69 (empty -> .)
    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression_opt                 shift and go to state 174
    expression                     shift and go to state 175
    assignment_statement_no_semi   shift and go to state 176
    increment_decrement            shift and go to state 177
    empty                          shift and go to state 178
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    left_hand_side                 shift and go to state 118
    equality_expression            shift and go to state 69
    subscript_access               shift and go to state 180
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    dictionary_literal             shift and go to state 88

state 115

    (60) for_init -> SEMICOLON .

    IDENTIFIER      reduce using rule 60 (for_init -> SEMICOLON .)
    LBRACKET        reduce using rule 60 (for_init -> SEMICOLON .)
    MINUS           reduce using rule 60 (for_init -> SEMICOLON .)
    INT_LITERAL     reduce using rule 60 (for_init -> SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 60 (for_init -> SEMICOLON .)
    STRING_LITERAL  reduce using rule 60 (for_init -> SEMICOLON .)
    CHAR_LITERAL    reduce using rule 60 (for_init -> SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 60 (for_init -> SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 60 (for_init -> SEMICOLON .)
    KEYWORD_NULL    reduce using rule 60 (for_init -> SEMICOLON .)
    LPAREN          reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 60 (for_init -> SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 60 (for_init -> SEMICOLON .)
    LBRACE          reduce using rule 60 (for_init -> SEMICOLON .)
    SEMICOLON       reduce using rule 60 (for_init -> SEMICOLON .)


state 116

    (58) for_init -> assignment_statement_no_semi . SEMICOLON

    SEMICOLON       shift and go to state 181


state 117

    (59) for_init -> declaration_statement .

    IDENTIFIER      reduce using rule 59 (for_init -> declaration_statement .)
    LBRACKET        reduce using rule 59 (for_init -> declaration_statement .)
    MINUS           reduce using rule 59 (for_init -> declaration_statement .)
    INT_LITERAL     reduce using rule 59 (for_init -> declaration_statement .)
    FLOAT_LITERAL   reduce using rule 59 (for_init -> declaration_statement .)
    STRING_LITERAL  reduce using rule 59 (for_init -> declaration_statement .)
    CHAR_LITERAL    reduce using rule 59 (for_init -> declaration_statement .)
    KEYWORD_TRUE    reduce using rule 59 (for_init -> declaration_statement .)
    KEYWORD_FALSE   reduce using rule 59 (for_init -> declaration_statement .)
    KEYWORD_NULL    reduce using rule 59 (for_init -> declaration_statement .)
    LPAREN          reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_INPUT    reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_OUTPUT   reduce using rule 59 (for_init -> declaration_statement .)
    KEYWORD_EXIT    reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_SLEEP    reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_ARR_PUSH reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_ARR_POP  reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_ARR_SIZE reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_ARR_AVG  reduce using rule 59 (for_init -> declaration_statement .)
    LBRACE          reduce using rule 59 (for_init -> declaration_statement .)
    SEMICOLON       reduce using rule 59 (for_init -> declaration_statement .)


state 118

    (53) assignment_statement_no_semi -> left_hand_side . ASSIGN expression

    ASSIGN          shift and go to state 182


state 119

    (29) declaration_statement -> type_specifier . IDENTIFIER SEMICOLON
    (30) declaration_statement -> type_specifier . IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 183


state 120

    (51) left_hand_side -> IDENTIFIER .
    (136) subscript_access -> IDENTIFIER . LBRACKET expression RBRACKET

    ASSIGN          reduce using rule 51 (left_hand_side -> IDENTIFIER .)
    LBRACKET        shift and go to state 55


state 121

    (23) switch_statement -> KEYWORD_SWITCH LPAREN expression . RPAREN LBRACE case_list RBRACE

    RPAREN          shift and go to state 184


state 122

    (90) block_statement -> LBRACE statement_list RBRACE .

    KEYWORD_IF      reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_WHILE   reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_DO      reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_FOR     reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_SWITCH  reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_BREAK   reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_RETURN  reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_INPUT    reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_OUTPUT   reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_EXIT    reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_SLEEP    reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_PUSH reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_POP  reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_SIZE reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_CONTAINS reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_INDEXOF reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_AVG  reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_INT     reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_FLOAT   reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_CHAR    reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_VOID    reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_STRING  reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_BOOL    reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_FILE    reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_SOCKET  reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_DICT    reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_REGEX   reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_ARRAY   reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_ELSE    reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_CASE    reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_DEFAULT reduce using rule 90 (block_statement -> LBRACE statement_list RBRACE .)


state 123

    (71) return_statement -> KEYWORD_RETURN expression SEMICOLON .

    KEYWORD_IF      reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_DO      reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_INT     reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_VOID    reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_STRING  reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_FILE    reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_DICT    reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    $end            reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_CASE    reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 71 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)


state 124

    (99) logical_expression -> logical_expression AND . equality_expression
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    equality_expression            shift and go to state 185
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 125

    (100) logical_expression -> logical_expression OR . equality_expression
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    equality_expression            shift and go to state 186
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 126

    (102) equality_expression -> equality_expression EQ . relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    relational_expression          shift and go to state 187
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 127

    (103) equality_expression -> equality_expression NEQ . relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    relational_expression          shift and go to state 188
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 128

    (91) initializer_list -> LBRACKET expression_list_opt . RBRACKET

    RBRACKET        shift and go to state 189


state 129

    (92) expression_list_opt -> expression_list .
    (95) expression_list -> expression_list . COMMA expression

    RBRACKET        reduce using rule 92 (expression_list_opt -> expression_list .)
    COMMA           shift and go to state 190


state 130

    (93) expression_list_opt -> empty .

    RBRACKET        reduce using rule 93 (expression_list_opt -> empty .)


state 131

    (94) expression_list -> expression .

    COMMA           reduce using rule 94 (expression_list -> expression .)
    RBRACKET        reduce using rule 94 (expression_list -> expression .)


state 132

    (105) relational_expression -> relational_expression GT . additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    additive_expression            shift and go to state 191
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 133

    (106) relational_expression -> relational_expression LT . additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    additive_expression            shift and go to state 192
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 134

    (107) relational_expression -> relational_expression GEQ . additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    additive_expression            shift and go to state 193
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 135

    (108) relational_expression -> relational_expression LEQ . additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    additive_expression            shift and go to state 194
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 136

    (110) additive_expression -> additive_expression PLUS . multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    multiplicative_expression      shift and go to state 195
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 137

    (111) additive_expression -> additive_expression MINUS . multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    multiplicative_expression      shift and go to state 196
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 138

    (113) multiplicative_expression -> multiplicative_expression MUL . unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    unary_expression               shift and go to state 197
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 139

    (114) multiplicative_expression -> multiplicative_expression DIV . unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    unary_expression               shift and go to state 198
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 140

    (115) multiplicative_expression -> multiplicative_expression MOD . unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    unary_expression               shift and go to state 199
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 141

    (117) unary_expression -> MINUS unary_expression .

    MUL             reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    DIV             reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    MOD             reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    PLUS            reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    MINUS           reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    GT              reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    LT              reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    GEQ             reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    LEQ             reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    EQ              reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    NEQ             reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    AND             reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    OR              reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    SEMICOLON       reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    RPAREN          reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    COMMA           reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    RBRACKET        reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    COLON           reduce using rule 117 (unary_expression -> MINUS unary_expression .)
    RBRACE          reduce using rule 117 (unary_expression -> MINUS unary_expression .)


state 142

    (126) primary_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 200


state 143

    (130) dictionary_literal -> LBRACE key_value_list_opt . RBRACE

    RBRACE          shift and go to state 201


state 144

    (131) key_value_list_opt -> key_value_list .
    (134) key_value_list -> key_value_list . COMMA key_value

    RBRACE          reduce using rule 131 (key_value_list_opt -> key_value_list .)
    COMMA           shift and go to state 202


state 145

    (132) key_value_list_opt -> empty .

    RBRACE          reduce using rule 132 (key_value_list_opt -> empty .)


state 146

    (133) key_value_list -> key_value .

    COMMA           reduce using rule 133 (key_value_list -> key_value .)
    RBRACE          reduce using rule 133 (key_value_list -> key_value .)


state 147

    (135) key_value -> expression . COLON expression

    COLON           shift and go to state 203


state 148

    (49) array_type -> primitive_type LBRACKET RBRACKET .

    IDENTIFIER      reduce using rule 49 (array_type -> primitive_type LBRACKET RBRACKET .)
    RPAREN          reduce using rule 49 (array_type -> primitive_type LBRACKET RBRACKET .)
    COMMA           reduce using rule 49 (array_type -> primitive_type LBRACKET RBRACKET .)


state 149

    (75) function_call -> SYSTEM_INPUT LPAREN IDENTIFIER . COMMA type_specifier RPAREN

    COMMA           shift and go to state 204


state 150

    (76) function_call -> SYSTEM_OUTPUT LPAREN expression . COMMA type_specifier RPAREN
    (77) function_call -> SYSTEM_OUTPUT LPAREN expression . COMMA type_specifier COMMA expression RPAREN

    COMMA           shift and go to state 205


state 151

    (78) function_call -> KEYWORD_EXIT LPAREN RPAREN .

    SEMICOLON       reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    MUL             reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    DIV             reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    MOD             reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    PLUS            reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    MINUS           reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    GT              reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    LT              reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    GEQ             reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    LEQ             reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    EQ              reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    NEQ             reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    AND             reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    OR              reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    RPAREN          reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    COMMA           reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    RBRACKET        reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    COLON           reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    RBRACE          reduce using rule 78 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)


state 152

    (79) function_call -> SYSTEM_SLEEP LPAREN expression . RPAREN

    RPAREN          shift and go to state 206


state 153

    (80) function_call -> SYSTEM_ARR_PUSH LPAREN expression . COMMA expression RPAREN

    COMMA           shift and go to state 207


state 154

    (81) function_call -> SYSTEM_ARR_POP LPAREN expression . RPAREN

    RPAREN          shift and go to state 208


state 155

    (82) function_call -> SYSTEM_ARR_SIZE LPAREN expression . RPAREN

    RPAREN          shift and go to state 209


state 156

    (83) function_call -> SYSTEM_ARR_CONTAINS LPAREN expression . COMMA expression RPAREN

    COMMA           shift and go to state 210


state 157

    (84) function_call -> SYSTEM_ARR_INDEXOF LPAREN expression . COMMA expression RPAREN

    COMMA           shift and go to state 211


state 158

    (85) function_call -> SYSTEM_ARR_AVG LPAREN expression . RPAREN
    (86) function_call -> SYSTEM_ARR_AVG LPAREN expression . COMMA expression RPAREN

    RPAREN          shift and go to state 212
    COMMA           shift and go to state 213


state 159

    (30) declaration_statement -> type_specifier IDENTIFIER ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 214


state 160

    (31) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression . RBRACKET SEMICOLON
    (32) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression . RBRACKET ASSIGN initializer_list SEMICOLON

    RBRACKET        shift and go to state 215


state 161

    (33) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET . ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET . ASSIGN expression SEMICOLON
    (35) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET . SEMICOLON

    ASSIGN          shift and go to state 216
    SEMICOLON       shift and go to state 217


state 162

    (7) param -> type_specifier . IDENTIFIER

    IDENTIFIER      shift and go to state 218


state 163

    (2) function_definition -> type_specifier IDENTIFIER LPAREN params . RPAREN block_statement

    RPAREN          shift and go to state 219


state 164

    (3) params -> param_list .
    (6) param_list -> param_list . COMMA param

    RPAREN          reduce using rule 3 (params -> param_list .)
    COMMA           shift and go to state 220


state 165

    (4) params -> empty .

    RPAREN          reduce using rule 4 (params -> empty .)


state 166

    (5) param_list -> param .

    COMMA           reduce using rule 5 (param_list -> param .)
    RPAREN          reduce using rule 5 (param_list -> param .)


state 167

    (73) function_call -> IDENTIFIER LPAREN argument_list RPAREN .

    SEMICOLON       reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    MUL             reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    DIV             reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    MOD             reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    GT              reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    LT              reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    EQ              reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    NEQ             reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    AND             reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    OR              reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    COLON           reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 73 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)


state 168

    (88) argument_list -> argument_list COMMA . expression
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 221
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 169

    (136) subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .

    ASSIGN          reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    MUL             reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    DIV             reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    MOD             reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    GT              reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    LT              reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    GEQ             reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    LEQ             reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    EQ              reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    AND             reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    OR              reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    COLON           reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 136 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)


state 170

    (50) assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .

    KEYWORD_IF      reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_DO      reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_INT     reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_VOID    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_STRING  reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_FILE    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_DICT    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    $end            reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_CASE    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)


state 171

    (54) if_statement -> KEYWORD_IF LPAREN expression RPAREN . statement
    (55) if_statement -> KEYWORD_IF LPAREN expression RPAREN . statement KEYWORD_ELSE statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    statement                      shift and go to state 222
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 172

    (56) while_statement -> KEYWORD_WHILE LPAREN expression RPAREN . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    statement                      shift and go to state 223
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 173

    (22) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN . expression RPAREN SEMICOLON
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 224
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 174

    (57) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt . SEMICOLON expression_opt RPAREN statement

    SEMICOLON       shift and go to state 225


state 175

    (63) expression_opt -> expression .

    SEMICOLON       reduce using rule 63 (expression_opt -> expression .)
    RPAREN          reduce using rule 63 (expression_opt -> expression .)


state 176

    (64) expression_opt -> assignment_statement_no_semi .

    SEMICOLON       reduce using rule 64 (expression_opt -> assignment_statement_no_semi .)
    RPAREN          reduce using rule 64 (expression_opt -> assignment_statement_no_semi .)


state 177

    (65) expression_opt -> increment_decrement .

    SEMICOLON       reduce using rule 65 (expression_opt -> increment_decrement .)
    RPAREN          reduce using rule 65 (expression_opt -> increment_decrement .)


state 178

    (66) expression_opt -> empty .

    SEMICOLON       reduce using rule 66 (expression_opt -> empty .)
    RPAREN          reduce using rule 66 (expression_opt -> empty .)


state 179

    (67) increment_decrement -> IDENTIFIER . PLUS PLUS
    (68) increment_decrement -> IDENTIFIER . MINUS MINUS
    (51) left_hand_side -> IDENTIFIER .
    (136) subscript_access -> IDENTIFIER . LBRACKET expression RBRACKET
    (118) primary_expression -> IDENTIFIER .
    (73) function_call -> IDENTIFIER . LPAREN argument_list RPAREN
    (74) function_call -> IDENTIFIER . LPAREN RPAREN

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PLUS            shift and go to state 226
    MINUS           shift and go to state 227
    ASSIGN          reduce using rule 51 (left_hand_side -> IDENTIFIER .)
    LBRACKET        shift and go to state 55
    MUL             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    DIV             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    MOD             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    GT              reduce using rule 118 (primary_expression -> IDENTIFIER .)
    LT              reduce using rule 118 (primary_expression -> IDENTIFIER .)
    GEQ             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    LEQ             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    EQ              reduce using rule 118 (primary_expression -> IDENTIFIER .)
    NEQ             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    AND             reduce using rule 118 (primary_expression -> IDENTIFIER .)
    OR              reduce using rule 118 (primary_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 118 (primary_expression -> IDENTIFIER .)
    RPAREN          reduce using rule 118 (primary_expression -> IDENTIFIER .)
    LPAREN          shift and go to state 54

  ! PLUS            [ reduce using rule 118 (primary_expression -> IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 118 (primary_expression -> IDENTIFIER .) ]


state 180

    (52) left_hand_side -> subscript_access .
    (128) primary_expression -> subscript_access .

    ASSIGN          reduce using rule 52 (left_hand_side -> subscript_access .)
    MUL             reduce using rule 128 (primary_expression -> subscript_access .)
    DIV             reduce using rule 128 (primary_expression -> subscript_access .)
    MOD             reduce using rule 128 (primary_expression -> subscript_access .)
    PLUS            reduce using rule 128 (primary_expression -> subscript_access .)
    MINUS           reduce using rule 128 (primary_expression -> subscript_access .)
    GT              reduce using rule 128 (primary_expression -> subscript_access .)
    LT              reduce using rule 128 (primary_expression -> subscript_access .)
    GEQ             reduce using rule 128 (primary_expression -> subscript_access .)
    LEQ             reduce using rule 128 (primary_expression -> subscript_access .)
    EQ              reduce using rule 128 (primary_expression -> subscript_access .)
    NEQ             reduce using rule 128 (primary_expression -> subscript_access .)
    AND             reduce using rule 128 (primary_expression -> subscript_access .)
    OR              reduce using rule 128 (primary_expression -> subscript_access .)
    SEMICOLON       reduce using rule 128 (primary_expression -> subscript_access .)
    RPAREN          reduce using rule 128 (primary_expression -> subscript_access .)


state 181

    (58) for_init -> assignment_statement_no_semi SEMICOLON .

    IDENTIFIER      reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    LBRACKET        reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    MINUS           reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    INT_LITERAL     reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    STRING_LITERAL  reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    CHAR_LITERAL    reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    KEYWORD_NULL    reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    LPAREN          reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    LBRACE          reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SEMICOLON       reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)


state 182

    (53) assignment_statement_no_semi -> left_hand_side ASSIGN . expression
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 228
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 183

    (29) declaration_statement -> type_specifier IDENTIFIER . SEMICOLON
    (30) declaration_statement -> type_specifier IDENTIFIER . ASSIGN expression SEMICOLON
    (31) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET SEMICOLON

    SEMICOLON       shift and go to state 102
    ASSIGN          shift and go to state 103
    LBRACKET        shift and go to state 104


state 184

    (23) switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN . LBRACE case_list RBRACE

    LBRACE          shift and go to state 229


state 185

    (99) logical_expression -> logical_expression AND equality_expression .
    (102) equality_expression -> equality_expression . EQ relational_expression
    (103) equality_expression -> equality_expression . NEQ relational_expression

    AND             reduce using rule 99 (logical_expression -> logical_expression AND equality_expression .)
    OR              reduce using rule 99 (logical_expression -> logical_expression AND equality_expression .)
    SEMICOLON       reduce using rule 99 (logical_expression -> logical_expression AND equality_expression .)
    RPAREN          reduce using rule 99 (logical_expression -> logical_expression AND equality_expression .)
    COMMA           reduce using rule 99 (logical_expression -> logical_expression AND equality_expression .)
    RBRACKET        reduce using rule 99 (logical_expression -> logical_expression AND equality_expression .)
    COLON           reduce using rule 99 (logical_expression -> logical_expression AND equality_expression .)
    RBRACE          reduce using rule 99 (logical_expression -> logical_expression AND equality_expression .)
    EQ              shift and go to state 126
    NEQ             shift and go to state 127


state 186

    (100) logical_expression -> logical_expression OR equality_expression .
    (102) equality_expression -> equality_expression . EQ relational_expression
    (103) equality_expression -> equality_expression . NEQ relational_expression

    AND             reduce using rule 100 (logical_expression -> logical_expression OR equality_expression .)
    OR              reduce using rule 100 (logical_expression -> logical_expression OR equality_expression .)
    SEMICOLON       reduce using rule 100 (logical_expression -> logical_expression OR equality_expression .)
    RPAREN          reduce using rule 100 (logical_expression -> logical_expression OR equality_expression .)
    COMMA           reduce using rule 100 (logical_expression -> logical_expression OR equality_expression .)
    RBRACKET        reduce using rule 100 (logical_expression -> logical_expression OR equality_expression .)
    COLON           reduce using rule 100 (logical_expression -> logical_expression OR equality_expression .)
    RBRACE          reduce using rule 100 (logical_expression -> logical_expression OR equality_expression .)
    EQ              shift and go to state 126
    NEQ             shift and go to state 127


state 187

    (102) equality_expression -> equality_expression EQ relational_expression .
    (105) relational_expression -> relational_expression . GT additive_expression
    (106) relational_expression -> relational_expression . LT additive_expression
    (107) relational_expression -> relational_expression . GEQ additive_expression
    (108) relational_expression -> relational_expression . LEQ additive_expression

    EQ              reduce using rule 102 (equality_expression -> equality_expression EQ relational_expression .)
    NEQ             reduce using rule 102 (equality_expression -> equality_expression EQ relational_expression .)
    AND             reduce using rule 102 (equality_expression -> equality_expression EQ relational_expression .)
    OR              reduce using rule 102 (equality_expression -> equality_expression EQ relational_expression .)
    SEMICOLON       reduce using rule 102 (equality_expression -> equality_expression EQ relational_expression .)
    RPAREN          reduce using rule 102 (equality_expression -> equality_expression EQ relational_expression .)
    COMMA           reduce using rule 102 (equality_expression -> equality_expression EQ relational_expression .)
    RBRACKET        reduce using rule 102 (equality_expression -> equality_expression EQ relational_expression .)
    COLON           reduce using rule 102 (equality_expression -> equality_expression EQ relational_expression .)
    RBRACE          reduce using rule 102 (equality_expression -> equality_expression EQ relational_expression .)
    GT              shift and go to state 132
    LT              shift and go to state 133
    GEQ             shift and go to state 134
    LEQ             shift and go to state 135


state 188

    (103) equality_expression -> equality_expression NEQ relational_expression .
    (105) relational_expression -> relational_expression . GT additive_expression
    (106) relational_expression -> relational_expression . LT additive_expression
    (107) relational_expression -> relational_expression . GEQ additive_expression
    (108) relational_expression -> relational_expression . LEQ additive_expression

    EQ              reduce using rule 103 (equality_expression -> equality_expression NEQ relational_expression .)
    NEQ             reduce using rule 103 (equality_expression -> equality_expression NEQ relational_expression .)
    AND             reduce using rule 103 (equality_expression -> equality_expression NEQ relational_expression .)
    OR              reduce using rule 103 (equality_expression -> equality_expression NEQ relational_expression .)
    SEMICOLON       reduce using rule 103 (equality_expression -> equality_expression NEQ relational_expression .)
    RPAREN          reduce using rule 103 (equality_expression -> equality_expression NEQ relational_expression .)
    COMMA           reduce using rule 103 (equality_expression -> equality_expression NEQ relational_expression .)
    RBRACKET        reduce using rule 103 (equality_expression -> equality_expression NEQ relational_expression .)
    COLON           reduce using rule 103 (equality_expression -> equality_expression NEQ relational_expression .)
    RBRACE          reduce using rule 103 (equality_expression -> equality_expression NEQ relational_expression .)
    GT              shift and go to state 132
    LT              shift and go to state 133
    GEQ             shift and go to state 134
    LEQ             shift and go to state 135


state 189

    (91) initializer_list -> LBRACKET expression_list_opt RBRACKET .

    SEMICOLON       reduce using rule 91 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    RPAREN          reduce using rule 91 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    COMMA           reduce using rule 91 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    RBRACKET        reduce using rule 91 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    COLON           reduce using rule 91 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    RBRACE          reduce using rule 91 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)


state 190

    (95) expression_list -> expression_list COMMA . expression
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 230
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 191

    (105) relational_expression -> relational_expression GT additive_expression .
    (110) additive_expression -> additive_expression . PLUS multiplicative_expression
    (111) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    LT              reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    GEQ             reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    LEQ             reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    EQ              reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    NEQ             reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    AND             reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    OR              reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    SEMICOLON       reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    RPAREN          reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    COMMA           reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    RBRACKET        reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    COLON           reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    RBRACE          reduce using rule 105 (relational_expression -> relational_expression GT additive_expression .)
    PLUS            shift and go to state 136
    MINUS           shift and go to state 137


state 192

    (106) relational_expression -> relational_expression LT additive_expression .
    (110) additive_expression -> additive_expression . PLUS multiplicative_expression
    (111) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    LT              reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    GEQ             reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    LEQ             reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    EQ              reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    NEQ             reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    AND             reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    OR              reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    SEMICOLON       reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    RPAREN          reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    COMMA           reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    RBRACKET        reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    COLON           reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    RBRACE          reduce using rule 106 (relational_expression -> relational_expression LT additive_expression .)
    PLUS            shift and go to state 136
    MINUS           shift and go to state 137


state 193

    (107) relational_expression -> relational_expression GEQ additive_expression .
    (110) additive_expression -> additive_expression . PLUS multiplicative_expression
    (111) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    LT              reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    GEQ             reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    LEQ             reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    EQ              reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    NEQ             reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    AND             reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    OR              reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    SEMICOLON       reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    RPAREN          reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    COMMA           reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    RBRACKET        reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    COLON           reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    RBRACE          reduce using rule 107 (relational_expression -> relational_expression GEQ additive_expression .)
    PLUS            shift and go to state 136
    MINUS           shift and go to state 137


state 194

    (108) relational_expression -> relational_expression LEQ additive_expression .
    (110) additive_expression -> additive_expression . PLUS multiplicative_expression
    (111) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    LT              reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    GEQ             reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    LEQ             reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    EQ              reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    NEQ             reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    AND             reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    OR              reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    SEMICOLON       reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    RPAREN          reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    COMMA           reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    RBRACKET        reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    COLON           reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    RBRACE          reduce using rule 108 (relational_expression -> relational_expression LEQ additive_expression .)
    PLUS            shift and go to state 136
    MINUS           shift and go to state 137


state 195

    (110) additive_expression -> additive_expression PLUS multiplicative_expression .
    (113) multiplicative_expression -> multiplicative_expression . MUL unary_expression
    (114) multiplicative_expression -> multiplicative_expression . DIV unary_expression
    (115) multiplicative_expression -> multiplicative_expression . MOD unary_expression

    PLUS            reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    MINUS           reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GT              reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LT              reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GEQ             reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LEQ             reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    EQ              reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    NEQ             reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    AND             reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    OR              reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    SEMICOLON       reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RPAREN          reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COMMA           reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RBRACKET        reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COLON           reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RBRACE          reduce using rule 110 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    MUL             shift and go to state 138
    DIV             shift and go to state 139
    MOD             shift and go to state 140


state 196

    (111) additive_expression -> additive_expression MINUS multiplicative_expression .
    (113) multiplicative_expression -> multiplicative_expression . MUL unary_expression
    (114) multiplicative_expression -> multiplicative_expression . DIV unary_expression
    (115) multiplicative_expression -> multiplicative_expression . MOD unary_expression

    PLUS            reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    MINUS           reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GT              reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LT              reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GEQ             reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LEQ             reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    EQ              reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    NEQ             reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    AND             reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    OR              reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    SEMICOLON       reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RPAREN          reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COMMA           reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RBRACKET        reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COLON           reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RBRACE          reduce using rule 111 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    MUL             shift and go to state 138
    DIV             shift and go to state 139
    MOD             shift and go to state 140


state 197

    (113) multiplicative_expression -> multiplicative_expression MUL unary_expression .

    MUL             reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    DIV             reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    MOD             reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    PLUS            reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    MINUS           reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    GT              reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    LT              reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    GEQ             reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    LEQ             reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    EQ              reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    NEQ             reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    AND             reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    OR              reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    SEMICOLON       reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    RPAREN          reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    COMMA           reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    RBRACKET        reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    COLON           reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    RBRACE          reduce using rule 113 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)


state 198

    (114) multiplicative_expression -> multiplicative_expression DIV unary_expression .

    MUL             reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    DIV             reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    MOD             reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    PLUS            reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    MINUS           reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    GT              reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    LT              reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    GEQ             reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    LEQ             reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    EQ              reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    NEQ             reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    AND             reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    OR              reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    SEMICOLON       reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    RPAREN          reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    COMMA           reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    RBRACKET        reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    COLON           reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    RBRACE          reduce using rule 114 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)


state 199

    (115) multiplicative_expression -> multiplicative_expression MOD unary_expression .

    MUL             reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    DIV             reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    MOD             reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    PLUS            reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    MINUS           reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    GT              reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    LT              reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    GEQ             reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    LEQ             reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    EQ              reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    NEQ             reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    AND             reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    OR              reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    SEMICOLON       reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RPAREN          reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    COMMA           reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RBRACKET        reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    COLON           reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RBRACE          reduce using rule 115 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)


state 200

    (126) primary_expression -> LPAREN expression RPAREN .

    MUL             reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 126 (primary_expression -> LPAREN expression RPAREN .)


state 201

    (130) dictionary_literal -> LBRACE key_value_list_opt RBRACE .

    MUL             reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    DIV             reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    MOD             reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    PLUS            reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    MINUS           reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    GT              reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    LT              reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    GEQ             reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    LEQ             reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    EQ              reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    NEQ             reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    AND             reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    OR              reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    SEMICOLON       reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    RPAREN          reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    COMMA           reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    RBRACKET        reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    COLON           reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    RBRACE          reduce using rule 130 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)


state 202

    (134) key_value_list -> key_value_list COMMA . key_value
    (135) key_value -> . expression COLON expression
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    key_value                      shift and go to state 231
    expression                     shift and go to state 147
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 203

    (135) key_value -> expression COLON . expression
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 232
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 204

    (75) function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA . type_specifier RPAREN
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET

    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    type_specifier                 shift and go to state 233
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29

state 205

    (76) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA . type_specifier RPAREN
    (77) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA . type_specifier COMMA expression RPAREN
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET

    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    type_specifier                 shift and go to state 234
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29

state 206

    (79) function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    MUL             reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    DIV             reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    MOD             reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    PLUS            reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    MINUS           reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    GT              reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    LT              reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    GEQ             reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    LEQ             reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    EQ              reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    NEQ             reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    AND             reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    OR              reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    RPAREN          reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    COMMA           reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    COLON           reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)
    RBRACE          reduce using rule 79 (function_call -> SYSTEM_SLEEP LPAREN expression RPAREN .)


state 207

    (80) function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA . expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 235
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 208

    (81) function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    MUL             reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    DIV             reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    MOD             reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    PLUS            reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    MINUS           reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    GT              reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    LT              reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    GEQ             reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    LEQ             reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    EQ              reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    NEQ             reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    AND             reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    OR              reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    RPAREN          reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    COMMA           reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    COLON           reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    RBRACE          reduce using rule 81 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)


state 209

    (82) function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    MUL             reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    DIV             reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    MOD             reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    PLUS            reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    MINUS           reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    GT              reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    LT              reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    GEQ             reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    LEQ             reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    EQ              reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    NEQ             reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    AND             reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    OR              reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    COMMA           reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    COLON           reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    RBRACE          reduce using rule 82 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)


state 210

    (83) function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA . expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 236
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 211

    (84) function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA . expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 237
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 212

    (85) function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    MUL             reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    DIV             reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    MOD             reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    PLUS            reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    MINUS           reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    GT              reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    LT              reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    GEQ             reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    LEQ             reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    EQ              reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    NEQ             reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    AND             reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    OR              reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    RPAREN          reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    COMMA           reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    COLON           reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    RBRACE          reduce using rule 85 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)


state 213

    (86) function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA . expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 238
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 214

    (30) declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .

    KEYWORD_IF      reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_DO      reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_INT     reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_VOID    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_STRING  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_FILE    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_DICT    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    LBRACKET        reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    INT_LITERAL     reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    CHAR_LITERAL    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_NULL    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SEMICOLON       reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_CASE    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)


state 215

    (31) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET . SEMICOLON
    (32) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET . ASSIGN initializer_list SEMICOLON

    SEMICOLON       shift and go to state 239
    ASSIGN          shift and go to state 240


state 216

    (33) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN . initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN . expression SEMICOLON
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    initializer_list               shift and go to state 241
    expression                     shift and go to state 242
    logical_expression             shift and go to state 67
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 217

    (35) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .

    KEYWORD_IF      reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_DO      reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_FOR     reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_INT     reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_VOID    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_STRING  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_FILE    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_DICT    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    $end            reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    MINUS           reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    INT_LITERAL     reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    STRING_LITERAL  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    CHAR_LITERAL    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_NULL    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_CASE    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)


state 218

    (7) param -> type_specifier IDENTIFIER .

    COMMA           reduce using rule 7 (param -> type_specifier IDENTIFIER .)
    RPAREN          reduce using rule 7 (param -> type_specifier IDENTIFIER .)


state 219

    (2) function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN . block_statement
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 24

    block_statement                shift and go to state 243

state 220

    (6) param_list -> param_list COMMA . param
    (7) param -> . type_specifier IDENTIFIER
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET

    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    param                          shift and go to state 244
    type_specifier                 shift and go to state 162
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29

state 221

    (88) argument_list -> argument_list COMMA expression .

    RPAREN          reduce using rule 88 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 88 (argument_list -> argument_list COMMA expression .)


state 222

    (54) if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .
    (55) if_statement -> KEYWORD_IF LPAREN expression RPAREN statement . KEYWORD_ELSE statement

    KEYWORD_IF      reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_WHILE   reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_DO      reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_FOR     reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_SWITCH  reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_BREAK   reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_RETURN  reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_INPUT    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_OUTPUT   reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_EXIT    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_SLEEP    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_PUSH reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_POP  reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_SIZE reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_AVG  reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_INT     reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_FLOAT   reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_CHAR    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_VOID    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_STRING  reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_BOOL    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_FILE    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_SOCKET  reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_DICT    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_REGEX   reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_ARRAY   reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_CASE    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_DEFAULT reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_ELSE    shift and go to state 245

  ! KEYWORD_ELSE    [ reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .) ]


state 223

    (56) while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .

    KEYWORD_IF      reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_WHILE   reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_DO      reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_FOR     reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_SWITCH  reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_BREAK   reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_RETURN  reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_INPUT    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_OUTPUT   reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_EXIT    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_SLEEP    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_PUSH reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_POP  reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_SIZE reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_AVG  reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_INT     reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_FLOAT   reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_CHAR    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_VOID    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_STRING  reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_BOOL    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_FILE    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_SOCKET  reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_DICT    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_REGEX   reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_ARRAY   reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_ELSE    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_CASE    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_DEFAULT reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)


state 224

    (22) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 246


state 225

    (57) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON . expression_opt RPAREN statement
    (63) expression_opt -> . expression
    (64) expression_opt -> . assignment_statement_no_semi
    (65) expression_opt -> . increment_decrement
    (66) expression_opt -> . empty
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (53) assignment_statement_no_semi -> . left_hand_side ASSIGN expression
    (67) increment_decrement -> . IDENTIFIER PLUS PLUS
    (68) increment_decrement -> . IDENTIFIER MINUS MINUS
    (69) empty -> .
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    IDENTIFIER      shift and go to state 179
    RPAREN          reduce using rule 69 (empty -> .)
    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression_opt                 shift and go to state 247
    expression                     shift and go to state 175
    assignment_statement_no_semi   shift and go to state 176
    increment_decrement            shift and go to state 177
    empty                          shift and go to state 178
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    left_hand_side                 shift and go to state 118
    equality_expression            shift and go to state 69
    subscript_access               shift and go to state 180
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    dictionary_literal             shift and go to state 88

state 226

    (67) increment_decrement -> IDENTIFIER PLUS . PLUS

    PLUS            shift and go to state 248


state 227

    (68) increment_decrement -> IDENTIFIER MINUS . MINUS

    MINUS           shift and go to state 249


state 228

    (53) assignment_statement_no_semi -> left_hand_side ASSIGN expression .

    SEMICOLON       reduce using rule 53 (assignment_statement_no_semi -> left_hand_side ASSIGN expression .)
    RPAREN          reduce using rule 53 (assignment_statement_no_semi -> left_hand_side ASSIGN expression .)


state 229

    (23) switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE . case_list RBRACE
    (24) case_list -> . case_clause
    (25) case_list -> . case_list case_clause
    (26) case_clause -> . KEYWORD_CASE expression COLON statement_list
    (27) case_clause -> . KEYWORD_DEFAULT COLON statement_list

    KEYWORD_CASE    shift and go to state 252
    KEYWORD_DEFAULT shift and go to state 253

    case_list                      shift and go to state 250
    case_clause                    shift and go to state 251

state 230

    (95) expression_list -> expression_list COMMA expression .

    COMMA           reduce using rule 95 (expression_list -> expression_list COMMA expression .)
    RBRACKET        reduce using rule 95 (expression_list -> expression_list COMMA expression .)


state 231

    (134) key_value_list -> key_value_list COMMA key_value .

    COMMA           reduce using rule 134 (key_value_list -> key_value_list COMMA key_value .)
    RBRACE          reduce using rule 134 (key_value_list -> key_value_list COMMA key_value .)


state 232

    (135) key_value -> expression COLON expression .

    COMMA           reduce using rule 135 (key_value -> expression COLON expression .)
    RBRACE          reduce using rule 135 (key_value -> expression COLON expression .)


state 233

    (75) function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier . RPAREN

    RPAREN          shift and go to state 254


state 234

    (76) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier . RPAREN
    (77) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier . COMMA expression RPAREN

    RPAREN          shift and go to state 256
    COMMA           shift and go to state 255


state 235

    (80) function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 257


state 236

    (83) function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 258


state 237

    (84) function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 259


state 238

    (86) function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 260


state 239

    (31) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .

    KEYWORD_IF      reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_DO      reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_FOR     reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_INT     reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_VOID    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_STRING  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_FILE    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_DICT    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    $end            reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    MINUS           reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    INT_LITERAL     reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    STRING_LITERAL  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    CHAR_LITERAL    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_NULL    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_CASE    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)


state 240

    (32) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN . initializer_list SEMICOLON
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET

    LBRACKET        shift and go to state 70

    initializer_list               shift and go to state 261

state 241

    (33) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list . SEMICOLON
    (97) expression -> initializer_list .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 262

  ! SEMICOLON       [ reduce using rule 97 (expression -> initializer_list .) ]


state 242

    (34) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 263


state 243

    (2) function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .

    KEYWORD_IF      reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_WHILE   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_DO      reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_FOR     reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_SWITCH  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_BREAK   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_RETURN  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    LBRACE          reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    IDENTIFIER      reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_INPUT    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_OUTPUT   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_EXIT    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_SLEEP    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_PUSH reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_POP  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_SIZE reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_AVG  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_INT     reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_FLOAT   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_CHAR    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_VOID    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_STRING  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_BOOL    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_FILE    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_SOCKET  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_DICT    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_REGEX   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_ARRAY   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    $end            reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    RBRACE          reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_ELSE    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_CASE    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_DEFAULT reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)


state 244

    (6) param_list -> param_list COMMA param .

    COMMA           reduce using rule 6 (param_list -> param_list COMMA param .)
    RPAREN          reduce using rule 6 (param_list -> param_list COMMA param .)


state 245

    (55) if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    statement                      shift and go to state 264
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 246

    (22) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 265


state 247

    (57) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt . RPAREN statement

    RPAREN          shift and go to state 266


state 248

    (67) increment_decrement -> IDENTIFIER PLUS PLUS .

    SEMICOLON       reduce using rule 67 (increment_decrement -> IDENTIFIER PLUS PLUS .)
    RPAREN          reduce using rule 67 (increment_decrement -> IDENTIFIER PLUS PLUS .)


state 249

    (68) increment_decrement -> IDENTIFIER MINUS MINUS .

    SEMICOLON       reduce using rule 68 (increment_decrement -> IDENTIFIER MINUS MINUS .)
    RPAREN          reduce using rule 68 (increment_decrement -> IDENTIFIER MINUS MINUS .)


state 250

    (23) switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list . RBRACE
    (25) case_list -> case_list . case_clause
    (26) case_clause -> . KEYWORD_CASE expression COLON statement_list
    (27) case_clause -> . KEYWORD_DEFAULT COLON statement_list

    RBRACE          shift and go to state 267
    KEYWORD_CASE    shift and go to state 252
    KEYWORD_DEFAULT shift and go to state 253

    case_clause                    shift and go to state 268

state 251

    (24) case_list -> case_clause .

    RBRACE          reduce using rule 24 (case_list -> case_clause .)
    KEYWORD_CASE    reduce using rule 24 (case_list -> case_clause .)
    KEYWORD_DEFAULT reduce using rule 24 (case_list -> case_clause .)


state 252

    (26) case_clause -> KEYWORD_CASE . expression COLON statement_list
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 269
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 253

    (27) case_clause -> KEYWORD_DEFAULT . COLON statement_list

    COLON           shift and go to state 270


state 254

    (75) function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .

    SEMICOLON       reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    MUL             reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    DIV             reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    MOD             reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    PLUS            reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    MINUS           reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    GT              reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    LT              reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    GEQ             reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    LEQ             reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    EQ              reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    NEQ             reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    AND             reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    OR              reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    RPAREN          reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    COMMA           reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    RBRACKET        reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    COLON           reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    RBRACE          reduce using rule 75 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)


state 255

    (77) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA . expression RPAREN
    (96) expression -> . logical_expression
    (97) expression -> . initializer_list
    (98) logical_expression -> . equality_expression
    (99) logical_expression -> . logical_expression AND equality_expression
    (100) logical_expression -> . logical_expression OR equality_expression
    (91) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (101) equality_expression -> . relational_expression
    (102) equality_expression -> . equality_expression EQ relational_expression
    (103) equality_expression -> . equality_expression NEQ relational_expression
    (104) relational_expression -> . additive_expression
    (105) relational_expression -> . relational_expression GT additive_expression
    (106) relational_expression -> . relational_expression LT additive_expression
    (107) relational_expression -> . relational_expression GEQ additive_expression
    (108) relational_expression -> . relational_expression LEQ additive_expression
    (109) additive_expression -> . multiplicative_expression
    (110) additive_expression -> . additive_expression PLUS multiplicative_expression
    (111) additive_expression -> . additive_expression MINUS multiplicative_expression
    (112) multiplicative_expression -> . unary_expression
    (113) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (114) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (115) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (116) unary_expression -> . primary_expression
    (117) unary_expression -> . MINUS unary_expression
    (118) primary_expression -> . IDENTIFIER
    (119) primary_expression -> . INT_LITERAL
    (120) primary_expression -> . FLOAT_LITERAL
    (121) primary_expression -> . STRING_LITERAL
    (122) primary_expression -> . CHAR_LITERAL
    (123) primary_expression -> . KEYWORD_TRUE
    (124) primary_expression -> . KEYWORD_FALSE
    (125) primary_expression -> . KEYWORD_NULL
    (126) primary_expression -> . LPAREN expression RPAREN
    (127) primary_expression -> . function_call
    (128) primary_expression -> . subscript_access
    (129) primary_expression -> . dictionary_literal
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (130) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 70
    MINUS           shift and go to state 74
    IDENTIFIER      shift and go to state 77
    INT_LITERAL     shift and go to state 78
    FLOAT_LITERAL   shift and go to state 79
    STRING_LITERAL  shift and go to state 80
    CHAR_LITERAL    shift and go to state 81
    KEYWORD_TRUE    shift and go to state 82
    KEYWORD_FALSE   shift and go to state 83
    KEYWORD_NULL    shift and go to state 84
    LPAREN          shift and go to state 85
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    LBRACE          shift and go to state 89

    expression                     shift and go to state 271
    logical_expression             shift and go to state 67
    initializer_list               shift and go to state 68
    equality_expression            shift and go to state 69
    relational_expression          shift and go to state 71
    additive_expression            shift and go to state 72
    multiplicative_expression      shift and go to state 73
    unary_expression               shift and go to state 75
    primary_expression             shift and go to state 76
    function_call                  shift and go to state 86
    subscript_access               shift and go to state 87
    dictionary_literal             shift and go to state 88

state 256

    (76) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .

    SEMICOLON       reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    MUL             reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    DIV             reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    MOD             reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    PLUS            reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    MINUS           reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    GT              reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    LT              reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    GEQ             reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    LEQ             reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    EQ              reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    NEQ             reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    AND             reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    OR              reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    RPAREN          reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    COMMA           reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    RBRACKET        reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    COLON           reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    RBRACE          reduce using rule 76 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)


state 257

    (80) function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    MUL             reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    DIV             reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    MOD             reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    GT              reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    LT              reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    GEQ             reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    LEQ             reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    EQ              reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    NEQ             reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 80 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)


state 258

    (83) function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    MUL             reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    DIV             reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    MOD             reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    GT              reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    LT              reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    GEQ             reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    LEQ             reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    EQ              reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    NEQ             reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 83 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)


state 259

    (84) function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    MUL             reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    DIV             reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    MOD             reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    GT              reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    LT              reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    GEQ             reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    LEQ             reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    EQ              reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    NEQ             reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 84 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)


state 260

    (86) function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    MUL             reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    DIV             reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    MOD             reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    GT              reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    LT              reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    GEQ             reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    LEQ             reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    EQ              reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    NEQ             reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 86 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)


state 261

    (32) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list . SEMICOLON

    SEMICOLON       shift and go to state 272


state 262

    (33) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .

    KEYWORD_IF      reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DO      reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FOR     reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    LBRACE          reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    IDENTIFIER      reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_INT     reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_VOID    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_STRING  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FILE    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DICT    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    $end            reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    RBRACE          reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    LBRACKET        reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    MINUS           reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    INT_LITERAL     reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    STRING_LITERAL  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    CHAR_LITERAL    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_NULL    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    LPAREN          reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SEMICOLON       reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CASE    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)


state 263

    (34) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .

    KEYWORD_IF      reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_DO      reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_INT     reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_VOID    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_STRING  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_FILE    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_DICT    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    $end            reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    LBRACKET        reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    INT_LITERAL     reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    CHAR_LITERAL    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_NULL    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SEMICOLON       reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_CASE    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)


state 264

    (55) if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .

    KEYWORD_IF      reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_WHILE   reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_DO      reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_FOR     reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_SWITCH  reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_BREAK   reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_RETURN  reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    LBRACE          reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    IDENTIFIER      reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_INPUT    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_OUTPUT   reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_EXIT    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_SLEEP    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_PUSH reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_POP  reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_SIZE reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_AVG  reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_INT     reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_FLOAT   reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_CHAR    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_VOID    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_STRING  reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_BOOL    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_FILE    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_SOCKET  reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_DICT    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_REGEX   reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_ARRAY   reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    $end            reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    RBRACE          reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_ELSE    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_CASE    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_DEFAULT reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)


state 265

    (22) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .

    KEYWORD_IF      reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_DO      reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_FOR     reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_INT     reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_VOID    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_STRING  reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_FILE    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_DICT    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_CASE    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)


state 266

    (57) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    statement                      shift and go to state 273
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 267

    (23) switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .

    KEYWORD_IF      reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_WHILE   reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_DO      reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_FOR     reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_SWITCH  reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_BREAK   reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_RETURN  reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    LBRACE          reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    IDENTIFIER      reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_INPUT    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_OUTPUT   reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_EXIT    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_SLEEP    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_PUSH reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_POP  reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_SIZE reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_CONTAINS reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_INDEXOF reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_AVG  reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_INT     reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_FLOAT   reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_CHAR    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_VOID    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_STRING  reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_BOOL    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_FILE    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_SOCKET  reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_DICT    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_REGEX   reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_ARRAY   reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    $end            reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    RBRACE          reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_ELSE    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_CASE    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_DEFAULT reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)


state 268

    (25) case_list -> case_list case_clause .

    RBRACE          reduce using rule 25 (case_list -> case_list case_clause .)
    KEYWORD_CASE    reduce using rule 25 (case_list -> case_list case_clause .)
    KEYWORD_DEFAULT reduce using rule 25 (case_list -> case_list case_clause .)


state 269

    (26) case_clause -> KEYWORD_CASE expression . COLON statement_list

    COLON           shift and go to state 274


state 270

    (27) case_clause -> KEYWORD_DEFAULT COLON . statement_list
    (8) statement_list -> . statement
    (9) statement_list -> . statement_list statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    statement_list                 shift and go to state 275
    statement                      shift and go to state 3
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 271

    (77) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression . RPAREN

    RPAREN          shift and go to state 276


state 272

    (32) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .

    KEYWORD_IF      reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DO      reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FOR     reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    LBRACE          reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    IDENTIFIER      reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_SLEEP    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_INT     reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_VOID    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_STRING  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FILE    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DICT    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    $end            reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    RBRACE          reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    LBRACKET        reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    MINUS           reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    INT_LITERAL     reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    STRING_LITERAL  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    CHAR_LITERAL    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_NULL    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    LPAREN          reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SEMICOLON       reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CASE    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)


state 273

    (57) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .

    KEYWORD_IF      reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_WHILE   reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_DO      reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_FOR     reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_SWITCH  reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_BREAK   reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_RETURN  reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    LBRACE          reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    IDENTIFIER      reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_INPUT    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_OUTPUT   reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_EXIT    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_SLEEP    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_PUSH reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_POP  reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_SIZE reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_AVG  reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_INT     reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_FLOAT   reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_CHAR    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_VOID    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_STRING  reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_BOOL    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_FILE    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_SOCKET  reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_DICT    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_REGEX   reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_ARRAY   reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    $end            reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    RBRACE          reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_ELSE    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_CASE    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_DEFAULT reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)


state 274

    (26) case_clause -> KEYWORD_CASE expression COLON . statement_list
    (8) statement_list -> . statement
    (9) statement_list -> . statement_list statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    statement_list                 shift and go to state 277
    statement                      shift and go to state 3
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 275

    (27) case_clause -> KEYWORD_DEFAULT COLON statement_list .
    (9) statement_list -> statement_list . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    RBRACE          reduce using rule 27 (case_clause -> KEYWORD_DEFAULT COLON statement_list .)
    KEYWORD_CASE    reduce using rule 27 (case_clause -> KEYWORD_DEFAULT COLON statement_list .)
    KEYWORD_DEFAULT reduce using rule 27 (case_clause -> KEYWORD_DEFAULT COLON statement_list .)
    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    statement                      shift and go to state 52
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 276

    (77) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .

    SEMICOLON       reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    MUL             reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    DIV             reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    MOD             reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    PLUS            reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    MINUS           reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    GT              reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    LT              reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    GEQ             reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    LEQ             reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    EQ              reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    NEQ             reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    AND             reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    OR              reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    RPAREN          reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    COMMA           reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    RBRACKET        reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    COLON           reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    RBRACE          reduce using rule 77 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)


state 277

    (26) case_clause -> KEYWORD_CASE expression COLON statement_list .
    (9) statement_list -> statement_list . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (70) return_statement -> . KEYWORD_RETURN SEMICOLON
    (71) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (72) function_call_statement -> . function_call SEMICOLON
    (89) block_statement -> . LBRACE RBRACE
    (90) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (73) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (74) function_call -> . IDENTIFIER LPAREN RPAREN
    (75) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (76) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (77) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (78) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (79) function_call -> . SYSTEM_SLEEP LPAREN expression RPAREN
    (80) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (83) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (84) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (85) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (86) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (136) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    RBRACE          reduce using rule 26 (case_clause -> KEYWORD_CASE expression COLON statement_list .)
    KEYWORD_CASE    reduce using rule 26 (case_clause -> KEYWORD_CASE expression COLON statement_list .)
    KEYWORD_DEFAULT reduce using rule 26 (case_clause -> KEYWORD_CASE expression COLON statement_list .)
    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_SLEEP    shift and go to state 34
    SYSTEM_ARR_PUSH shift and go to state 35
    SYSTEM_ARR_POP  shift and go to state 36
    SYSTEM_ARR_SIZE shift and go to state 37
    SYSTEM_ARR_CONTAINS shift and go to state 38
    SYSTEM_ARR_INDEXOF shift and go to state 39
    SYSTEM_ARR_AVG  shift and go to state 40
    KEYWORD_INT     shift and go to state 41
    KEYWORD_FLOAT   shift and go to state 42
    KEYWORD_CHAR    shift and go to state 43
    KEYWORD_VOID    shift and go to state 44
    KEYWORD_STRING  shift and go to state 45
    KEYWORD_BOOL    shift and go to state 46
    KEYWORD_FILE    shift and go to state 47
    KEYWORD_SOCKET  shift and go to state 48
    KEYWORD_DICT    shift and go to state 49
    KEYWORD_REGEX   shift and go to state 50
    KEYWORD_ARRAY   shift and go to state 51

    statement                      shift and go to state 52
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 179 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 179 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 241 resolved as shift
