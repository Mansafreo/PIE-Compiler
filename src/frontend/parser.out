Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    DOT
    KEYWORD_CONTINUE
    SYSTEM_EXIT

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement
Rule 3     params -> param_list
Rule 4     params -> empty
Rule 5     param_list -> param
Rule 6     param_list -> param_list COMMA param
Rule 7     param -> type_specifier IDENTIFIER
Rule 8     statement_list -> statement
Rule 9     statement_list -> statement_list statement
Rule 10    statement -> declaration_statement
Rule 11    statement -> assignment_statement
Rule 12    statement -> if_statement
Rule 13    statement -> while_statement
Rule 14    statement -> do_while_statement
Rule 15    statement -> for_statement
Rule 16    statement -> switch_statement
Rule 17    statement -> break_statement
Rule 18    statement -> return_statement
Rule 19    statement -> function_call_statement
Rule 20    statement -> block_statement
Rule 21    statement -> function_definition
Rule 22    do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
Rule 23    switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
Rule 24    case_list -> case_clause
Rule 25    case_list -> case_list case_clause
Rule 26    case_clause -> KEYWORD_CASE expression COLON statement_list
Rule 27    case_clause -> KEYWORD_DEFAULT COLON statement_list
Rule 28    break_statement -> KEYWORD_BREAK SEMICOLON
Rule 29    declaration_statement -> type_specifier IDENTIFIER SEMICOLON
Rule 30    declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON
Rule 31    declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
Rule 32    declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
Rule 33    declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
Rule 34    declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
Rule 35    declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
Rule 36    type_specifier -> primitive_type
Rule 37    type_specifier -> array_type
Rule 38    primitive_type -> KEYWORD_INT
Rule 39    primitive_type -> KEYWORD_FLOAT
Rule 40    primitive_type -> KEYWORD_CHAR
Rule 41    primitive_type -> KEYWORD_VOID
Rule 42    primitive_type -> KEYWORD_STRING
Rule 43    primitive_type -> KEYWORD_BOOL
Rule 44    primitive_type -> KEYWORD_FILE
Rule 45    primitive_type -> KEYWORD_SOCKET
Rule 46    primitive_type -> KEYWORD_DICT
Rule 47    primitive_type -> KEYWORD_REGEX
Rule 48    primitive_type -> KEYWORD_ARRAY
Rule 49    array_type -> primitive_type LBRACKET RBRACKET
Rule 50    assignment_statement -> left_hand_side ASSIGN expression SEMICOLON
Rule 51    left_hand_side -> IDENTIFIER
Rule 52    left_hand_side -> subscript_access
Rule 53    assignment_statement_no_semi -> left_hand_side ASSIGN expression
Rule 54    if_statement -> KEYWORD_IF LPAREN expression RPAREN statement
Rule 55    if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
Rule 56    while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement
Rule 57    for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
Rule 58    for_init -> assignment_statement_no_semi SEMICOLON
Rule 59    for_init -> declaration_statement
Rule 60    for_init -> SEMICOLON
Rule 61    expression_statement -> expression SEMICOLON
Rule 62    expression_statement -> SEMICOLON
Rule 63    expression_opt -> expression
Rule 64    expression_opt -> assignment_statement_no_semi
Rule 65    expression_opt -> empty
Rule 66    empty -> <empty>
Rule 67    return_statement -> KEYWORD_RETURN SEMICOLON
Rule 68    return_statement -> KEYWORD_RETURN expression SEMICOLON
Rule 69    function_call_statement -> function_call SEMICOLON
Rule 70    function_call -> IDENTIFIER LPAREN argument_list RPAREN
Rule 71    function_call -> IDENTIFIER LPAREN RPAREN
Rule 72    function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
Rule 73    function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
Rule 74    function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
Rule 75    function_call -> KEYWORD_EXIT LPAREN RPAREN
Rule 76    function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
Rule 77    function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN
Rule 78    function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN
Rule 79    function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
Rule 80    function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
Rule 81    function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN
Rule 82    function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
Rule 83    argument_list -> expression
Rule 84    argument_list -> argument_list COMMA expression
Rule 85    block_statement -> LBRACE RBRACE
Rule 86    block_statement -> LBRACE statement_list RBRACE
Rule 87    initializer_list -> LBRACKET expression_list_opt RBRACKET
Rule 88    expression_list_opt -> expression_list
Rule 89    expression_list_opt -> empty
Rule 90    expression_list -> expression
Rule 91    expression_list -> expression_list COMMA expression
Rule 92    expression -> logical_expression
Rule 93    expression -> initializer_list
Rule 94    logical_expression -> equality_expression
Rule 95    logical_expression -> logical_expression AND equality_expression
Rule 96    logical_expression -> logical_expression OR equality_expression
Rule 97    equality_expression -> relational_expression
Rule 98    equality_expression -> equality_expression EQ relational_expression
Rule 99    equality_expression -> equality_expression NEQ relational_expression
Rule 100   relational_expression -> additive_expression
Rule 101   relational_expression -> relational_expression GT additive_expression
Rule 102   relational_expression -> relational_expression LT additive_expression
Rule 103   relational_expression -> relational_expression GEQ additive_expression
Rule 104   relational_expression -> relational_expression LEQ additive_expression
Rule 105   additive_expression -> multiplicative_expression
Rule 106   additive_expression -> additive_expression PLUS multiplicative_expression
Rule 107   additive_expression -> additive_expression MINUS multiplicative_expression
Rule 108   multiplicative_expression -> unary_expression
Rule 109   multiplicative_expression -> multiplicative_expression MUL unary_expression
Rule 110   multiplicative_expression -> multiplicative_expression DIV unary_expression
Rule 111   multiplicative_expression -> multiplicative_expression MOD unary_expression
Rule 112   unary_expression -> primary_expression
Rule 113   unary_expression -> MINUS unary_expression
Rule 114   primary_expression -> IDENTIFIER
Rule 115   primary_expression -> INT_LITERAL
Rule 116   primary_expression -> FLOAT_LITERAL
Rule 117   primary_expression -> STRING_LITERAL
Rule 118   primary_expression -> CHAR_LITERAL
Rule 119   primary_expression -> KEYWORD_TRUE
Rule 120   primary_expression -> KEYWORD_FALSE
Rule 121   primary_expression -> KEYWORD_NULL
Rule 122   primary_expression -> LPAREN expression RPAREN
Rule 123   primary_expression -> function_call
Rule 124   primary_expression -> subscript_access
Rule 125   primary_expression -> dictionary_literal
Rule 126   dictionary_literal -> LBRACE key_value_list_opt RBRACE
Rule 127   key_value_list_opt -> key_value_list
Rule 128   key_value_list_opt -> empty
Rule 129   key_value_list -> key_value
Rule 130   key_value_list -> key_value_list COMMA key_value
Rule 131   key_value -> expression COLON expression
Rule 132   subscript_access -> IDENTIFIER LBRACKET expression RBRACKET

Terminals, with rules where they appear

AND                  : 95
ASSIGN               : 30 32 33 34 50 53
CHAR_LITERAL         : 118
COLON                : 26 27 131
COMMA                : 6 72 73 74 74 76 79 80 82 84 91 130
COMMENT              : 
DIV                  : 110
DOT                  : 
EQ                   : 98
FLOAT_LITERAL        : 116
GEQ                  : 103
GT                   : 101
IDENTIFIER           : 2 7 29 30 31 32 33 34 35 51 70 71 72 114 132
INT_LITERAL          : 115
KEYWORD_ARRAY        : 48
KEYWORD_BOOL         : 43
KEYWORD_BREAK        : 28
KEYWORD_CASE         : 26
KEYWORD_CHAR         : 40
KEYWORD_CONTINUE     : 
KEYWORD_DEFAULT      : 27
KEYWORD_DICT         : 46
KEYWORD_DO           : 22
KEYWORD_ELSE         : 55
KEYWORD_EXIT         : 75
KEYWORD_FALSE        : 120
KEYWORD_FILE         : 44
KEYWORD_FLOAT        : 39
KEYWORD_FOR          : 57
KEYWORD_IF           : 54 55
KEYWORD_INT          : 38
KEYWORD_NULL         : 121
KEYWORD_REGEX        : 47
KEYWORD_RETURN       : 67 68
KEYWORD_SOCKET       : 45
KEYWORD_STRING       : 42
KEYWORD_SWITCH       : 23
KEYWORD_TRUE         : 119
KEYWORD_VOID         : 41
KEYWORD_WHILE        : 22 56
LBRACE               : 23 85 86 126
LBRACKET             : 31 32 33 34 35 49 87 132
LEQ                  : 104
LPAREN               : 2 22 23 54 55 56 57 70 71 72 73 74 75 76 77 78 79 80 81 82 122
LT                   : 102
MINUS                : 107 113
MOD                  : 111
MUL                  : 109
NEQ                  : 99
OR                   : 96
PLUS                 : 106
RBRACE               : 23 85 86 126
RBRACKET             : 31 32 33 34 35 49 87 132
RPAREN               : 2 22 23 54 55 56 57 70 71 72 73 74 75 76 77 78 79 80 81 82 122
SEMICOLON            : 22 28 29 30 31 32 33 34 35 50 57 58 60 61 62 67 68 69
STRING_LITERAL       : 117
SYSTEM_ARR_AVG       : 81 82
SYSTEM_ARR_CONTAINS  : 79
SYSTEM_ARR_INDEXOF   : 80
SYSTEM_ARR_POP       : 77
SYSTEM_ARR_PUSH      : 76
SYSTEM_ARR_SIZE      : 78
SYSTEM_EXIT          : 
SYSTEM_INPUT         : 72
SYSTEM_OUTPUT        : 73 74
error                : 

Nonterminals, with rules where they appear

additive_expression  : 100 101 102 103 104 106 107
argument_list        : 70 84
array_type           : 37
assignment_statement : 11
assignment_statement_no_semi : 58 64
block_statement      : 2 20
break_statement      : 17
case_clause          : 24 25
case_list            : 23 25
declaration_statement : 10 59
dictionary_literal   : 125
do_while_statement   : 14
empty                : 4 65 89 128
equality_expression  : 94 95 96 98 99
expression           : 22 23 26 30 31 32 34 50 53 54 55 56 61 63 68 73 74 74 76 76 77 78 79 79 80 80 81 82 82 83 84 90 91 122 131 131 132
expression_list      : 88 91
expression_list_opt  : 87
expression_opt       : 57 57
expression_statement : 
for_init             : 57
for_statement        : 15
function_call        : 69 123
function_call_statement : 19
function_definition  : 21
if_statement         : 12
initializer_list     : 32 33 93
key_value            : 129 130
key_value_list       : 127 130
key_value_list_opt   : 126
left_hand_side       : 50 53
logical_expression   : 92 95 96
multiplicative_expression : 105 106 107 109 110 111
param                : 5 6
param_list           : 3 6
params               : 2
primary_expression   : 112
primitive_type       : 36 49
program              : 0
relational_expression : 97 98 99 101 102 103 104
return_statement     : 18
statement            : 8 9 22 54 55 55 56 57
statement_list       : 1 9 26 27 86
subscript_access     : 52 124
switch_statement     : 16
type_specifier       : 2 7 29 30 31 32 33 34 35 72 73 74
unary_expression     : 108 109 110 111 113
while_statement      : 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (8) statement_list -> . statement
    (9) statement_list -> . statement_list statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (9) statement_list -> statement_list . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    $end            reduce using rule 1 (program -> statement_list .)
    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    statement                      shift and go to state 51
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 3

    (8) statement_list -> statement .

    KEYWORD_IF      reduce using rule 8 (statement_list -> statement .)
    KEYWORD_WHILE   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_DO      reduce using rule 8 (statement_list -> statement .)
    KEYWORD_FOR     reduce using rule 8 (statement_list -> statement .)
    KEYWORD_SWITCH  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_BREAK   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_RETURN  reduce using rule 8 (statement_list -> statement .)
    LBRACE          reduce using rule 8 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 8 (statement_list -> statement .)
    SYSTEM_INPUT    reduce using rule 8 (statement_list -> statement .)
    SYSTEM_OUTPUT   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_EXIT    reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_PUSH reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_POP  reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_SIZE reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 8 (statement_list -> statement .)
    SYSTEM_ARR_AVG  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_INT     reduce using rule 8 (statement_list -> statement .)
    KEYWORD_FLOAT   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_CHAR    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_VOID    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_STRING  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_BOOL    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_FILE    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_SOCKET  reduce using rule 8 (statement_list -> statement .)
    KEYWORD_DICT    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_REGEX   reduce using rule 8 (statement_list -> statement .)
    KEYWORD_ARRAY   reduce using rule 8 (statement_list -> statement .)
    $end            reduce using rule 8 (statement_list -> statement .)
    RBRACE          reduce using rule 8 (statement_list -> statement .)
    KEYWORD_CASE    reduce using rule 8 (statement_list -> statement .)
    KEYWORD_DEFAULT reduce using rule 8 (statement_list -> statement .)


state 4

    (10) statement -> declaration_statement .

    KEYWORD_IF      reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_WHILE   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_DO      reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_FOR     reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_SWITCH  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_BREAK   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_RETURN  reduce using rule 10 (statement -> declaration_statement .)
    LBRACE          reduce using rule 10 (statement -> declaration_statement .)
    IDENTIFIER      reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_INPUT    reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_OUTPUT   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_EXIT    reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_PUSH reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_POP  reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_SIZE reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 10 (statement -> declaration_statement .)
    SYSTEM_ARR_AVG  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_INT     reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_FLOAT   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_CHAR    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_VOID    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_STRING  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_BOOL    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_FILE    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_SOCKET  reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_DICT    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_REGEX   reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_ARRAY   reduce using rule 10 (statement -> declaration_statement .)
    $end            reduce using rule 10 (statement -> declaration_statement .)
    RBRACE          reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_ELSE    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_CASE    reduce using rule 10 (statement -> declaration_statement .)
    KEYWORD_DEFAULT reduce using rule 10 (statement -> declaration_statement .)


state 5

    (11) statement -> assignment_statement .

    KEYWORD_IF      reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_WHILE   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_DO      reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_FOR     reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_SWITCH  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_BREAK   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_RETURN  reduce using rule 11 (statement -> assignment_statement .)
    LBRACE          reduce using rule 11 (statement -> assignment_statement .)
    IDENTIFIER      reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_INPUT    reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_OUTPUT   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_EXIT    reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_PUSH reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_POP  reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_SIZE reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 11 (statement -> assignment_statement .)
    SYSTEM_ARR_AVG  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_INT     reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_FLOAT   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_CHAR    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_VOID    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_STRING  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_BOOL    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_FILE    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_SOCKET  reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_DICT    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_REGEX   reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_ARRAY   reduce using rule 11 (statement -> assignment_statement .)
    $end            reduce using rule 11 (statement -> assignment_statement .)
    RBRACE          reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_ELSE    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_CASE    reduce using rule 11 (statement -> assignment_statement .)
    KEYWORD_DEFAULT reduce using rule 11 (statement -> assignment_statement .)


state 6

    (12) statement -> if_statement .

    KEYWORD_IF      reduce using rule 12 (statement -> if_statement .)
    KEYWORD_WHILE   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_DO      reduce using rule 12 (statement -> if_statement .)
    KEYWORD_FOR     reduce using rule 12 (statement -> if_statement .)
    KEYWORD_SWITCH  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_BREAK   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_RETURN  reduce using rule 12 (statement -> if_statement .)
    LBRACE          reduce using rule 12 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 12 (statement -> if_statement .)
    SYSTEM_INPUT    reduce using rule 12 (statement -> if_statement .)
    SYSTEM_OUTPUT   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_EXIT    reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_PUSH reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_POP  reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_SIZE reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 12 (statement -> if_statement .)
    SYSTEM_ARR_AVG  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_INT     reduce using rule 12 (statement -> if_statement .)
    KEYWORD_FLOAT   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_CHAR    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_VOID    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_STRING  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_BOOL    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_FILE    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_SOCKET  reduce using rule 12 (statement -> if_statement .)
    KEYWORD_DICT    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_REGEX   reduce using rule 12 (statement -> if_statement .)
    KEYWORD_ARRAY   reduce using rule 12 (statement -> if_statement .)
    $end            reduce using rule 12 (statement -> if_statement .)
    RBRACE          reduce using rule 12 (statement -> if_statement .)
    KEYWORD_ELSE    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_CASE    reduce using rule 12 (statement -> if_statement .)
    KEYWORD_DEFAULT reduce using rule 12 (statement -> if_statement .)


state 7

    (13) statement -> while_statement .

    KEYWORD_IF      reduce using rule 13 (statement -> while_statement .)
    KEYWORD_WHILE   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_DO      reduce using rule 13 (statement -> while_statement .)
    KEYWORD_FOR     reduce using rule 13 (statement -> while_statement .)
    KEYWORD_SWITCH  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_BREAK   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_RETURN  reduce using rule 13 (statement -> while_statement .)
    LBRACE          reduce using rule 13 (statement -> while_statement .)
    IDENTIFIER      reduce using rule 13 (statement -> while_statement .)
    SYSTEM_INPUT    reduce using rule 13 (statement -> while_statement .)
    SYSTEM_OUTPUT   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_EXIT    reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_PUSH reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_POP  reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_SIZE reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 13 (statement -> while_statement .)
    SYSTEM_ARR_AVG  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_INT     reduce using rule 13 (statement -> while_statement .)
    KEYWORD_FLOAT   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_CHAR    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_VOID    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_STRING  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_BOOL    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_FILE    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_SOCKET  reduce using rule 13 (statement -> while_statement .)
    KEYWORD_DICT    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_REGEX   reduce using rule 13 (statement -> while_statement .)
    KEYWORD_ARRAY   reduce using rule 13 (statement -> while_statement .)
    $end            reduce using rule 13 (statement -> while_statement .)
    RBRACE          reduce using rule 13 (statement -> while_statement .)
    KEYWORD_ELSE    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_CASE    reduce using rule 13 (statement -> while_statement .)
    KEYWORD_DEFAULT reduce using rule 13 (statement -> while_statement .)


state 8

    (14) statement -> do_while_statement .

    KEYWORD_IF      reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_WHILE   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_DO      reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_FOR     reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_SWITCH  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_BREAK   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_RETURN  reduce using rule 14 (statement -> do_while_statement .)
    LBRACE          reduce using rule 14 (statement -> do_while_statement .)
    IDENTIFIER      reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_INPUT    reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_OUTPUT   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_EXIT    reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_PUSH reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_POP  reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_SIZE reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 14 (statement -> do_while_statement .)
    SYSTEM_ARR_AVG  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_INT     reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_FLOAT   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_CHAR    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_VOID    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_STRING  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_BOOL    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_FILE    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_SOCKET  reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_DICT    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_REGEX   reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_ARRAY   reduce using rule 14 (statement -> do_while_statement .)
    $end            reduce using rule 14 (statement -> do_while_statement .)
    RBRACE          reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_ELSE    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_CASE    reduce using rule 14 (statement -> do_while_statement .)
    KEYWORD_DEFAULT reduce using rule 14 (statement -> do_while_statement .)


state 9

    (15) statement -> for_statement .

    KEYWORD_IF      reduce using rule 15 (statement -> for_statement .)
    KEYWORD_WHILE   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_DO      reduce using rule 15 (statement -> for_statement .)
    KEYWORD_FOR     reduce using rule 15 (statement -> for_statement .)
    KEYWORD_SWITCH  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_BREAK   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_RETURN  reduce using rule 15 (statement -> for_statement .)
    LBRACE          reduce using rule 15 (statement -> for_statement .)
    IDENTIFIER      reduce using rule 15 (statement -> for_statement .)
    SYSTEM_INPUT    reduce using rule 15 (statement -> for_statement .)
    SYSTEM_OUTPUT   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_EXIT    reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_PUSH reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_POP  reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_SIZE reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 15 (statement -> for_statement .)
    SYSTEM_ARR_AVG  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_INT     reduce using rule 15 (statement -> for_statement .)
    KEYWORD_FLOAT   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_CHAR    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_VOID    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_STRING  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_BOOL    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_FILE    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_SOCKET  reduce using rule 15 (statement -> for_statement .)
    KEYWORD_DICT    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_REGEX   reduce using rule 15 (statement -> for_statement .)
    KEYWORD_ARRAY   reduce using rule 15 (statement -> for_statement .)
    $end            reduce using rule 15 (statement -> for_statement .)
    RBRACE          reduce using rule 15 (statement -> for_statement .)
    KEYWORD_ELSE    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_CASE    reduce using rule 15 (statement -> for_statement .)
    KEYWORD_DEFAULT reduce using rule 15 (statement -> for_statement .)


state 10

    (16) statement -> switch_statement .

    KEYWORD_IF      reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_WHILE   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_DO      reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_FOR     reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_SWITCH  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_BREAK   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_RETURN  reduce using rule 16 (statement -> switch_statement .)
    LBRACE          reduce using rule 16 (statement -> switch_statement .)
    IDENTIFIER      reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_INPUT    reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_OUTPUT   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_EXIT    reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_PUSH reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_POP  reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_SIZE reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 16 (statement -> switch_statement .)
    SYSTEM_ARR_AVG  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_INT     reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_FLOAT   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_CHAR    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_VOID    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_STRING  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_BOOL    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_FILE    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_SOCKET  reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_DICT    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_REGEX   reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_ARRAY   reduce using rule 16 (statement -> switch_statement .)
    $end            reduce using rule 16 (statement -> switch_statement .)
    RBRACE          reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_ELSE    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_CASE    reduce using rule 16 (statement -> switch_statement .)
    KEYWORD_DEFAULT reduce using rule 16 (statement -> switch_statement .)


state 11

    (17) statement -> break_statement .

    KEYWORD_IF      reduce using rule 17 (statement -> break_statement .)
    KEYWORD_WHILE   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_DO      reduce using rule 17 (statement -> break_statement .)
    KEYWORD_FOR     reduce using rule 17 (statement -> break_statement .)
    KEYWORD_SWITCH  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_BREAK   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_RETURN  reduce using rule 17 (statement -> break_statement .)
    LBRACE          reduce using rule 17 (statement -> break_statement .)
    IDENTIFIER      reduce using rule 17 (statement -> break_statement .)
    SYSTEM_INPUT    reduce using rule 17 (statement -> break_statement .)
    SYSTEM_OUTPUT   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_EXIT    reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_PUSH reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_POP  reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_SIZE reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 17 (statement -> break_statement .)
    SYSTEM_ARR_AVG  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_INT     reduce using rule 17 (statement -> break_statement .)
    KEYWORD_FLOAT   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_CHAR    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_VOID    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_STRING  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_BOOL    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_FILE    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_SOCKET  reduce using rule 17 (statement -> break_statement .)
    KEYWORD_DICT    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_REGEX   reduce using rule 17 (statement -> break_statement .)
    KEYWORD_ARRAY   reduce using rule 17 (statement -> break_statement .)
    $end            reduce using rule 17 (statement -> break_statement .)
    RBRACE          reduce using rule 17 (statement -> break_statement .)
    KEYWORD_ELSE    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_CASE    reduce using rule 17 (statement -> break_statement .)
    KEYWORD_DEFAULT reduce using rule 17 (statement -> break_statement .)


state 12

    (18) statement -> return_statement .

    KEYWORD_IF      reduce using rule 18 (statement -> return_statement .)
    KEYWORD_WHILE   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_DO      reduce using rule 18 (statement -> return_statement .)
    KEYWORD_FOR     reduce using rule 18 (statement -> return_statement .)
    KEYWORD_SWITCH  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_BREAK   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_RETURN  reduce using rule 18 (statement -> return_statement .)
    LBRACE          reduce using rule 18 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 18 (statement -> return_statement .)
    SYSTEM_INPUT    reduce using rule 18 (statement -> return_statement .)
    SYSTEM_OUTPUT   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_EXIT    reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_PUSH reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_POP  reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_SIZE reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 18 (statement -> return_statement .)
    SYSTEM_ARR_AVG  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_INT     reduce using rule 18 (statement -> return_statement .)
    KEYWORD_FLOAT   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_CHAR    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_VOID    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_STRING  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_BOOL    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_FILE    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_SOCKET  reduce using rule 18 (statement -> return_statement .)
    KEYWORD_DICT    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_REGEX   reduce using rule 18 (statement -> return_statement .)
    KEYWORD_ARRAY   reduce using rule 18 (statement -> return_statement .)
    $end            reduce using rule 18 (statement -> return_statement .)
    RBRACE          reduce using rule 18 (statement -> return_statement .)
    KEYWORD_ELSE    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_CASE    reduce using rule 18 (statement -> return_statement .)
    KEYWORD_DEFAULT reduce using rule 18 (statement -> return_statement .)


state 13

    (19) statement -> function_call_statement .

    KEYWORD_IF      reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_WHILE   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_DO      reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_FOR     reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_SWITCH  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_BREAK   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_RETURN  reduce using rule 19 (statement -> function_call_statement .)
    LBRACE          reduce using rule 19 (statement -> function_call_statement .)
    IDENTIFIER      reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_INPUT    reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_OUTPUT   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_EXIT    reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_PUSH reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_POP  reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_SIZE reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 19 (statement -> function_call_statement .)
    SYSTEM_ARR_AVG  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_INT     reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_FLOAT   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_CHAR    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_VOID    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_STRING  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_BOOL    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_FILE    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_SOCKET  reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_DICT    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_REGEX   reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_ARRAY   reduce using rule 19 (statement -> function_call_statement .)
    $end            reduce using rule 19 (statement -> function_call_statement .)
    RBRACE          reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_ELSE    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_CASE    reduce using rule 19 (statement -> function_call_statement .)
    KEYWORD_DEFAULT reduce using rule 19 (statement -> function_call_statement .)


state 14

    (20) statement -> block_statement .

    KEYWORD_IF      reduce using rule 20 (statement -> block_statement .)
    KEYWORD_WHILE   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_DO      reduce using rule 20 (statement -> block_statement .)
    KEYWORD_FOR     reduce using rule 20 (statement -> block_statement .)
    KEYWORD_SWITCH  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_BREAK   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_RETURN  reduce using rule 20 (statement -> block_statement .)
    LBRACE          reduce using rule 20 (statement -> block_statement .)
    IDENTIFIER      reduce using rule 20 (statement -> block_statement .)
    SYSTEM_INPUT    reduce using rule 20 (statement -> block_statement .)
    SYSTEM_OUTPUT   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_EXIT    reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_PUSH reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_POP  reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_SIZE reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 20 (statement -> block_statement .)
    SYSTEM_ARR_AVG  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_INT     reduce using rule 20 (statement -> block_statement .)
    KEYWORD_FLOAT   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_CHAR    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_VOID    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_STRING  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_BOOL    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_FILE    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_SOCKET  reduce using rule 20 (statement -> block_statement .)
    KEYWORD_DICT    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_REGEX   reduce using rule 20 (statement -> block_statement .)
    KEYWORD_ARRAY   reduce using rule 20 (statement -> block_statement .)
    $end            reduce using rule 20 (statement -> block_statement .)
    RBRACE          reduce using rule 20 (statement -> block_statement .)
    KEYWORD_ELSE    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_CASE    reduce using rule 20 (statement -> block_statement .)
    KEYWORD_DEFAULT reduce using rule 20 (statement -> block_statement .)


state 15

    (21) statement -> function_definition .

    KEYWORD_IF      reduce using rule 21 (statement -> function_definition .)
    KEYWORD_WHILE   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_DO      reduce using rule 21 (statement -> function_definition .)
    KEYWORD_FOR     reduce using rule 21 (statement -> function_definition .)
    KEYWORD_SWITCH  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_BREAK   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_RETURN  reduce using rule 21 (statement -> function_definition .)
    LBRACE          reduce using rule 21 (statement -> function_definition .)
    IDENTIFIER      reduce using rule 21 (statement -> function_definition .)
    SYSTEM_INPUT    reduce using rule 21 (statement -> function_definition .)
    SYSTEM_OUTPUT   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_EXIT    reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_PUSH reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_POP  reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_SIZE reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_CONTAINS reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_INDEXOF reduce using rule 21 (statement -> function_definition .)
    SYSTEM_ARR_AVG  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_INT     reduce using rule 21 (statement -> function_definition .)
    KEYWORD_FLOAT   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_CHAR    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_VOID    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_STRING  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_BOOL    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_FILE    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_SOCKET  reduce using rule 21 (statement -> function_definition .)
    KEYWORD_DICT    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_REGEX   reduce using rule 21 (statement -> function_definition .)
    KEYWORD_ARRAY   reduce using rule 21 (statement -> function_definition .)
    $end            reduce using rule 21 (statement -> function_definition .)
    RBRACE          reduce using rule 21 (statement -> function_definition .)
    KEYWORD_ELSE    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_CASE    reduce using rule 21 (statement -> function_definition .)
    KEYWORD_DEFAULT reduce using rule 21 (statement -> function_definition .)


state 16

    (29) declaration_statement -> type_specifier . IDENTIFIER SEMICOLON
    (30) declaration_statement -> type_specifier . IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (2) function_definition -> type_specifier . IDENTIFIER LPAREN params RPAREN block_statement

    IDENTIFIER      shift and go to state 52


state 17

    (51) left_hand_side -> IDENTIFIER .
    (70) function_call -> IDENTIFIER . LPAREN argument_list RPAREN
    (71) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) subscript_access -> IDENTIFIER . LBRACKET expression RBRACKET

    ASSIGN          reduce using rule 51 (left_hand_side -> IDENTIFIER .)
    LPAREN          shift and go to state 53
    LBRACKET        shift and go to state 54


state 18

    (50) assignment_statement -> left_hand_side . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 55


state 19

    (54) if_statement -> KEYWORD_IF . LPAREN expression RPAREN statement
    (55) if_statement -> KEYWORD_IF . LPAREN expression RPAREN statement KEYWORD_ELSE statement

    LPAREN          shift and go to state 56


state 20

    (56) while_statement -> KEYWORD_WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 57


state 21

    (22) do_while_statement -> KEYWORD_DO . statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    statement                      shift and go to state 58
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 22

    (57) for_statement -> KEYWORD_FOR . LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement

    LPAREN          shift and go to state 59


state 23

    (23) switch_statement -> KEYWORD_SWITCH . LPAREN expression RPAREN LBRACE case_list RBRACE

    LPAREN          shift and go to state 60


state 24

    (85) block_statement -> LBRACE . RBRACE
    (86) block_statement -> LBRACE . statement_list RBRACE
    (8) statement_list -> . statement
    (9) statement_list -> . statement_list statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    RBRACE          shift and go to state 61
    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    statement_list                 shift and go to state 62
    statement                      shift and go to state 3
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 25

    (28) break_statement -> KEYWORD_BREAK . SEMICOLON

    SEMICOLON       shift and go to state 63


state 26

    (67) return_statement -> KEYWORD_RETURN . SEMICOLON
    (68) return_statement -> KEYWORD_RETURN . expression SEMICOLON
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    SEMICOLON       shift and go to state 64
    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 65
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 27

    (69) function_call_statement -> function_call . SEMICOLON

    SEMICOLON       shift and go to state 89


state 28

    (36) type_specifier -> primitive_type .
    (49) array_type -> primitive_type . LBRACKET RBRACKET

    IDENTIFIER      reduce using rule 36 (type_specifier -> primitive_type .)
    RPAREN          reduce using rule 36 (type_specifier -> primitive_type .)
    COMMA           reduce using rule 36 (type_specifier -> primitive_type .)
    LBRACKET        shift and go to state 90


state 29

    (37) type_specifier -> array_type .

    IDENTIFIER      reduce using rule 37 (type_specifier -> array_type .)
    RPAREN          reduce using rule 37 (type_specifier -> array_type .)
    COMMA           reduce using rule 37 (type_specifier -> array_type .)


state 30

    (52) left_hand_side -> subscript_access .

    ASSIGN          reduce using rule 52 (left_hand_side -> subscript_access .)


state 31

    (72) function_call -> SYSTEM_INPUT . LPAREN IDENTIFIER COMMA type_specifier RPAREN

    LPAREN          shift and go to state 91


state 32

    (73) function_call -> SYSTEM_OUTPUT . LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> SYSTEM_OUTPUT . LPAREN expression COMMA type_specifier COMMA expression RPAREN

    LPAREN          shift and go to state 92


state 33

    (75) function_call -> KEYWORD_EXIT . LPAREN RPAREN

    LPAREN          shift and go to state 93


state 34

    (76) function_call -> SYSTEM_ARR_PUSH . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 94


state 35

    (77) function_call -> SYSTEM_ARR_POP . LPAREN expression RPAREN

    LPAREN          shift and go to state 95


state 36

    (78) function_call -> SYSTEM_ARR_SIZE . LPAREN expression RPAREN

    LPAREN          shift and go to state 96


state 37

    (79) function_call -> SYSTEM_ARR_CONTAINS . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 97


state 38

    (80) function_call -> SYSTEM_ARR_INDEXOF . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 98


state 39

    (81) function_call -> SYSTEM_ARR_AVG . LPAREN expression RPAREN
    (82) function_call -> SYSTEM_ARR_AVG . LPAREN expression COMMA expression RPAREN

    LPAREN          shift and go to state 99


state 40

    (38) primitive_type -> KEYWORD_INT .

    LBRACKET        reduce using rule 38 (primitive_type -> KEYWORD_INT .)
    IDENTIFIER      reduce using rule 38 (primitive_type -> KEYWORD_INT .)
    RPAREN          reduce using rule 38 (primitive_type -> KEYWORD_INT .)
    COMMA           reduce using rule 38 (primitive_type -> KEYWORD_INT .)


state 41

    (39) primitive_type -> KEYWORD_FLOAT .

    LBRACKET        reduce using rule 39 (primitive_type -> KEYWORD_FLOAT .)
    IDENTIFIER      reduce using rule 39 (primitive_type -> KEYWORD_FLOAT .)
    RPAREN          reduce using rule 39 (primitive_type -> KEYWORD_FLOAT .)
    COMMA           reduce using rule 39 (primitive_type -> KEYWORD_FLOAT .)


state 42

    (40) primitive_type -> KEYWORD_CHAR .

    LBRACKET        reduce using rule 40 (primitive_type -> KEYWORD_CHAR .)
    IDENTIFIER      reduce using rule 40 (primitive_type -> KEYWORD_CHAR .)
    RPAREN          reduce using rule 40 (primitive_type -> KEYWORD_CHAR .)
    COMMA           reduce using rule 40 (primitive_type -> KEYWORD_CHAR .)


state 43

    (41) primitive_type -> KEYWORD_VOID .

    LBRACKET        reduce using rule 41 (primitive_type -> KEYWORD_VOID .)
    IDENTIFIER      reduce using rule 41 (primitive_type -> KEYWORD_VOID .)
    RPAREN          reduce using rule 41 (primitive_type -> KEYWORD_VOID .)
    COMMA           reduce using rule 41 (primitive_type -> KEYWORD_VOID .)


state 44

    (42) primitive_type -> KEYWORD_STRING .

    LBRACKET        reduce using rule 42 (primitive_type -> KEYWORD_STRING .)
    IDENTIFIER      reduce using rule 42 (primitive_type -> KEYWORD_STRING .)
    RPAREN          reduce using rule 42 (primitive_type -> KEYWORD_STRING .)
    COMMA           reduce using rule 42 (primitive_type -> KEYWORD_STRING .)


state 45

    (43) primitive_type -> KEYWORD_BOOL .

    LBRACKET        reduce using rule 43 (primitive_type -> KEYWORD_BOOL .)
    IDENTIFIER      reduce using rule 43 (primitive_type -> KEYWORD_BOOL .)
    RPAREN          reduce using rule 43 (primitive_type -> KEYWORD_BOOL .)
    COMMA           reduce using rule 43 (primitive_type -> KEYWORD_BOOL .)


state 46

    (44) primitive_type -> KEYWORD_FILE .

    LBRACKET        reduce using rule 44 (primitive_type -> KEYWORD_FILE .)
    IDENTIFIER      reduce using rule 44 (primitive_type -> KEYWORD_FILE .)
    RPAREN          reduce using rule 44 (primitive_type -> KEYWORD_FILE .)
    COMMA           reduce using rule 44 (primitive_type -> KEYWORD_FILE .)


state 47

    (45) primitive_type -> KEYWORD_SOCKET .

    LBRACKET        reduce using rule 45 (primitive_type -> KEYWORD_SOCKET .)
    IDENTIFIER      reduce using rule 45 (primitive_type -> KEYWORD_SOCKET .)
    RPAREN          reduce using rule 45 (primitive_type -> KEYWORD_SOCKET .)
    COMMA           reduce using rule 45 (primitive_type -> KEYWORD_SOCKET .)


state 48

    (46) primitive_type -> KEYWORD_DICT .

    LBRACKET        reduce using rule 46 (primitive_type -> KEYWORD_DICT .)
    IDENTIFIER      reduce using rule 46 (primitive_type -> KEYWORD_DICT .)
    RPAREN          reduce using rule 46 (primitive_type -> KEYWORD_DICT .)
    COMMA           reduce using rule 46 (primitive_type -> KEYWORD_DICT .)


state 49

    (47) primitive_type -> KEYWORD_REGEX .

    LBRACKET        reduce using rule 47 (primitive_type -> KEYWORD_REGEX .)
    IDENTIFIER      reduce using rule 47 (primitive_type -> KEYWORD_REGEX .)
    RPAREN          reduce using rule 47 (primitive_type -> KEYWORD_REGEX .)
    COMMA           reduce using rule 47 (primitive_type -> KEYWORD_REGEX .)


state 50

    (48) primitive_type -> KEYWORD_ARRAY .

    LBRACKET        reduce using rule 48 (primitive_type -> KEYWORD_ARRAY .)
    IDENTIFIER      reduce using rule 48 (primitive_type -> KEYWORD_ARRAY .)
    RPAREN          reduce using rule 48 (primitive_type -> KEYWORD_ARRAY .)
    COMMA           reduce using rule 48 (primitive_type -> KEYWORD_ARRAY .)


state 51

    (9) statement_list -> statement_list statement .

    KEYWORD_IF      reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_WHILE   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_DO      reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_FOR     reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_SWITCH  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_BREAK   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_RETURN  reduce using rule 9 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 9 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_INPUT    reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_OUTPUT   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_EXIT    reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_PUSH reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_POP  reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_SIZE reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 9 (statement_list -> statement_list statement .)
    SYSTEM_ARR_AVG  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_INT     reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_FLOAT   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_CHAR    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_VOID    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_STRING  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_BOOL    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_FILE    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_SOCKET  reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_DICT    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_REGEX   reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_ARRAY   reduce using rule 9 (statement_list -> statement_list statement .)
    $end            reduce using rule 9 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_CASE    reduce using rule 9 (statement_list -> statement_list statement .)
    KEYWORD_DEFAULT reduce using rule 9 (statement_list -> statement_list statement .)


state 52

    (29) declaration_statement -> type_specifier IDENTIFIER . SEMICOLON
    (30) declaration_statement -> type_specifier IDENTIFIER . ASSIGN expression SEMICOLON
    (31) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET SEMICOLON
    (2) function_definition -> type_specifier IDENTIFIER . LPAREN params RPAREN block_statement

    SEMICOLON       shift and go to state 100
    ASSIGN          shift and go to state 101
    LBRACKET        shift and go to state 102
    LPAREN          shift and go to state 103


state 53

    (70) function_call -> IDENTIFIER LPAREN . argument_list RPAREN
    (71) function_call -> IDENTIFIER LPAREN . RPAREN
    (83) argument_list -> . expression
    (84) argument_list -> . argument_list COMMA expression
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RPAREN          shift and go to state 105
    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    argument_list                  shift and go to state 104
    expression                     shift and go to state 106
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 54

    (132) subscript_access -> IDENTIFIER LBRACKET . expression RBRACKET
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 107
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 55

    (50) assignment_statement -> left_hand_side ASSIGN . expression SEMICOLON
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 108
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 56

    (54) if_statement -> KEYWORD_IF LPAREN . expression RPAREN statement
    (55) if_statement -> KEYWORD_IF LPAREN . expression RPAREN statement KEYWORD_ELSE statement
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 109
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 57

    (56) while_statement -> KEYWORD_WHILE LPAREN . expression RPAREN statement
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 110
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 58

    (22) do_while_statement -> KEYWORD_DO statement . KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON

    KEYWORD_WHILE   shift and go to state 111


state 59

    (57) for_statement -> KEYWORD_FOR LPAREN . for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (58) for_init -> . assignment_statement_no_semi SEMICOLON
    (59) for_init -> . declaration_statement
    (60) for_init -> . SEMICOLON
    (53) assignment_statement_no_semi -> . left_hand_side ASSIGN expression
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET

    SEMICOLON       shift and go to state 113
    IDENTIFIER      shift and go to state 118
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    for_init                       shift and go to state 112
    assignment_statement_no_semi   shift and go to state 114
    declaration_statement          shift and go to state 115
    left_hand_side                 shift and go to state 116
    type_specifier                 shift and go to state 117
    subscript_access               shift and go to state 30
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29

state 60

    (23) switch_statement -> KEYWORD_SWITCH LPAREN . expression RPAREN LBRACE case_list RBRACE
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 119
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 61

    (85) block_statement -> LBRACE RBRACE .

    KEYWORD_IF      reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_WHILE   reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_DO      reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_FOR     reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_SWITCH  reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_BREAK   reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_RETURN  reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    LBRACE          reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    IDENTIFIER      reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    SYSTEM_INPUT    reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    SYSTEM_OUTPUT   reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_EXIT    reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_PUSH reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_POP  reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_SIZE reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_CONTAINS reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_INDEXOF reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    SYSTEM_ARR_AVG  reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_INT     reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_FLOAT   reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_CHAR    reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_VOID    reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_STRING  reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_BOOL    reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_FILE    reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_SOCKET  reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_DICT    reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_REGEX   reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_ARRAY   reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    $end            reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    RBRACE          reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_ELSE    reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_CASE    reduce using rule 85 (block_statement -> LBRACE RBRACE .)
    KEYWORD_DEFAULT reduce using rule 85 (block_statement -> LBRACE RBRACE .)


state 62

    (86) block_statement -> LBRACE statement_list . RBRACE
    (9) statement_list -> statement_list . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    RBRACE          shift and go to state 120
    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    statement                      shift and go to state 51
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 63

    (28) break_statement -> KEYWORD_BREAK SEMICOLON .

    KEYWORD_IF      reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_DO      reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_FOR     reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    LBRACE          reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    IDENTIFIER      reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_INT     reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_VOID    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_STRING  reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_FILE    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_DICT    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    $end            reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    RBRACE          reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_CASE    reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 28 (break_statement -> KEYWORD_BREAK SEMICOLON .)


state 64

    (67) return_statement -> KEYWORD_RETURN SEMICOLON .

    KEYWORD_IF      reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_DO      reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_FOR     reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    LBRACE          reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_INT     reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_VOID    reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_STRING  reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_FILE    reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_DICT    reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    $end            reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    RBRACE          reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_CASE    reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 67 (return_statement -> KEYWORD_RETURN SEMICOLON .)


state 65

    (68) return_statement -> KEYWORD_RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 121


state 66

    (92) expression -> logical_expression .
    (95) logical_expression -> logical_expression . AND equality_expression
    (96) logical_expression -> logical_expression . OR equality_expression

    SEMICOLON       reduce using rule 92 (expression -> logical_expression .)
    RPAREN          reduce using rule 92 (expression -> logical_expression .)
    COMMA           reduce using rule 92 (expression -> logical_expression .)
    RBRACKET        reduce using rule 92 (expression -> logical_expression .)
    COLON           reduce using rule 92 (expression -> logical_expression .)
    RBRACE          reduce using rule 92 (expression -> logical_expression .)
    AND             shift and go to state 122
    OR              shift and go to state 123


state 67

    (93) expression -> initializer_list .

    SEMICOLON       reduce using rule 93 (expression -> initializer_list .)
    RPAREN          reduce using rule 93 (expression -> initializer_list .)
    COMMA           reduce using rule 93 (expression -> initializer_list .)
    RBRACKET        reduce using rule 93 (expression -> initializer_list .)
    COLON           reduce using rule 93 (expression -> initializer_list .)
    RBRACE          reduce using rule 93 (expression -> initializer_list .)


state 68

    (94) logical_expression -> equality_expression .
    (98) equality_expression -> equality_expression . EQ relational_expression
    (99) equality_expression -> equality_expression . NEQ relational_expression

    AND             reduce using rule 94 (logical_expression -> equality_expression .)
    OR              reduce using rule 94 (logical_expression -> equality_expression .)
    SEMICOLON       reduce using rule 94 (logical_expression -> equality_expression .)
    RPAREN          reduce using rule 94 (logical_expression -> equality_expression .)
    COMMA           reduce using rule 94 (logical_expression -> equality_expression .)
    RBRACKET        reduce using rule 94 (logical_expression -> equality_expression .)
    COLON           reduce using rule 94 (logical_expression -> equality_expression .)
    RBRACE          reduce using rule 94 (logical_expression -> equality_expression .)
    EQ              shift and go to state 124
    NEQ             shift and go to state 125


state 69

    (87) initializer_list -> LBRACKET . expression_list_opt RBRACKET
    (88) expression_list_opt -> . expression_list
    (89) expression_list_opt -> . empty
    (90) expression_list -> . expression
    (91) expression_list -> . expression_list COMMA expression
    (66) empty -> .
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RBRACKET        reduce using rule 66 (empty -> .)
    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression_list_opt            shift and go to state 126
    expression_list                shift and go to state 127
    empty                          shift and go to state 128
    expression                     shift and go to state 129
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 70

    (97) equality_expression -> relational_expression .
    (101) relational_expression -> relational_expression . GT additive_expression
    (102) relational_expression -> relational_expression . LT additive_expression
    (103) relational_expression -> relational_expression . GEQ additive_expression
    (104) relational_expression -> relational_expression . LEQ additive_expression

    EQ              reduce using rule 97 (equality_expression -> relational_expression .)
    NEQ             reduce using rule 97 (equality_expression -> relational_expression .)
    AND             reduce using rule 97 (equality_expression -> relational_expression .)
    OR              reduce using rule 97 (equality_expression -> relational_expression .)
    SEMICOLON       reduce using rule 97 (equality_expression -> relational_expression .)
    RPAREN          reduce using rule 97 (equality_expression -> relational_expression .)
    COMMA           reduce using rule 97 (equality_expression -> relational_expression .)
    RBRACKET        reduce using rule 97 (equality_expression -> relational_expression .)
    COLON           reduce using rule 97 (equality_expression -> relational_expression .)
    RBRACE          reduce using rule 97 (equality_expression -> relational_expression .)
    GT              shift and go to state 130
    LT              shift and go to state 131
    GEQ             shift and go to state 132
    LEQ             shift and go to state 133


state 71

    (100) relational_expression -> additive_expression .
    (106) additive_expression -> additive_expression . PLUS multiplicative_expression
    (107) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 100 (relational_expression -> additive_expression .)
    LT              reduce using rule 100 (relational_expression -> additive_expression .)
    GEQ             reduce using rule 100 (relational_expression -> additive_expression .)
    LEQ             reduce using rule 100 (relational_expression -> additive_expression .)
    EQ              reduce using rule 100 (relational_expression -> additive_expression .)
    NEQ             reduce using rule 100 (relational_expression -> additive_expression .)
    AND             reduce using rule 100 (relational_expression -> additive_expression .)
    OR              reduce using rule 100 (relational_expression -> additive_expression .)
    SEMICOLON       reduce using rule 100 (relational_expression -> additive_expression .)
    RPAREN          reduce using rule 100 (relational_expression -> additive_expression .)
    COMMA           reduce using rule 100 (relational_expression -> additive_expression .)
    RBRACKET        reduce using rule 100 (relational_expression -> additive_expression .)
    COLON           reduce using rule 100 (relational_expression -> additive_expression .)
    RBRACE          reduce using rule 100 (relational_expression -> additive_expression .)
    PLUS            shift and go to state 134
    MINUS           shift and go to state 135


state 72

    (105) additive_expression -> multiplicative_expression .
    (109) multiplicative_expression -> multiplicative_expression . MUL unary_expression
    (110) multiplicative_expression -> multiplicative_expression . DIV unary_expression
    (111) multiplicative_expression -> multiplicative_expression . MOD unary_expression

    PLUS            reduce using rule 105 (additive_expression -> multiplicative_expression .)
    MINUS           reduce using rule 105 (additive_expression -> multiplicative_expression .)
    GT              reduce using rule 105 (additive_expression -> multiplicative_expression .)
    LT              reduce using rule 105 (additive_expression -> multiplicative_expression .)
    GEQ             reduce using rule 105 (additive_expression -> multiplicative_expression .)
    LEQ             reduce using rule 105 (additive_expression -> multiplicative_expression .)
    EQ              reduce using rule 105 (additive_expression -> multiplicative_expression .)
    NEQ             reduce using rule 105 (additive_expression -> multiplicative_expression .)
    AND             reduce using rule 105 (additive_expression -> multiplicative_expression .)
    OR              reduce using rule 105 (additive_expression -> multiplicative_expression .)
    SEMICOLON       reduce using rule 105 (additive_expression -> multiplicative_expression .)
    RPAREN          reduce using rule 105 (additive_expression -> multiplicative_expression .)
    COMMA           reduce using rule 105 (additive_expression -> multiplicative_expression .)
    RBRACKET        reduce using rule 105 (additive_expression -> multiplicative_expression .)
    COLON           reduce using rule 105 (additive_expression -> multiplicative_expression .)
    RBRACE          reduce using rule 105 (additive_expression -> multiplicative_expression .)
    MUL             shift and go to state 136
    DIV             shift and go to state 137
    MOD             shift and go to state 138


state 73

    (113) unary_expression -> MINUS . unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    unary_expression               shift and go to state 139
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 74

    (108) multiplicative_expression -> unary_expression .

    MUL             reduce using rule 108 (multiplicative_expression -> unary_expression .)
    DIV             reduce using rule 108 (multiplicative_expression -> unary_expression .)
    MOD             reduce using rule 108 (multiplicative_expression -> unary_expression .)
    PLUS            reduce using rule 108 (multiplicative_expression -> unary_expression .)
    MINUS           reduce using rule 108 (multiplicative_expression -> unary_expression .)
    GT              reduce using rule 108 (multiplicative_expression -> unary_expression .)
    LT              reduce using rule 108 (multiplicative_expression -> unary_expression .)
    GEQ             reduce using rule 108 (multiplicative_expression -> unary_expression .)
    LEQ             reduce using rule 108 (multiplicative_expression -> unary_expression .)
    EQ              reduce using rule 108 (multiplicative_expression -> unary_expression .)
    NEQ             reduce using rule 108 (multiplicative_expression -> unary_expression .)
    AND             reduce using rule 108 (multiplicative_expression -> unary_expression .)
    OR              reduce using rule 108 (multiplicative_expression -> unary_expression .)
    SEMICOLON       reduce using rule 108 (multiplicative_expression -> unary_expression .)
    RPAREN          reduce using rule 108 (multiplicative_expression -> unary_expression .)
    COMMA           reduce using rule 108 (multiplicative_expression -> unary_expression .)
    RBRACKET        reduce using rule 108 (multiplicative_expression -> unary_expression .)
    COLON           reduce using rule 108 (multiplicative_expression -> unary_expression .)
    RBRACE          reduce using rule 108 (multiplicative_expression -> unary_expression .)


state 75

    (112) unary_expression -> primary_expression .

    MUL             reduce using rule 112 (unary_expression -> primary_expression .)
    DIV             reduce using rule 112 (unary_expression -> primary_expression .)
    MOD             reduce using rule 112 (unary_expression -> primary_expression .)
    PLUS            reduce using rule 112 (unary_expression -> primary_expression .)
    MINUS           reduce using rule 112 (unary_expression -> primary_expression .)
    GT              reduce using rule 112 (unary_expression -> primary_expression .)
    LT              reduce using rule 112 (unary_expression -> primary_expression .)
    GEQ             reduce using rule 112 (unary_expression -> primary_expression .)
    LEQ             reduce using rule 112 (unary_expression -> primary_expression .)
    EQ              reduce using rule 112 (unary_expression -> primary_expression .)
    NEQ             reduce using rule 112 (unary_expression -> primary_expression .)
    AND             reduce using rule 112 (unary_expression -> primary_expression .)
    OR              reduce using rule 112 (unary_expression -> primary_expression .)
    SEMICOLON       reduce using rule 112 (unary_expression -> primary_expression .)
    RPAREN          reduce using rule 112 (unary_expression -> primary_expression .)
    COMMA           reduce using rule 112 (unary_expression -> primary_expression .)
    RBRACKET        reduce using rule 112 (unary_expression -> primary_expression .)
    COLON           reduce using rule 112 (unary_expression -> primary_expression .)
    RBRACE          reduce using rule 112 (unary_expression -> primary_expression .)


state 76

    (114) primary_expression -> IDENTIFIER .
    (70) function_call -> IDENTIFIER . LPAREN argument_list RPAREN
    (71) function_call -> IDENTIFIER . LPAREN RPAREN
    (132) subscript_access -> IDENTIFIER . LBRACKET expression RBRACKET

    MUL             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    DIV             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    MOD             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    PLUS            reduce using rule 114 (primary_expression -> IDENTIFIER .)
    MINUS           reduce using rule 114 (primary_expression -> IDENTIFIER .)
    GT              reduce using rule 114 (primary_expression -> IDENTIFIER .)
    LT              reduce using rule 114 (primary_expression -> IDENTIFIER .)
    GEQ             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    LEQ             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    EQ              reduce using rule 114 (primary_expression -> IDENTIFIER .)
    NEQ             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    AND             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    OR              reduce using rule 114 (primary_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 114 (primary_expression -> IDENTIFIER .)
    RPAREN          reduce using rule 114 (primary_expression -> IDENTIFIER .)
    COMMA           reduce using rule 114 (primary_expression -> IDENTIFIER .)
    RBRACKET        reduce using rule 114 (primary_expression -> IDENTIFIER .)
    COLON           reduce using rule 114 (primary_expression -> IDENTIFIER .)
    RBRACE          reduce using rule 114 (primary_expression -> IDENTIFIER .)
    LPAREN          shift and go to state 53
    LBRACKET        shift and go to state 54


state 77

    (115) primary_expression -> INT_LITERAL .

    MUL             reduce using rule 115 (primary_expression -> INT_LITERAL .)
    DIV             reduce using rule 115 (primary_expression -> INT_LITERAL .)
    MOD             reduce using rule 115 (primary_expression -> INT_LITERAL .)
    PLUS            reduce using rule 115 (primary_expression -> INT_LITERAL .)
    MINUS           reduce using rule 115 (primary_expression -> INT_LITERAL .)
    GT              reduce using rule 115 (primary_expression -> INT_LITERAL .)
    LT              reduce using rule 115 (primary_expression -> INT_LITERAL .)
    GEQ             reduce using rule 115 (primary_expression -> INT_LITERAL .)
    LEQ             reduce using rule 115 (primary_expression -> INT_LITERAL .)
    EQ              reduce using rule 115 (primary_expression -> INT_LITERAL .)
    NEQ             reduce using rule 115 (primary_expression -> INT_LITERAL .)
    AND             reduce using rule 115 (primary_expression -> INT_LITERAL .)
    OR              reduce using rule 115 (primary_expression -> INT_LITERAL .)
    SEMICOLON       reduce using rule 115 (primary_expression -> INT_LITERAL .)
    RPAREN          reduce using rule 115 (primary_expression -> INT_LITERAL .)
    COMMA           reduce using rule 115 (primary_expression -> INT_LITERAL .)
    RBRACKET        reduce using rule 115 (primary_expression -> INT_LITERAL .)
    COLON           reduce using rule 115 (primary_expression -> INT_LITERAL .)
    RBRACE          reduce using rule 115 (primary_expression -> INT_LITERAL .)


state 78

    (116) primary_expression -> FLOAT_LITERAL .

    MUL             reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    DIV             reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    MOD             reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    PLUS            reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    MINUS           reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    GT              reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    LT              reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    GEQ             reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    LEQ             reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    EQ              reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    NEQ             reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    AND             reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    OR              reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    SEMICOLON       reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    RPAREN          reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    COMMA           reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    RBRACKET        reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    COLON           reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)
    RBRACE          reduce using rule 116 (primary_expression -> FLOAT_LITERAL .)


state 79

    (117) primary_expression -> STRING_LITERAL .

    MUL             reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    DIV             reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    MOD             reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    PLUS            reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    MINUS           reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    GT              reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    LT              reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    GEQ             reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    LEQ             reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    EQ              reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    NEQ             reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    AND             reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    OR              reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    RPAREN          reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    COMMA           reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    RBRACKET        reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    COLON           reduce using rule 117 (primary_expression -> STRING_LITERAL .)
    RBRACE          reduce using rule 117 (primary_expression -> STRING_LITERAL .)


state 80

    (118) primary_expression -> CHAR_LITERAL .

    MUL             reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    DIV             reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    MOD             reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    PLUS            reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    MINUS           reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    GT              reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    LT              reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    GEQ             reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    LEQ             reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    EQ              reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    NEQ             reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    AND             reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    OR              reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    SEMICOLON       reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    RPAREN          reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    COMMA           reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    RBRACKET        reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    COLON           reduce using rule 118 (primary_expression -> CHAR_LITERAL .)
    RBRACE          reduce using rule 118 (primary_expression -> CHAR_LITERAL .)


state 81

    (119) primary_expression -> KEYWORD_TRUE .

    MUL             reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    DIV             reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    MOD             reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    PLUS            reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    MINUS           reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    GT              reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    LT              reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    GEQ             reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    LEQ             reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    EQ              reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    NEQ             reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    AND             reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    OR              reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    SEMICOLON       reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    RPAREN          reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    COMMA           reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    RBRACKET        reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    COLON           reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)
    RBRACE          reduce using rule 119 (primary_expression -> KEYWORD_TRUE .)


state 82

    (120) primary_expression -> KEYWORD_FALSE .

    MUL             reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    DIV             reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    MOD             reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    PLUS            reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    MINUS           reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    GT              reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    LT              reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    GEQ             reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    LEQ             reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    EQ              reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    NEQ             reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    AND             reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    OR              reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    SEMICOLON       reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    RPAREN          reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    COMMA           reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    RBRACKET        reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    COLON           reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)
    RBRACE          reduce using rule 120 (primary_expression -> KEYWORD_FALSE .)


state 83

    (121) primary_expression -> KEYWORD_NULL .

    MUL             reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    DIV             reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    MOD             reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    PLUS            reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    MINUS           reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    GT              reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    LT              reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    GEQ             reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    LEQ             reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    EQ              reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    NEQ             reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    AND             reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    OR              reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    SEMICOLON       reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    RPAREN          reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    COMMA           reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    RBRACKET        reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    COLON           reduce using rule 121 (primary_expression -> KEYWORD_NULL .)
    RBRACE          reduce using rule 121 (primary_expression -> KEYWORD_NULL .)


state 84

    (122) primary_expression -> LPAREN . expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 140
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 85

    (123) primary_expression -> function_call .

    MUL             reduce using rule 123 (primary_expression -> function_call .)
    DIV             reduce using rule 123 (primary_expression -> function_call .)
    MOD             reduce using rule 123 (primary_expression -> function_call .)
    PLUS            reduce using rule 123 (primary_expression -> function_call .)
    MINUS           reduce using rule 123 (primary_expression -> function_call .)
    GT              reduce using rule 123 (primary_expression -> function_call .)
    LT              reduce using rule 123 (primary_expression -> function_call .)
    GEQ             reduce using rule 123 (primary_expression -> function_call .)
    LEQ             reduce using rule 123 (primary_expression -> function_call .)
    EQ              reduce using rule 123 (primary_expression -> function_call .)
    NEQ             reduce using rule 123 (primary_expression -> function_call .)
    AND             reduce using rule 123 (primary_expression -> function_call .)
    OR              reduce using rule 123 (primary_expression -> function_call .)
    SEMICOLON       reduce using rule 123 (primary_expression -> function_call .)
    RPAREN          reduce using rule 123 (primary_expression -> function_call .)
    COMMA           reduce using rule 123 (primary_expression -> function_call .)
    RBRACKET        reduce using rule 123 (primary_expression -> function_call .)
    COLON           reduce using rule 123 (primary_expression -> function_call .)
    RBRACE          reduce using rule 123 (primary_expression -> function_call .)


state 86

    (124) primary_expression -> subscript_access .

    MUL             reduce using rule 124 (primary_expression -> subscript_access .)
    DIV             reduce using rule 124 (primary_expression -> subscript_access .)
    MOD             reduce using rule 124 (primary_expression -> subscript_access .)
    PLUS            reduce using rule 124 (primary_expression -> subscript_access .)
    MINUS           reduce using rule 124 (primary_expression -> subscript_access .)
    GT              reduce using rule 124 (primary_expression -> subscript_access .)
    LT              reduce using rule 124 (primary_expression -> subscript_access .)
    GEQ             reduce using rule 124 (primary_expression -> subscript_access .)
    LEQ             reduce using rule 124 (primary_expression -> subscript_access .)
    EQ              reduce using rule 124 (primary_expression -> subscript_access .)
    NEQ             reduce using rule 124 (primary_expression -> subscript_access .)
    AND             reduce using rule 124 (primary_expression -> subscript_access .)
    OR              reduce using rule 124 (primary_expression -> subscript_access .)
    SEMICOLON       reduce using rule 124 (primary_expression -> subscript_access .)
    RPAREN          reduce using rule 124 (primary_expression -> subscript_access .)
    COMMA           reduce using rule 124 (primary_expression -> subscript_access .)
    RBRACKET        reduce using rule 124 (primary_expression -> subscript_access .)
    COLON           reduce using rule 124 (primary_expression -> subscript_access .)
    RBRACE          reduce using rule 124 (primary_expression -> subscript_access .)


state 87

    (125) primary_expression -> dictionary_literal .

    MUL             reduce using rule 125 (primary_expression -> dictionary_literal .)
    DIV             reduce using rule 125 (primary_expression -> dictionary_literal .)
    MOD             reduce using rule 125 (primary_expression -> dictionary_literal .)
    PLUS            reduce using rule 125 (primary_expression -> dictionary_literal .)
    MINUS           reduce using rule 125 (primary_expression -> dictionary_literal .)
    GT              reduce using rule 125 (primary_expression -> dictionary_literal .)
    LT              reduce using rule 125 (primary_expression -> dictionary_literal .)
    GEQ             reduce using rule 125 (primary_expression -> dictionary_literal .)
    LEQ             reduce using rule 125 (primary_expression -> dictionary_literal .)
    EQ              reduce using rule 125 (primary_expression -> dictionary_literal .)
    NEQ             reduce using rule 125 (primary_expression -> dictionary_literal .)
    AND             reduce using rule 125 (primary_expression -> dictionary_literal .)
    OR              reduce using rule 125 (primary_expression -> dictionary_literal .)
    SEMICOLON       reduce using rule 125 (primary_expression -> dictionary_literal .)
    RPAREN          reduce using rule 125 (primary_expression -> dictionary_literal .)
    COMMA           reduce using rule 125 (primary_expression -> dictionary_literal .)
    RBRACKET        reduce using rule 125 (primary_expression -> dictionary_literal .)
    COLON           reduce using rule 125 (primary_expression -> dictionary_literal .)
    RBRACE          reduce using rule 125 (primary_expression -> dictionary_literal .)


state 88

    (126) dictionary_literal -> LBRACE . key_value_list_opt RBRACE
    (127) key_value_list_opt -> . key_value_list
    (128) key_value_list_opt -> . empty
    (129) key_value_list -> . key_value
    (130) key_value_list -> . key_value_list COMMA key_value
    (66) empty -> .
    (131) key_value -> . expression COLON expression
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RBRACE          reduce using rule 66 (empty -> .)
    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    key_value_list_opt             shift and go to state 141
    key_value_list                 shift and go to state 142
    empty                          shift and go to state 143
    key_value                      shift and go to state 144
    expression                     shift and go to state 145
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 89

    (69) function_call_statement -> function_call SEMICOLON .

    KEYWORD_IF      reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_DO      reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_FOR     reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    LBRACE          reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    IDENTIFIER      reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_INT     reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_VOID    reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_STRING  reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_FILE    reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_DICT    reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    $end            reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    RBRACE          reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_CASE    reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 69 (function_call_statement -> function_call SEMICOLON .)


state 90

    (49) array_type -> primitive_type LBRACKET . RBRACKET

    RBRACKET        shift and go to state 146


state 91

    (72) function_call -> SYSTEM_INPUT LPAREN . IDENTIFIER COMMA type_specifier RPAREN

    IDENTIFIER      shift and go to state 147


state 92

    (73) function_call -> SYSTEM_OUTPUT LPAREN . expression COMMA type_specifier RPAREN
    (74) function_call -> SYSTEM_OUTPUT LPAREN . expression COMMA type_specifier COMMA expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 148
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 93

    (75) function_call -> KEYWORD_EXIT LPAREN . RPAREN

    RPAREN          shift and go to state 149


state 94

    (76) function_call -> SYSTEM_ARR_PUSH LPAREN . expression COMMA expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 150
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 95

    (77) function_call -> SYSTEM_ARR_POP LPAREN . expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 151
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 96

    (78) function_call -> SYSTEM_ARR_SIZE LPAREN . expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 152
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 97

    (79) function_call -> SYSTEM_ARR_CONTAINS LPAREN . expression COMMA expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 153
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 98

    (80) function_call -> SYSTEM_ARR_INDEXOF LPAREN . expression COMMA expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 154
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 99

    (81) function_call -> SYSTEM_ARR_AVG LPAREN . expression RPAREN
    (82) function_call -> SYSTEM_ARR_AVG LPAREN . expression COMMA expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 155
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 100

    (29) declaration_statement -> type_specifier IDENTIFIER SEMICOLON .

    KEYWORD_IF      reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_DO      reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_FOR     reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    LBRACE          reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_INT     reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_VOID    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_STRING  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_FILE    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_DICT    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    $end            reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    RBRACE          reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    LBRACKET        reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    MINUS           reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    INT_LITERAL     reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    STRING_LITERAL  reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    CHAR_LITERAL    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_NULL    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    SEMICOLON       reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_CASE    reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 29 (declaration_statement -> type_specifier IDENTIFIER SEMICOLON .)


state 101

    (30) declaration_statement -> type_specifier IDENTIFIER ASSIGN . expression SEMICOLON
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 156
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 102

    (31) declaration_statement -> type_specifier IDENTIFIER LBRACKET . expression RBRACKET SEMICOLON
    (32) declaration_statement -> type_specifier IDENTIFIER LBRACKET . expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> type_specifier IDENTIFIER LBRACKET . RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier IDENTIFIER LBRACKET . RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> type_specifier IDENTIFIER LBRACKET . RBRACKET SEMICOLON
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RBRACKET        shift and go to state 158
    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 157
    initializer_list               shift and go to state 67
    logical_expression             shift and go to state 66
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 103

    (2) function_definition -> type_specifier IDENTIFIER LPAREN . params RPAREN block_statement
    (3) params -> . param_list
    (4) params -> . empty
    (5) param_list -> . param
    (6) param_list -> . param_list COMMA param
    (66) empty -> .
    (7) param -> . type_specifier IDENTIFIER
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET

    RPAREN          reduce using rule 66 (empty -> .)
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    type_specifier                 shift and go to state 159
    params                         shift and go to state 160
    param_list                     shift and go to state 161
    empty                          shift and go to state 162
    param                          shift and go to state 163
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29

state 104

    (70) function_call -> IDENTIFIER LPAREN argument_list . RPAREN
    (84) argument_list -> argument_list . COMMA expression

    RPAREN          shift and go to state 164
    COMMA           shift and go to state 165


state 105

    (71) function_call -> IDENTIFIER LPAREN RPAREN .

    SEMICOLON       reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MUL             reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    DIV             reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MOD             reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GT              reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LT              reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    GEQ             reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    LEQ             reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    EQ              reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    NEQ             reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    COLON           reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACE          reduce using rule 71 (function_call -> IDENTIFIER LPAREN RPAREN .)


state 106

    (83) argument_list -> expression .

    RPAREN          reduce using rule 83 (argument_list -> expression .)
    COMMA           reduce using rule 83 (argument_list -> expression .)


state 107

    (132) subscript_access -> IDENTIFIER LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 166


state 108

    (50) assignment_statement -> left_hand_side ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 167


state 109

    (54) if_statement -> KEYWORD_IF LPAREN expression . RPAREN statement
    (55) if_statement -> KEYWORD_IF LPAREN expression . RPAREN statement KEYWORD_ELSE statement

    RPAREN          shift and go to state 168


state 110

    (56) while_statement -> KEYWORD_WHILE LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 169


state 111

    (22) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 170


state 112

    (57) for_statement -> KEYWORD_FOR LPAREN for_init . expression_opt SEMICOLON expression_opt RPAREN statement
    (63) expression_opt -> . expression
    (64) expression_opt -> . assignment_statement_no_semi
    (65) expression_opt -> . empty
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (53) assignment_statement_no_semi -> . left_hand_side ASSIGN expression
    (66) empty -> .
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    SEMICOLON       reduce using rule 66 (empty -> .)
    LBRACKET        shift and go to state 69
    IDENTIFIER      shift and go to state 175
    MINUS           shift and go to state 73
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression_opt                 shift and go to state 171
    expression                     shift and go to state 172
    assignment_statement_no_semi   shift and go to state 173
    empty                          shift and go to state 174
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    left_hand_side                 shift and go to state 116
    equality_expression            shift and go to state 68
    subscript_access               shift and go to state 176
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    dictionary_literal             shift and go to state 87

state 113

    (60) for_init -> SEMICOLON .

    LBRACKET        reduce using rule 60 (for_init -> SEMICOLON .)
    IDENTIFIER      reduce using rule 60 (for_init -> SEMICOLON .)
    MINUS           reduce using rule 60 (for_init -> SEMICOLON .)
    INT_LITERAL     reduce using rule 60 (for_init -> SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 60 (for_init -> SEMICOLON .)
    STRING_LITERAL  reduce using rule 60 (for_init -> SEMICOLON .)
    CHAR_LITERAL    reduce using rule 60 (for_init -> SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 60 (for_init -> SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 60 (for_init -> SEMICOLON .)
    KEYWORD_NULL    reduce using rule 60 (for_init -> SEMICOLON .)
    LPAREN          reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 60 (for_init -> SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 60 (for_init -> SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 60 (for_init -> SEMICOLON .)
    LBRACE          reduce using rule 60 (for_init -> SEMICOLON .)
    SEMICOLON       reduce using rule 60 (for_init -> SEMICOLON .)


state 114

    (58) for_init -> assignment_statement_no_semi . SEMICOLON

    SEMICOLON       shift and go to state 177


state 115

    (59) for_init -> declaration_statement .

    LBRACKET        reduce using rule 59 (for_init -> declaration_statement .)
    IDENTIFIER      reduce using rule 59 (for_init -> declaration_statement .)
    MINUS           reduce using rule 59 (for_init -> declaration_statement .)
    INT_LITERAL     reduce using rule 59 (for_init -> declaration_statement .)
    FLOAT_LITERAL   reduce using rule 59 (for_init -> declaration_statement .)
    STRING_LITERAL  reduce using rule 59 (for_init -> declaration_statement .)
    CHAR_LITERAL    reduce using rule 59 (for_init -> declaration_statement .)
    KEYWORD_TRUE    reduce using rule 59 (for_init -> declaration_statement .)
    KEYWORD_FALSE   reduce using rule 59 (for_init -> declaration_statement .)
    KEYWORD_NULL    reduce using rule 59 (for_init -> declaration_statement .)
    LPAREN          reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_INPUT    reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_OUTPUT   reduce using rule 59 (for_init -> declaration_statement .)
    KEYWORD_EXIT    reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_ARR_PUSH reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_ARR_POP  reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_ARR_SIZE reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 59 (for_init -> declaration_statement .)
    SYSTEM_ARR_AVG  reduce using rule 59 (for_init -> declaration_statement .)
    LBRACE          reduce using rule 59 (for_init -> declaration_statement .)
    SEMICOLON       reduce using rule 59 (for_init -> declaration_statement .)


state 116

    (53) assignment_statement_no_semi -> left_hand_side . ASSIGN expression

    ASSIGN          shift and go to state 178


state 117

    (29) declaration_statement -> type_specifier . IDENTIFIER SEMICOLON
    (30) declaration_statement -> type_specifier . IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> type_specifier . IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> type_specifier . IDENTIFIER LBRACKET RBRACKET SEMICOLON

    IDENTIFIER      shift and go to state 179


state 118

    (51) left_hand_side -> IDENTIFIER .
    (132) subscript_access -> IDENTIFIER . LBRACKET expression RBRACKET

    ASSIGN          reduce using rule 51 (left_hand_side -> IDENTIFIER .)
    LBRACKET        shift and go to state 54


state 119

    (23) switch_statement -> KEYWORD_SWITCH LPAREN expression . RPAREN LBRACE case_list RBRACE

    RPAREN          shift and go to state 180


state 120

    (86) block_statement -> LBRACE statement_list RBRACE .

    KEYWORD_IF      reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_WHILE   reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_DO      reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_FOR     reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_SWITCH  reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_BREAK   reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_RETURN  reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_INPUT    reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_OUTPUT   reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_EXIT    reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_PUSH reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_POP  reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_SIZE reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_CONTAINS reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_INDEXOF reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    SYSTEM_ARR_AVG  reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_INT     reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_FLOAT   reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_CHAR    reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_VOID    reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_STRING  reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_BOOL    reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_FILE    reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_SOCKET  reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_DICT    reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_REGEX   reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_ARRAY   reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_ELSE    reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_CASE    reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)
    KEYWORD_DEFAULT reduce using rule 86 (block_statement -> LBRACE statement_list RBRACE .)


state 121

    (68) return_statement -> KEYWORD_RETURN expression SEMICOLON .

    KEYWORD_IF      reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_DO      reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_INT     reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_VOID    reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_STRING  reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_FILE    reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_DICT    reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    $end            reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_CASE    reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 68 (return_statement -> KEYWORD_RETURN expression SEMICOLON .)


state 122

    (95) logical_expression -> logical_expression AND . equality_expression
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    equality_expression            shift and go to state 181
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 123

    (96) logical_expression -> logical_expression OR . equality_expression
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    equality_expression            shift and go to state 182
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 124

    (98) equality_expression -> equality_expression EQ . relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    relational_expression          shift and go to state 183
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 125

    (99) equality_expression -> equality_expression NEQ . relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    relational_expression          shift and go to state 184
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 126

    (87) initializer_list -> LBRACKET expression_list_opt . RBRACKET

    RBRACKET        shift and go to state 185


state 127

    (88) expression_list_opt -> expression_list .
    (91) expression_list -> expression_list . COMMA expression

    RBRACKET        reduce using rule 88 (expression_list_opt -> expression_list .)
    COMMA           shift and go to state 186


state 128

    (89) expression_list_opt -> empty .

    RBRACKET        reduce using rule 89 (expression_list_opt -> empty .)


state 129

    (90) expression_list -> expression .

    COMMA           reduce using rule 90 (expression_list -> expression .)
    RBRACKET        reduce using rule 90 (expression_list -> expression .)


state 130

    (101) relational_expression -> relational_expression GT . additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    additive_expression            shift and go to state 187
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 131

    (102) relational_expression -> relational_expression LT . additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    additive_expression            shift and go to state 188
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 132

    (103) relational_expression -> relational_expression GEQ . additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    additive_expression            shift and go to state 189
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 133

    (104) relational_expression -> relational_expression LEQ . additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    additive_expression            shift and go to state 190
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 134

    (106) additive_expression -> additive_expression PLUS . multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    multiplicative_expression      shift and go to state 191
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 135

    (107) additive_expression -> additive_expression MINUS . multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    multiplicative_expression      shift and go to state 192
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 136

    (109) multiplicative_expression -> multiplicative_expression MUL . unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    unary_expression               shift and go to state 193
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 137

    (110) multiplicative_expression -> multiplicative_expression DIV . unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    unary_expression               shift and go to state 194
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 138

    (111) multiplicative_expression -> multiplicative_expression MOD . unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    unary_expression               shift and go to state 195
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 139

    (113) unary_expression -> MINUS unary_expression .

    MUL             reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    DIV             reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    MOD             reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    PLUS            reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    MINUS           reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    GT              reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    LT              reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    GEQ             reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    LEQ             reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    EQ              reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    NEQ             reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    AND             reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    OR              reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    SEMICOLON       reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    RPAREN          reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    COMMA           reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    RBRACKET        reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    COLON           reduce using rule 113 (unary_expression -> MINUS unary_expression .)
    RBRACE          reduce using rule 113 (unary_expression -> MINUS unary_expression .)


state 140

    (122) primary_expression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 196


state 141

    (126) dictionary_literal -> LBRACE key_value_list_opt . RBRACE

    RBRACE          shift and go to state 197


state 142

    (127) key_value_list_opt -> key_value_list .
    (130) key_value_list -> key_value_list . COMMA key_value

    RBRACE          reduce using rule 127 (key_value_list_opt -> key_value_list .)
    COMMA           shift and go to state 198


state 143

    (128) key_value_list_opt -> empty .

    RBRACE          reduce using rule 128 (key_value_list_opt -> empty .)


state 144

    (129) key_value_list -> key_value .

    COMMA           reduce using rule 129 (key_value_list -> key_value .)
    RBRACE          reduce using rule 129 (key_value_list -> key_value .)


state 145

    (131) key_value -> expression . COLON expression

    COLON           shift and go to state 199


state 146

    (49) array_type -> primitive_type LBRACKET RBRACKET .

    IDENTIFIER      reduce using rule 49 (array_type -> primitive_type LBRACKET RBRACKET .)
    RPAREN          reduce using rule 49 (array_type -> primitive_type LBRACKET RBRACKET .)
    COMMA           reduce using rule 49 (array_type -> primitive_type LBRACKET RBRACKET .)


state 147

    (72) function_call -> SYSTEM_INPUT LPAREN IDENTIFIER . COMMA type_specifier RPAREN

    COMMA           shift and go to state 200


state 148

    (73) function_call -> SYSTEM_OUTPUT LPAREN expression . COMMA type_specifier RPAREN
    (74) function_call -> SYSTEM_OUTPUT LPAREN expression . COMMA type_specifier COMMA expression RPAREN

    COMMA           shift and go to state 201


state 149

    (75) function_call -> KEYWORD_EXIT LPAREN RPAREN .

    SEMICOLON       reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    MUL             reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    DIV             reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    MOD             reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    PLUS            reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    MINUS           reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    GT              reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    LT              reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    GEQ             reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    LEQ             reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    EQ              reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    NEQ             reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    AND             reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    OR              reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    RPAREN          reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    COMMA           reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    RBRACKET        reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    COLON           reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)
    RBRACE          reduce using rule 75 (function_call -> KEYWORD_EXIT LPAREN RPAREN .)


state 150

    (76) function_call -> SYSTEM_ARR_PUSH LPAREN expression . COMMA expression RPAREN

    COMMA           shift and go to state 202


state 151

    (77) function_call -> SYSTEM_ARR_POP LPAREN expression . RPAREN

    RPAREN          shift and go to state 203


state 152

    (78) function_call -> SYSTEM_ARR_SIZE LPAREN expression . RPAREN

    RPAREN          shift and go to state 204


state 153

    (79) function_call -> SYSTEM_ARR_CONTAINS LPAREN expression . COMMA expression RPAREN

    COMMA           shift and go to state 205


state 154

    (80) function_call -> SYSTEM_ARR_INDEXOF LPAREN expression . COMMA expression RPAREN

    COMMA           shift and go to state 206


state 155

    (81) function_call -> SYSTEM_ARR_AVG LPAREN expression . RPAREN
    (82) function_call -> SYSTEM_ARR_AVG LPAREN expression . COMMA expression RPAREN

    RPAREN          shift and go to state 207
    COMMA           shift and go to state 208


state 156

    (30) declaration_statement -> type_specifier IDENTIFIER ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 209


state 157

    (31) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression . RBRACKET SEMICOLON
    (32) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression . RBRACKET ASSIGN initializer_list SEMICOLON

    RBRACKET        shift and go to state 210


state 158

    (33) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET . ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET . ASSIGN expression SEMICOLON
    (35) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET . SEMICOLON

    ASSIGN          shift and go to state 211
    SEMICOLON       shift and go to state 212


state 159

    (7) param -> type_specifier . IDENTIFIER

    IDENTIFIER      shift and go to state 213


state 160

    (2) function_definition -> type_specifier IDENTIFIER LPAREN params . RPAREN block_statement

    RPAREN          shift and go to state 214


state 161

    (3) params -> param_list .
    (6) param_list -> param_list . COMMA param

    RPAREN          reduce using rule 3 (params -> param_list .)
    COMMA           shift and go to state 215


state 162

    (4) params -> empty .

    RPAREN          reduce using rule 4 (params -> empty .)


state 163

    (5) param_list -> param .

    COMMA           reduce using rule 5 (param_list -> param .)
    RPAREN          reduce using rule 5 (param_list -> param .)


state 164

    (70) function_call -> IDENTIFIER LPAREN argument_list RPAREN .

    SEMICOLON       reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    MUL             reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    DIV             reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    MOD             reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    PLUS            reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    MINUS           reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    GT              reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    LT              reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    GEQ             reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    LEQ             reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    EQ              reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    NEQ             reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    AND             reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    OR              reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    RPAREN          reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    COMMA           reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    RBRACKET        reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    COLON           reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)
    RBRACE          reduce using rule 70 (function_call -> IDENTIFIER LPAREN argument_list RPAREN .)


state 165

    (84) argument_list -> argument_list COMMA . expression
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 216
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 166

    (132) subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .

    ASSIGN          reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    MUL             reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    DIV             reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    MOD             reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    GT              reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    LT              reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    GEQ             reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    LEQ             reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    EQ              reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    AND             reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    OR              reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    COLON           reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 132 (subscript_access -> IDENTIFIER LBRACKET expression RBRACKET .)


state 167

    (50) assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .

    KEYWORD_IF      reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_DO      reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_INT     reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_VOID    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_STRING  reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_FILE    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_DICT    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    $end            reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_CASE    reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 50 (assignment_statement -> left_hand_side ASSIGN expression SEMICOLON .)


state 168

    (54) if_statement -> KEYWORD_IF LPAREN expression RPAREN . statement
    (55) if_statement -> KEYWORD_IF LPAREN expression RPAREN . statement KEYWORD_ELSE statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    statement                      shift and go to state 217
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 169

    (56) while_statement -> KEYWORD_WHILE LPAREN expression RPAREN . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    statement                      shift and go to state 218
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 170

    (22) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN . expression RPAREN SEMICOLON
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 219
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 171

    (57) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt . SEMICOLON expression_opt RPAREN statement

    SEMICOLON       shift and go to state 220


state 172

    (63) expression_opt -> expression .

    SEMICOLON       reduce using rule 63 (expression_opt -> expression .)
    RPAREN          reduce using rule 63 (expression_opt -> expression .)


state 173

    (64) expression_opt -> assignment_statement_no_semi .

    SEMICOLON       reduce using rule 64 (expression_opt -> assignment_statement_no_semi .)
    RPAREN          reduce using rule 64 (expression_opt -> assignment_statement_no_semi .)


state 174

    (65) expression_opt -> empty .

    SEMICOLON       reduce using rule 65 (expression_opt -> empty .)
    RPAREN          reduce using rule 65 (expression_opt -> empty .)


state 175

    (51) left_hand_side -> IDENTIFIER .
    (132) subscript_access -> IDENTIFIER . LBRACKET expression RBRACKET
    (114) primary_expression -> IDENTIFIER .
    (70) function_call -> IDENTIFIER . LPAREN argument_list RPAREN
    (71) function_call -> IDENTIFIER . LPAREN RPAREN

    ASSIGN          reduce using rule 51 (left_hand_side -> IDENTIFIER .)
    LBRACKET        shift and go to state 54
    MUL             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    DIV             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    MOD             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    PLUS            reduce using rule 114 (primary_expression -> IDENTIFIER .)
    MINUS           reduce using rule 114 (primary_expression -> IDENTIFIER .)
    GT              reduce using rule 114 (primary_expression -> IDENTIFIER .)
    LT              reduce using rule 114 (primary_expression -> IDENTIFIER .)
    GEQ             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    LEQ             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    EQ              reduce using rule 114 (primary_expression -> IDENTIFIER .)
    NEQ             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    AND             reduce using rule 114 (primary_expression -> IDENTIFIER .)
    OR              reduce using rule 114 (primary_expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 114 (primary_expression -> IDENTIFIER .)
    RPAREN          reduce using rule 114 (primary_expression -> IDENTIFIER .)
    LPAREN          shift and go to state 53


state 176

    (52) left_hand_side -> subscript_access .
    (124) primary_expression -> subscript_access .

    ASSIGN          reduce using rule 52 (left_hand_side -> subscript_access .)
    MUL             reduce using rule 124 (primary_expression -> subscript_access .)
    DIV             reduce using rule 124 (primary_expression -> subscript_access .)
    MOD             reduce using rule 124 (primary_expression -> subscript_access .)
    PLUS            reduce using rule 124 (primary_expression -> subscript_access .)
    MINUS           reduce using rule 124 (primary_expression -> subscript_access .)
    GT              reduce using rule 124 (primary_expression -> subscript_access .)
    LT              reduce using rule 124 (primary_expression -> subscript_access .)
    GEQ             reduce using rule 124 (primary_expression -> subscript_access .)
    LEQ             reduce using rule 124 (primary_expression -> subscript_access .)
    EQ              reduce using rule 124 (primary_expression -> subscript_access .)
    NEQ             reduce using rule 124 (primary_expression -> subscript_access .)
    AND             reduce using rule 124 (primary_expression -> subscript_access .)
    OR              reduce using rule 124 (primary_expression -> subscript_access .)
    SEMICOLON       reduce using rule 124 (primary_expression -> subscript_access .)
    RPAREN          reduce using rule 124 (primary_expression -> subscript_access .)


state 177

    (58) for_init -> assignment_statement_no_semi SEMICOLON .

    LBRACKET        reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    IDENTIFIER      reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    MINUS           reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    INT_LITERAL     reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    STRING_LITERAL  reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    CHAR_LITERAL    reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    KEYWORD_NULL    reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    LPAREN          reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    LBRACE          reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)
    SEMICOLON       reduce using rule 58 (for_init -> assignment_statement_no_semi SEMICOLON .)


state 178

    (53) assignment_statement_no_semi -> left_hand_side ASSIGN . expression
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 221
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 179

    (29) declaration_statement -> type_specifier IDENTIFIER . SEMICOLON
    (30) declaration_statement -> type_specifier IDENTIFIER . ASSIGN expression SEMICOLON
    (31) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> type_specifier IDENTIFIER . LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> type_specifier IDENTIFIER . LBRACKET RBRACKET SEMICOLON

    SEMICOLON       shift and go to state 100
    ASSIGN          shift and go to state 101
    LBRACKET        shift and go to state 102


state 180

    (23) switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN . LBRACE case_list RBRACE

    LBRACE          shift and go to state 222


state 181

    (95) logical_expression -> logical_expression AND equality_expression .
    (98) equality_expression -> equality_expression . EQ relational_expression
    (99) equality_expression -> equality_expression . NEQ relational_expression

    AND             reduce using rule 95 (logical_expression -> logical_expression AND equality_expression .)
    OR              reduce using rule 95 (logical_expression -> logical_expression AND equality_expression .)
    SEMICOLON       reduce using rule 95 (logical_expression -> logical_expression AND equality_expression .)
    RPAREN          reduce using rule 95 (logical_expression -> logical_expression AND equality_expression .)
    COMMA           reduce using rule 95 (logical_expression -> logical_expression AND equality_expression .)
    RBRACKET        reduce using rule 95 (logical_expression -> logical_expression AND equality_expression .)
    COLON           reduce using rule 95 (logical_expression -> logical_expression AND equality_expression .)
    RBRACE          reduce using rule 95 (logical_expression -> logical_expression AND equality_expression .)
    EQ              shift and go to state 124
    NEQ             shift and go to state 125


state 182

    (96) logical_expression -> logical_expression OR equality_expression .
    (98) equality_expression -> equality_expression . EQ relational_expression
    (99) equality_expression -> equality_expression . NEQ relational_expression

    AND             reduce using rule 96 (logical_expression -> logical_expression OR equality_expression .)
    OR              reduce using rule 96 (logical_expression -> logical_expression OR equality_expression .)
    SEMICOLON       reduce using rule 96 (logical_expression -> logical_expression OR equality_expression .)
    RPAREN          reduce using rule 96 (logical_expression -> logical_expression OR equality_expression .)
    COMMA           reduce using rule 96 (logical_expression -> logical_expression OR equality_expression .)
    RBRACKET        reduce using rule 96 (logical_expression -> logical_expression OR equality_expression .)
    COLON           reduce using rule 96 (logical_expression -> logical_expression OR equality_expression .)
    RBRACE          reduce using rule 96 (logical_expression -> logical_expression OR equality_expression .)
    EQ              shift and go to state 124
    NEQ             shift and go to state 125


state 183

    (98) equality_expression -> equality_expression EQ relational_expression .
    (101) relational_expression -> relational_expression . GT additive_expression
    (102) relational_expression -> relational_expression . LT additive_expression
    (103) relational_expression -> relational_expression . GEQ additive_expression
    (104) relational_expression -> relational_expression . LEQ additive_expression

    EQ              reduce using rule 98 (equality_expression -> equality_expression EQ relational_expression .)
    NEQ             reduce using rule 98 (equality_expression -> equality_expression EQ relational_expression .)
    AND             reduce using rule 98 (equality_expression -> equality_expression EQ relational_expression .)
    OR              reduce using rule 98 (equality_expression -> equality_expression EQ relational_expression .)
    SEMICOLON       reduce using rule 98 (equality_expression -> equality_expression EQ relational_expression .)
    RPAREN          reduce using rule 98 (equality_expression -> equality_expression EQ relational_expression .)
    COMMA           reduce using rule 98 (equality_expression -> equality_expression EQ relational_expression .)
    RBRACKET        reduce using rule 98 (equality_expression -> equality_expression EQ relational_expression .)
    COLON           reduce using rule 98 (equality_expression -> equality_expression EQ relational_expression .)
    RBRACE          reduce using rule 98 (equality_expression -> equality_expression EQ relational_expression .)
    GT              shift and go to state 130
    LT              shift and go to state 131
    GEQ             shift and go to state 132
    LEQ             shift and go to state 133


state 184

    (99) equality_expression -> equality_expression NEQ relational_expression .
    (101) relational_expression -> relational_expression . GT additive_expression
    (102) relational_expression -> relational_expression . LT additive_expression
    (103) relational_expression -> relational_expression . GEQ additive_expression
    (104) relational_expression -> relational_expression . LEQ additive_expression

    EQ              reduce using rule 99 (equality_expression -> equality_expression NEQ relational_expression .)
    NEQ             reduce using rule 99 (equality_expression -> equality_expression NEQ relational_expression .)
    AND             reduce using rule 99 (equality_expression -> equality_expression NEQ relational_expression .)
    OR              reduce using rule 99 (equality_expression -> equality_expression NEQ relational_expression .)
    SEMICOLON       reduce using rule 99 (equality_expression -> equality_expression NEQ relational_expression .)
    RPAREN          reduce using rule 99 (equality_expression -> equality_expression NEQ relational_expression .)
    COMMA           reduce using rule 99 (equality_expression -> equality_expression NEQ relational_expression .)
    RBRACKET        reduce using rule 99 (equality_expression -> equality_expression NEQ relational_expression .)
    COLON           reduce using rule 99 (equality_expression -> equality_expression NEQ relational_expression .)
    RBRACE          reduce using rule 99 (equality_expression -> equality_expression NEQ relational_expression .)
    GT              shift and go to state 130
    LT              shift and go to state 131
    GEQ             shift and go to state 132
    LEQ             shift and go to state 133


state 185

    (87) initializer_list -> LBRACKET expression_list_opt RBRACKET .

    SEMICOLON       reduce using rule 87 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    RPAREN          reduce using rule 87 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    COMMA           reduce using rule 87 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    RBRACKET        reduce using rule 87 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    COLON           reduce using rule 87 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)
    RBRACE          reduce using rule 87 (initializer_list -> LBRACKET expression_list_opt RBRACKET .)


state 186

    (91) expression_list -> expression_list COMMA . expression
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 223
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 187

    (101) relational_expression -> relational_expression GT additive_expression .
    (106) additive_expression -> additive_expression . PLUS multiplicative_expression
    (107) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    LT              reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    GEQ             reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    LEQ             reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    EQ              reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    NEQ             reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    AND             reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    OR              reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    SEMICOLON       reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    RPAREN          reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    COMMA           reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    RBRACKET        reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    COLON           reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    RBRACE          reduce using rule 101 (relational_expression -> relational_expression GT additive_expression .)
    PLUS            shift and go to state 134
    MINUS           shift and go to state 135


state 188

    (102) relational_expression -> relational_expression LT additive_expression .
    (106) additive_expression -> additive_expression . PLUS multiplicative_expression
    (107) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    LT              reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    GEQ             reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    LEQ             reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    EQ              reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    NEQ             reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    AND             reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    OR              reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    SEMICOLON       reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    RPAREN          reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    COMMA           reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    RBRACKET        reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    COLON           reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    RBRACE          reduce using rule 102 (relational_expression -> relational_expression LT additive_expression .)
    PLUS            shift and go to state 134
    MINUS           shift and go to state 135


state 189

    (103) relational_expression -> relational_expression GEQ additive_expression .
    (106) additive_expression -> additive_expression . PLUS multiplicative_expression
    (107) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    LT              reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    GEQ             reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    LEQ             reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    EQ              reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    NEQ             reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    AND             reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    OR              reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    SEMICOLON       reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    RPAREN          reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    COMMA           reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    RBRACKET        reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    COLON           reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    RBRACE          reduce using rule 103 (relational_expression -> relational_expression GEQ additive_expression .)
    PLUS            shift and go to state 134
    MINUS           shift and go to state 135


state 190

    (104) relational_expression -> relational_expression LEQ additive_expression .
    (106) additive_expression -> additive_expression . PLUS multiplicative_expression
    (107) additive_expression -> additive_expression . MINUS multiplicative_expression

    GT              reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    LT              reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    GEQ             reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    LEQ             reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    EQ              reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    NEQ             reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    AND             reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    OR              reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    SEMICOLON       reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    RPAREN          reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    COMMA           reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    RBRACKET        reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    COLON           reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    RBRACE          reduce using rule 104 (relational_expression -> relational_expression LEQ additive_expression .)
    PLUS            shift and go to state 134
    MINUS           shift and go to state 135


state 191

    (106) additive_expression -> additive_expression PLUS multiplicative_expression .
    (109) multiplicative_expression -> multiplicative_expression . MUL unary_expression
    (110) multiplicative_expression -> multiplicative_expression . DIV unary_expression
    (111) multiplicative_expression -> multiplicative_expression . MOD unary_expression

    PLUS            reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    MINUS           reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GT              reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LT              reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    GEQ             reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    LEQ             reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    EQ              reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    NEQ             reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    AND             reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    OR              reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    SEMICOLON       reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RPAREN          reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COMMA           reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RBRACKET        reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    COLON           reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    RBRACE          reduce using rule 106 (additive_expression -> additive_expression PLUS multiplicative_expression .)
    MUL             shift and go to state 136
    DIV             shift and go to state 137
    MOD             shift and go to state 138


state 192

    (107) additive_expression -> additive_expression MINUS multiplicative_expression .
    (109) multiplicative_expression -> multiplicative_expression . MUL unary_expression
    (110) multiplicative_expression -> multiplicative_expression . DIV unary_expression
    (111) multiplicative_expression -> multiplicative_expression . MOD unary_expression

    PLUS            reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    MINUS           reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GT              reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LT              reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    GEQ             reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    LEQ             reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    EQ              reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    NEQ             reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    AND             reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    OR              reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    SEMICOLON       reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RPAREN          reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COMMA           reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RBRACKET        reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    COLON           reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    RBRACE          reduce using rule 107 (additive_expression -> additive_expression MINUS multiplicative_expression .)
    MUL             shift and go to state 136
    DIV             shift and go to state 137
    MOD             shift and go to state 138


state 193

    (109) multiplicative_expression -> multiplicative_expression MUL unary_expression .

    MUL             reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    DIV             reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    MOD             reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    PLUS            reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    MINUS           reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    GT              reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    LT              reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    GEQ             reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    LEQ             reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    EQ              reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    NEQ             reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    AND             reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    OR              reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    SEMICOLON       reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    RPAREN          reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    COMMA           reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    RBRACKET        reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    COLON           reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)
    RBRACE          reduce using rule 109 (multiplicative_expression -> multiplicative_expression MUL unary_expression .)


state 194

    (110) multiplicative_expression -> multiplicative_expression DIV unary_expression .

    MUL             reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    DIV             reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    MOD             reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    PLUS            reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    MINUS           reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    GT              reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    LT              reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    GEQ             reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    LEQ             reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    EQ              reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    NEQ             reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    AND             reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    OR              reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    SEMICOLON       reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    RPAREN          reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    COMMA           reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    RBRACKET        reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    COLON           reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)
    RBRACE          reduce using rule 110 (multiplicative_expression -> multiplicative_expression DIV unary_expression .)


state 195

    (111) multiplicative_expression -> multiplicative_expression MOD unary_expression .

    MUL             reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    DIV             reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    MOD             reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    PLUS            reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    MINUS           reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    GT              reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    LT              reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    GEQ             reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    LEQ             reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    EQ              reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    NEQ             reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    AND             reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    OR              reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    SEMICOLON       reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RPAREN          reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    COMMA           reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RBRACKET        reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    COLON           reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)
    RBRACE          reduce using rule 111 (multiplicative_expression -> multiplicative_expression MOD unary_expression .)


state 196

    (122) primary_expression -> LPAREN expression RPAREN .

    MUL             reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    DIV             reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    GEQ             reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    LEQ             reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 122 (primary_expression -> LPAREN expression RPAREN .)


state 197

    (126) dictionary_literal -> LBRACE key_value_list_opt RBRACE .

    MUL             reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    DIV             reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    MOD             reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    PLUS            reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    MINUS           reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    GT              reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    LT              reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    GEQ             reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    LEQ             reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    EQ              reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    NEQ             reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    AND             reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    OR              reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    SEMICOLON       reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    RPAREN          reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    COMMA           reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    RBRACKET        reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    COLON           reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)
    RBRACE          reduce using rule 126 (dictionary_literal -> LBRACE key_value_list_opt RBRACE .)


state 198

    (130) key_value_list -> key_value_list COMMA . key_value
    (131) key_value -> . expression COLON expression
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    key_value                      shift and go to state 224
    expression                     shift and go to state 145
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 199

    (131) key_value -> expression COLON . expression
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 225
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 200

    (72) function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA . type_specifier RPAREN
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET

    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    type_specifier                 shift and go to state 226
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29

state 201

    (73) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA . type_specifier RPAREN
    (74) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA . type_specifier COMMA expression RPAREN
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET

    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    type_specifier                 shift and go to state 227
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29

state 202

    (76) function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA . expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 228
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 203

    (77) function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    MUL             reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    DIV             reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    MOD             reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    PLUS            reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    MINUS           reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    GT              reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    LT              reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    GEQ             reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    LEQ             reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    EQ              reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    NEQ             reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    AND             reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    OR              reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    RPAREN          reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    COMMA           reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    COLON           reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)
    RBRACE          reduce using rule 77 (function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN .)


state 204

    (78) function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    MUL             reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    DIV             reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    MOD             reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    PLUS            reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    MINUS           reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    GT              reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    LT              reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    GEQ             reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    LEQ             reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    EQ              reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    NEQ             reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    AND             reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    OR              reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    RPAREN          reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    COMMA           reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    COLON           reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)
    RBRACE          reduce using rule 78 (function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN .)


state 205

    (79) function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA . expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 229
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 206

    (80) function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA . expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 230
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 207

    (81) function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    MUL             reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    DIV             reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    MOD             reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    PLUS            reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    MINUS           reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    GT              reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    LT              reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    GEQ             reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    LEQ             reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    EQ              reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    NEQ             reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    AND             reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    OR              reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    RPAREN          reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    COMMA           reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    COLON           reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)
    RBRACE          reduce using rule 81 (function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN .)


state 208

    (82) function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA . expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 231
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 209

    (30) declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .

    KEYWORD_IF      reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_DO      reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_INT     reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_VOID    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_STRING  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_FILE    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_DICT    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    LBRACKET        reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    INT_LITERAL     reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    CHAR_LITERAL    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_NULL    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    SEMICOLON       reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_CASE    reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 30 (declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON .)


state 210

    (31) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET . SEMICOLON
    (32) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET . ASSIGN initializer_list SEMICOLON

    SEMICOLON       shift and go to state 232
    ASSIGN          shift and go to state 233


state 211

    (33) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN . initializer_list SEMICOLON
    (34) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN . expression SEMICOLON
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    initializer_list               shift and go to state 234
    expression                     shift and go to state 235
    logical_expression             shift and go to state 66
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 212

    (35) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .

    KEYWORD_IF      reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_DO      reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_FOR     reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_INT     reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_VOID    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_STRING  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_FILE    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_DICT    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    $end            reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    MINUS           reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    INT_LITERAL     reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    STRING_LITERAL  reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    CHAR_LITERAL    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_NULL    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_CASE    reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 35 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON .)


state 213

    (7) param -> type_specifier IDENTIFIER .

    COMMA           reduce using rule 7 (param -> type_specifier IDENTIFIER .)
    RPAREN          reduce using rule 7 (param -> type_specifier IDENTIFIER .)


state 214

    (2) function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN . block_statement
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 24

    block_statement                shift and go to state 236

state 215

    (6) param_list -> param_list COMMA . param
    (7) param -> . type_specifier IDENTIFIER
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET

    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    param                          shift and go to state 237
    type_specifier                 shift and go to state 159
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29

state 216

    (84) argument_list -> argument_list COMMA expression .

    RPAREN          reduce using rule 84 (argument_list -> argument_list COMMA expression .)
    COMMA           reduce using rule 84 (argument_list -> argument_list COMMA expression .)


state 217

    (54) if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .
    (55) if_statement -> KEYWORD_IF LPAREN expression RPAREN statement . KEYWORD_ELSE statement

    KEYWORD_IF      reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_WHILE   reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_DO      reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_FOR     reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_SWITCH  reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_BREAK   reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_RETURN  reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_INPUT    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_OUTPUT   reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_EXIT    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_PUSH reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_POP  reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_SIZE reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    SYSTEM_ARR_AVG  reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_INT     reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_FLOAT   reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_CHAR    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_VOID    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_STRING  reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_BOOL    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_FILE    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_SOCKET  reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_DICT    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_REGEX   reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_ARRAY   reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_CASE    reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_DEFAULT reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .)
    KEYWORD_ELSE    shift and go to state 238

  ! KEYWORD_ELSE    [ reduce using rule 54 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement .) ]


state 218

    (56) while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .

    KEYWORD_IF      reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_WHILE   reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_DO      reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_FOR     reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_SWITCH  reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_BREAK   reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_RETURN  reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_INPUT    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_OUTPUT   reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_EXIT    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_PUSH reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_POP  reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_SIZE reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    SYSTEM_ARR_AVG  reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_INT     reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_FLOAT   reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_CHAR    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_VOID    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_STRING  reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_BOOL    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_FILE    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_SOCKET  reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_DICT    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_REGEX   reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_ARRAY   reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_ELSE    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_CASE    reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)
    KEYWORD_DEFAULT reduce using rule 56 (while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement .)


state 219

    (22) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 239


state 220

    (57) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON . expression_opt RPAREN statement
    (63) expression_opt -> . expression
    (64) expression_opt -> . assignment_statement_no_semi
    (65) expression_opt -> . empty
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (53) assignment_statement_no_semi -> . left_hand_side ASSIGN expression
    (66) empty -> .
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    RPAREN          reduce using rule 66 (empty -> .)
    LBRACKET        shift and go to state 69
    IDENTIFIER      shift and go to state 175
    MINUS           shift and go to state 73
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression_opt                 shift and go to state 240
    expression                     shift and go to state 172
    assignment_statement_no_semi   shift and go to state 173
    empty                          shift and go to state 174
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    left_hand_side                 shift and go to state 116
    equality_expression            shift and go to state 68
    subscript_access               shift and go to state 176
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    dictionary_literal             shift and go to state 87

state 221

    (53) assignment_statement_no_semi -> left_hand_side ASSIGN expression .

    SEMICOLON       reduce using rule 53 (assignment_statement_no_semi -> left_hand_side ASSIGN expression .)
    RPAREN          reduce using rule 53 (assignment_statement_no_semi -> left_hand_side ASSIGN expression .)


state 222

    (23) switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE . case_list RBRACE
    (24) case_list -> . case_clause
    (25) case_list -> . case_list case_clause
    (26) case_clause -> . KEYWORD_CASE expression COLON statement_list
    (27) case_clause -> . KEYWORD_DEFAULT COLON statement_list

    KEYWORD_CASE    shift and go to state 243
    KEYWORD_DEFAULT shift and go to state 244

    case_list                      shift and go to state 241
    case_clause                    shift and go to state 242

state 223

    (91) expression_list -> expression_list COMMA expression .

    COMMA           reduce using rule 91 (expression_list -> expression_list COMMA expression .)
    RBRACKET        reduce using rule 91 (expression_list -> expression_list COMMA expression .)


state 224

    (130) key_value_list -> key_value_list COMMA key_value .

    COMMA           reduce using rule 130 (key_value_list -> key_value_list COMMA key_value .)
    RBRACE          reduce using rule 130 (key_value_list -> key_value_list COMMA key_value .)


state 225

    (131) key_value -> expression COLON expression .

    COMMA           reduce using rule 131 (key_value -> expression COLON expression .)
    RBRACE          reduce using rule 131 (key_value -> expression COLON expression .)


state 226

    (72) function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier . RPAREN

    RPAREN          shift and go to state 245


state 227

    (73) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier . RPAREN
    (74) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier . COMMA expression RPAREN

    RPAREN          shift and go to state 247
    COMMA           shift and go to state 246


state 228

    (76) function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 248


state 229

    (79) function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 249


state 230

    (80) function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 250


state 231

    (82) function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression . RPAREN

    RPAREN          shift and go to state 251


state 232

    (31) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .

    KEYWORD_IF      reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_DO      reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_FOR     reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    LBRACE          reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    IDENTIFIER      reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_INT     reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_VOID    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_STRING  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_FILE    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_DICT    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    $end            reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    RBRACE          reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    LBRACKET        reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    MINUS           reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    INT_LITERAL     reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    STRING_LITERAL  reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    CHAR_LITERAL    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_NULL    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    LPAREN          reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    SEMICOLON       reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_CASE    reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 31 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON .)


state 233

    (32) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN . initializer_list SEMICOLON
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET

    LBRACKET        shift and go to state 69

    initializer_list               shift and go to state 252

state 234

    (33) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list . SEMICOLON
    (93) expression -> initializer_list .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 253

  ! SEMICOLON       [ reduce using rule 93 (expression -> initializer_list .) ]


state 235

    (34) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 254


state 236

    (2) function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .

    KEYWORD_IF      reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_WHILE   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_DO      reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_FOR     reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_SWITCH  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_BREAK   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_RETURN  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    LBRACE          reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    IDENTIFIER      reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_INPUT    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_OUTPUT   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_EXIT    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_PUSH reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_POP  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_SIZE reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    SYSTEM_ARR_AVG  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_INT     reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_FLOAT   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_CHAR    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_VOID    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_STRING  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_BOOL    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_FILE    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_SOCKET  reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_DICT    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_REGEX   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_ARRAY   reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    $end            reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    RBRACE          reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_ELSE    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_CASE    reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)
    KEYWORD_DEFAULT reduce using rule 2 (function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement .)


state 237

    (6) param_list -> param_list COMMA param .

    COMMA           reduce using rule 6 (param_list -> param_list COMMA param .)
    RPAREN          reduce using rule 6 (param_list -> param_list COMMA param .)


state 238

    (55) if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    statement                      shift and go to state 255
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 239

    (22) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 256


state 240

    (57) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt . RPAREN statement

    RPAREN          shift and go to state 257


state 241

    (23) switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list . RBRACE
    (25) case_list -> case_list . case_clause
    (26) case_clause -> . KEYWORD_CASE expression COLON statement_list
    (27) case_clause -> . KEYWORD_DEFAULT COLON statement_list

    RBRACE          shift and go to state 258
    KEYWORD_CASE    shift and go to state 243
    KEYWORD_DEFAULT shift and go to state 244

    case_clause                    shift and go to state 259

state 242

    (24) case_list -> case_clause .

    RBRACE          reduce using rule 24 (case_list -> case_clause .)
    KEYWORD_CASE    reduce using rule 24 (case_list -> case_clause .)
    KEYWORD_DEFAULT reduce using rule 24 (case_list -> case_clause .)


state 243

    (26) case_clause -> KEYWORD_CASE . expression COLON statement_list
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 260
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 244

    (27) case_clause -> KEYWORD_DEFAULT . COLON statement_list

    COLON           shift and go to state 261


state 245

    (72) function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .

    SEMICOLON       reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    MUL             reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    DIV             reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    MOD             reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    PLUS            reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    MINUS           reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    GT              reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    LT              reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    GEQ             reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    LEQ             reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    EQ              reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    NEQ             reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    AND             reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    OR              reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    RPAREN          reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    COMMA           reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    RBRACKET        reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    COLON           reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)
    RBRACE          reduce using rule 72 (function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN .)


state 246

    (74) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA . expression RPAREN
    (92) expression -> . logical_expression
    (93) expression -> . initializer_list
    (94) logical_expression -> . equality_expression
    (95) logical_expression -> . logical_expression AND equality_expression
    (96) logical_expression -> . logical_expression OR equality_expression
    (87) initializer_list -> . LBRACKET expression_list_opt RBRACKET
    (97) equality_expression -> . relational_expression
    (98) equality_expression -> . equality_expression EQ relational_expression
    (99) equality_expression -> . equality_expression NEQ relational_expression
    (100) relational_expression -> . additive_expression
    (101) relational_expression -> . relational_expression GT additive_expression
    (102) relational_expression -> . relational_expression LT additive_expression
    (103) relational_expression -> . relational_expression GEQ additive_expression
    (104) relational_expression -> . relational_expression LEQ additive_expression
    (105) additive_expression -> . multiplicative_expression
    (106) additive_expression -> . additive_expression PLUS multiplicative_expression
    (107) additive_expression -> . additive_expression MINUS multiplicative_expression
    (108) multiplicative_expression -> . unary_expression
    (109) multiplicative_expression -> . multiplicative_expression MUL unary_expression
    (110) multiplicative_expression -> . multiplicative_expression DIV unary_expression
    (111) multiplicative_expression -> . multiplicative_expression MOD unary_expression
    (112) unary_expression -> . primary_expression
    (113) unary_expression -> . MINUS unary_expression
    (114) primary_expression -> . IDENTIFIER
    (115) primary_expression -> . INT_LITERAL
    (116) primary_expression -> . FLOAT_LITERAL
    (117) primary_expression -> . STRING_LITERAL
    (118) primary_expression -> . CHAR_LITERAL
    (119) primary_expression -> . KEYWORD_TRUE
    (120) primary_expression -> . KEYWORD_FALSE
    (121) primary_expression -> . KEYWORD_NULL
    (122) primary_expression -> . LPAREN expression RPAREN
    (123) primary_expression -> . function_call
    (124) primary_expression -> . subscript_access
    (125) primary_expression -> . dictionary_literal
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET
    (126) dictionary_literal -> . LBRACE key_value_list_opt RBRACE

    LBRACKET        shift and go to state 69
    MINUS           shift and go to state 73
    IDENTIFIER      shift and go to state 76
    INT_LITERAL     shift and go to state 77
    FLOAT_LITERAL   shift and go to state 78
    STRING_LITERAL  shift and go to state 79
    CHAR_LITERAL    shift and go to state 80
    KEYWORD_TRUE    shift and go to state 81
    KEYWORD_FALSE   shift and go to state 82
    KEYWORD_NULL    shift and go to state 83
    LPAREN          shift and go to state 84
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    LBRACE          shift and go to state 88

    expression                     shift and go to state 262
    logical_expression             shift and go to state 66
    initializer_list               shift and go to state 67
    equality_expression            shift and go to state 68
    relational_expression          shift and go to state 70
    additive_expression            shift and go to state 71
    multiplicative_expression      shift and go to state 72
    unary_expression               shift and go to state 74
    primary_expression             shift and go to state 75
    function_call                  shift and go to state 85
    subscript_access               shift and go to state 86
    dictionary_literal             shift and go to state 87

state 247

    (73) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .

    SEMICOLON       reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    MUL             reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    DIV             reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    MOD             reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    PLUS            reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    MINUS           reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    GT              reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    LT              reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    GEQ             reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    LEQ             reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    EQ              reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    NEQ             reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    AND             reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    OR              reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    RPAREN          reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    COMMA           reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    RBRACKET        reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    COLON           reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)
    RBRACE          reduce using rule 73 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN .)


state 248

    (76) function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    MUL             reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    DIV             reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    MOD             reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    GT              reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    LT              reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    GEQ             reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    LEQ             reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    EQ              reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    NEQ             reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 76 (function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN .)


state 249

    (79) function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    MUL             reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    DIV             reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    MOD             reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    GT              reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    LT              reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    GEQ             reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    LEQ             reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    EQ              reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    NEQ             reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 79 (function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN .)


state 250

    (80) function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    MUL             reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    DIV             reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    MOD             reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    GT              reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    LT              reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    GEQ             reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    LEQ             reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    EQ              reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    NEQ             reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 80 (function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN .)


state 251

    (82) function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .

    SEMICOLON       reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    MUL             reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    DIV             reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    MOD             reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    PLUS            reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    MINUS           reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    GT              reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    LT              reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    GEQ             reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    LEQ             reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    EQ              reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    NEQ             reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    AND             reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    OR              reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    RPAREN          reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    COMMA           reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    RBRACKET        reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    COLON           reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)
    RBRACE          reduce using rule 82 (function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN .)


state 252

    (32) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list . SEMICOLON

    SEMICOLON       shift and go to state 263


state 253

    (33) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .

    KEYWORD_IF      reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DO      reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FOR     reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    LBRACE          reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    IDENTIFIER      reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_INT     reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_VOID    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_STRING  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FILE    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DICT    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    $end            reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    RBRACE          reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    LBRACKET        reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    MINUS           reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    INT_LITERAL     reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    STRING_LITERAL  reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    CHAR_LITERAL    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_NULL    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    LPAREN          reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    SEMICOLON       reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CASE    reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 33 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON .)


state 254

    (34) declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .

    KEYWORD_IF      reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_DO      reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_FOR     reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    LBRACE          reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_INT     reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_VOID    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_STRING  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_FILE    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_DICT    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    $end            reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    LBRACKET        reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    MINUS           reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    INT_LITERAL     reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    CHAR_LITERAL    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_NULL    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    LPAREN          reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    SEMICOLON       reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_CASE    reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 34 (declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON .)


state 255

    (55) if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .

    KEYWORD_IF      reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_WHILE   reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_DO      reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_FOR     reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_SWITCH  reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_BREAK   reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_RETURN  reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    LBRACE          reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    IDENTIFIER      reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_INPUT    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_OUTPUT   reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_EXIT    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_PUSH reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_POP  reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_SIZE reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    SYSTEM_ARR_AVG  reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_INT     reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_FLOAT   reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_CHAR    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_VOID    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_STRING  reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_BOOL    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_FILE    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_SOCKET  reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_DICT    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_REGEX   reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_ARRAY   reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    $end            reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    RBRACE          reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_ELSE    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_CASE    reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)
    KEYWORD_DEFAULT reduce using rule 55 (if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement .)


state 256

    (22) do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .

    KEYWORD_IF      reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_DO      reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_FOR     reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_INT     reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_VOID    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_STRING  reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_FILE    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_DICT    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_CASE    reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 22 (do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON .)


state 257

    (57) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    statement                      shift and go to state 264
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 258

    (23) switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .

    KEYWORD_IF      reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_WHILE   reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_DO      reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_FOR     reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_SWITCH  reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_BREAK   reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_RETURN  reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    LBRACE          reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    IDENTIFIER      reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_INPUT    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_OUTPUT   reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_EXIT    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_PUSH reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_POP  reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_SIZE reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_CONTAINS reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_INDEXOF reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    SYSTEM_ARR_AVG  reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_INT     reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_FLOAT   reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_CHAR    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_VOID    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_STRING  reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_BOOL    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_FILE    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_SOCKET  reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_DICT    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_REGEX   reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_ARRAY   reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    $end            reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    RBRACE          reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_ELSE    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_CASE    reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)
    KEYWORD_DEFAULT reduce using rule 23 (switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE .)


state 259

    (25) case_list -> case_list case_clause .

    RBRACE          reduce using rule 25 (case_list -> case_list case_clause .)
    KEYWORD_CASE    reduce using rule 25 (case_list -> case_list case_clause .)
    KEYWORD_DEFAULT reduce using rule 25 (case_list -> case_list case_clause .)


state 260

    (26) case_clause -> KEYWORD_CASE expression . COLON statement_list

    COLON           shift and go to state 265


state 261

    (27) case_clause -> KEYWORD_DEFAULT COLON . statement_list
    (8) statement_list -> . statement
    (9) statement_list -> . statement_list statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    statement_list                 shift and go to state 266
    statement                      shift and go to state 3
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 262

    (74) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression . RPAREN

    RPAREN          shift and go to state 267


state 263

    (32) declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .

    KEYWORD_IF      reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_WHILE   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DO      reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FOR     reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SWITCH  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BREAK   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_RETURN  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    LBRACE          reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    IDENTIFIER      reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_INPUT    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_OUTPUT   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_EXIT    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_PUSH reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_POP  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_SIZE reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_CONTAINS reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_INDEXOF reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SYSTEM_ARR_AVG  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_INT     reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FLOAT   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CHAR    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_VOID    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_STRING  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_BOOL    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FILE    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_SOCKET  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DICT    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_REGEX   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ARRAY   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    $end            reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    RBRACE          reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    LBRACKET        reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    MINUS           reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    INT_LITERAL     reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    FLOAT_LITERAL   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    STRING_LITERAL  reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    CHAR_LITERAL    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_TRUE    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_FALSE   reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_NULL    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    LPAREN          reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    SEMICOLON       reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_ELSE    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_CASE    reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)
    KEYWORD_DEFAULT reduce using rule 32 (declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON .)


state 264

    (57) for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .

    KEYWORD_IF      reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_WHILE   reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_DO      reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_FOR     reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_SWITCH  reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_BREAK   reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_RETURN  reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    LBRACE          reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    IDENTIFIER      reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_INPUT    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_OUTPUT   reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_EXIT    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_PUSH reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_POP  reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_SIZE reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_CONTAINS reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_INDEXOF reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    SYSTEM_ARR_AVG  reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_INT     reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_FLOAT   reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_CHAR    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_VOID    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_STRING  reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_BOOL    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_FILE    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_SOCKET  reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_DICT    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_REGEX   reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_ARRAY   reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    $end            reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    RBRACE          reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_ELSE    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_CASE    reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)
    KEYWORD_DEFAULT reduce using rule 57 (for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement .)


state 265

    (26) case_clause -> KEYWORD_CASE expression COLON . statement_list
    (8) statement_list -> . statement
    (9) statement_list -> . statement_list statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    statement_list                 shift and go to state 268
    statement                      shift and go to state 3
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 266

    (27) case_clause -> KEYWORD_DEFAULT COLON statement_list .
    (9) statement_list -> statement_list . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    RBRACE          reduce using rule 27 (case_clause -> KEYWORD_DEFAULT COLON statement_list .)
    KEYWORD_CASE    reduce using rule 27 (case_clause -> KEYWORD_DEFAULT COLON statement_list .)
    KEYWORD_DEFAULT reduce using rule 27 (case_clause -> KEYWORD_DEFAULT COLON statement_list .)
    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    statement                      shift and go to state 51
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30

state 267

    (74) function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .

    SEMICOLON       reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    MUL             reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    DIV             reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    MOD             reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    PLUS            reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    MINUS           reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    GT              reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    LT              reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    GEQ             reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    LEQ             reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    EQ              reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    NEQ             reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    AND             reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    OR              reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    RPAREN          reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    COMMA           reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    RBRACKET        reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    COLON           reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)
    RBRACE          reduce using rule 74 (function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN .)


state 268

    (26) case_clause -> KEYWORD_CASE expression COLON statement_list .
    (9) statement_list -> statement_list . statement
    (10) statement -> . declaration_statement
    (11) statement -> . assignment_statement
    (12) statement -> . if_statement
    (13) statement -> . while_statement
    (14) statement -> . do_while_statement
    (15) statement -> . for_statement
    (16) statement -> . switch_statement
    (17) statement -> . break_statement
    (18) statement -> . return_statement
    (19) statement -> . function_call_statement
    (20) statement -> . block_statement
    (21) statement -> . function_definition
    (29) declaration_statement -> . type_specifier IDENTIFIER SEMICOLON
    (30) declaration_statement -> . type_specifier IDENTIFIER ASSIGN expression SEMICOLON
    (31) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON
    (32) declaration_statement -> . type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON
    (33) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON
    (34) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN expression SEMICOLON
    (35) declaration_statement -> . type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON
    (50) assignment_statement -> . left_hand_side ASSIGN expression SEMICOLON
    (54) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement
    (55) if_statement -> . KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement
    (56) while_statement -> . KEYWORD_WHILE LPAREN expression RPAREN statement
    (22) do_while_statement -> . KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON
    (57) for_statement -> . KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement
    (23) switch_statement -> . KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE
    (28) break_statement -> . KEYWORD_BREAK SEMICOLON
    (67) return_statement -> . KEYWORD_RETURN SEMICOLON
    (68) return_statement -> . KEYWORD_RETURN expression SEMICOLON
    (69) function_call_statement -> . function_call SEMICOLON
    (85) block_statement -> . LBRACE RBRACE
    (86) block_statement -> . LBRACE statement_list RBRACE
    (2) function_definition -> . type_specifier IDENTIFIER LPAREN params RPAREN block_statement
    (36) type_specifier -> . primitive_type
    (37) type_specifier -> . array_type
    (51) left_hand_side -> . IDENTIFIER
    (52) left_hand_side -> . subscript_access
    (70) function_call -> . IDENTIFIER LPAREN argument_list RPAREN
    (71) function_call -> . IDENTIFIER LPAREN RPAREN
    (72) function_call -> . SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN
    (73) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN
    (74) function_call -> . SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN
    (75) function_call -> . KEYWORD_EXIT LPAREN RPAREN
    (76) function_call -> . SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN
    (77) function_call -> . SYSTEM_ARR_POP LPAREN expression RPAREN
    (78) function_call -> . SYSTEM_ARR_SIZE LPAREN expression RPAREN
    (79) function_call -> . SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN
    (80) function_call -> . SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN
    (81) function_call -> . SYSTEM_ARR_AVG LPAREN expression RPAREN
    (82) function_call -> . SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN
    (38) primitive_type -> . KEYWORD_INT
    (39) primitive_type -> . KEYWORD_FLOAT
    (40) primitive_type -> . KEYWORD_CHAR
    (41) primitive_type -> . KEYWORD_VOID
    (42) primitive_type -> . KEYWORD_STRING
    (43) primitive_type -> . KEYWORD_BOOL
    (44) primitive_type -> . KEYWORD_FILE
    (45) primitive_type -> . KEYWORD_SOCKET
    (46) primitive_type -> . KEYWORD_DICT
    (47) primitive_type -> . KEYWORD_REGEX
    (48) primitive_type -> . KEYWORD_ARRAY
    (49) array_type -> . primitive_type LBRACKET RBRACKET
    (132) subscript_access -> . IDENTIFIER LBRACKET expression RBRACKET

    RBRACE          reduce using rule 26 (case_clause -> KEYWORD_CASE expression COLON statement_list .)
    KEYWORD_CASE    reduce using rule 26 (case_clause -> KEYWORD_CASE expression COLON statement_list .)
    KEYWORD_DEFAULT reduce using rule 26 (case_clause -> KEYWORD_CASE expression COLON statement_list .)
    KEYWORD_IF      shift and go to state 19
    KEYWORD_WHILE   shift and go to state 20
    KEYWORD_DO      shift and go to state 21
    KEYWORD_FOR     shift and go to state 22
    KEYWORD_SWITCH  shift and go to state 23
    KEYWORD_BREAK   shift and go to state 25
    KEYWORD_RETURN  shift and go to state 26
    LBRACE          shift and go to state 24
    IDENTIFIER      shift and go to state 17
    SYSTEM_INPUT    shift and go to state 31
    SYSTEM_OUTPUT   shift and go to state 32
    KEYWORD_EXIT    shift and go to state 33
    SYSTEM_ARR_PUSH shift and go to state 34
    SYSTEM_ARR_POP  shift and go to state 35
    SYSTEM_ARR_SIZE shift and go to state 36
    SYSTEM_ARR_CONTAINS shift and go to state 37
    SYSTEM_ARR_INDEXOF shift and go to state 38
    SYSTEM_ARR_AVG  shift and go to state 39
    KEYWORD_INT     shift and go to state 40
    KEYWORD_FLOAT   shift and go to state 41
    KEYWORD_CHAR    shift and go to state 42
    KEYWORD_VOID    shift and go to state 43
    KEYWORD_STRING  shift and go to state 44
    KEYWORD_BOOL    shift and go to state 45
    KEYWORD_FILE    shift and go to state 46
    KEYWORD_SOCKET  shift and go to state 47
    KEYWORD_DICT    shift and go to state 48
    KEYWORD_REGEX   shift and go to state 49
    KEYWORD_ARRAY   shift and go to state 50

    statement                      shift and go to state 51
    declaration_statement          shift and go to state 4
    assignment_statement           shift and go to state 5
    if_statement                   shift and go to state 6
    while_statement                shift and go to state 7
    do_while_statement             shift and go to state 8
    for_statement                  shift and go to state 9
    switch_statement               shift and go to state 10
    break_statement                shift and go to state 11
    return_statement               shift and go to state 12
    function_call_statement        shift and go to state 13
    block_statement                shift and go to state 14
    function_definition            shift and go to state 15
    type_specifier                 shift and go to state 16
    left_hand_side                 shift and go to state 18
    function_call                  shift and go to state 27
    primitive_type                 shift and go to state 28
    array_type                     shift and go to state 29
    subscript_access               shift and go to state 30
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 234 resolved as shift
