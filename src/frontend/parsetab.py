
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQNEQleftGTLTGEQLEQleftPLUSMINUSleftMULDIVMODrightUMINUSnonassocLOWER_THAN_ELSEnonassocKEYWORD_ELSEAND ASSIGN CHAR_LITERAL COLON COMMA COMMENT DIV DOT EQ FLOAT_LITERAL GEQ GT IDENTIFIER INT_LITERAL KEYWORD_ARRAY KEYWORD_BOOL KEYWORD_BREAK KEYWORD_CASE KEYWORD_CHAR KEYWORD_CONTINUE KEYWORD_DEFAULT KEYWORD_DICT KEYWORD_DO KEYWORD_ELSE KEYWORD_EXIT KEYWORD_FALSE KEYWORD_FILE KEYWORD_FLOAT KEYWORD_FOR KEYWORD_IF KEYWORD_INT KEYWORD_NULL KEYWORD_RETURN KEYWORD_SOCKET KEYWORD_STRING KEYWORD_SWITCH KEYWORD_TRUE KEYWORD_VOID KEYWORD_WHILE LBRACE LBRACKET LEQ LPAREN LT MINUS MOD MUL NEQ OR PLUS RBRACE RBRACKET RPAREN SEMICOLON STRING_LITERAL SYSTEM_ARR_AVG SYSTEM_ARR_CONTAINS SYSTEM_ARR_INDEXOF SYSTEM_ARR_POP SYSTEM_ARR_PUSH SYSTEM_ARR_SIZE SYSTEM_EXIT SYSTEM_INPUT SYSTEM_OUTPUTprogram : statement_listfunction_definition : type_specifier IDENTIFIER LPAREN params RPAREN block_statementparams : param_list\n                  | emptyparam_list : param\n                      | param_list COMMA paramparam : type_specifier IDENTIFIERstatement_list : statement\n                         | statement_list statementstatement : declaration_statement\n                    | assignment_statement\n                    | if_statement\n                    | while_statement\n                    | do_while_statement\n                    | for_statement\n                    | switch_statement\n                    | break_statement\n                    | return_statement\n                    | function_call_statement\n                    | array_function_call_statement\n                    | block_statement\n                    | function_definitiondo_while_statement : KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLONswitch_statement : KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACEcase_list : case_clause\n                     | case_list case_clausecase_clause : KEYWORD_CASE expression COLON statement_list\n                       | KEYWORD_DEFAULT COLON statement_listbreak_statement : KEYWORD_BREAK SEMICOLONdeclaration_statement : type_specifier IDENTIFIER SEMICOLON\n                                | type_specifier IDENTIFIER ASSIGN expression SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON\n                                | type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLONarray_assignment_rhs : expression\n                               | initializer_listtype_specifier : primitive_type\n                         | array_typeprimitive_type : KEYWORD_INT\n                          | KEYWORD_FLOAT\n                          | KEYWORD_CHAR\n                          | KEYWORD_VOID\n                          | KEYWORD_STRING\n                          | KEYWORD_BOOL\n                          | KEYWORD_FILE\n                          | KEYWORD_SOCKET\n                          | KEYWORD_DICT\n                          | KEYWORD_ARRAYarray_type : primitive_type LBRACKET RBRACKETassignment_statement : left_hand_side ASSIGN expression SEMICOLONleft_hand_side : IDENTIFIER\n                         | subscript_accessassignment_statement_no_semi : left_hand_side ASSIGN expressionif_statement : KEYWORD_IF LPAREN expression RPAREN statement %prec LOWER_THAN_ELSE\n                        | KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statementwhile_statement : KEYWORD_WHILE LPAREN expression RPAREN statementfor_statement : KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statementfor_init : assignment_statement_no_semi SEMICOLON\n                    | declaration_statement\n                    | SEMICOLONexpression_statement : expression SEMICOLON\n                               | SEMICOLONexpression_opt : expression\n                         | assignment_statement_no_semi\n                         | emptyempty :return_statement : KEYWORD_RETURN SEMICOLON\n                           | KEYWORD_RETURN expression SEMICOLONfunction_call_statement : function_call SEMICOLONarray_function_call_statement : array_function_call SEMICOLONarray_function_call : SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN\n                               | SYSTEM_ARR_POP LPAREN expression RPAREN\n                               | SYSTEM_ARR_SIZE LPAREN expression RPAREN\n                               | SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN\n                               | SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN\n                               | SYSTEM_ARR_AVG LPAREN expression RPAREN\n                               | SYSTEM_ARR_AVG LPAREN expression COMMA expression RPARENfunction_call : IDENTIFIER LPAREN argument_list RPAREN\n                        | IDENTIFIER LPAREN RPAREN\n                        | SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN\n                        | SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN\n                        | SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN\n                        | KEYWORD_EXIT LPAREN RPARENargument_list : expression\n                        | argument_list COMMA expressionblock_statement : LBRACE RBRACE\n                          | LBRACE statement_list RBRACEinitializer_list : LBRACKET expression_list_opt RBRACKETexpression_list_opt : expression_list\n                               | emptyexpression_list : expression\n                           | expression_list COMMA expressionexpression : logical_expressionlogical_expression : equality_expression\n                             | logical_expression AND equality_expression\n                             | logical_expression OR equality_expressionequality_expression : relational_expression\n                               | equality_expression EQ relational_expression\n                               | equality_expression NEQ relational_expressionrelational_expression : additive_expression\n                                | relational_expression GT additive_expression\n                                | relational_expression LT additive_expression\n                                | relational_expression GEQ additive_expression\n                                | relational_expression LEQ additive_expressionadditive_expression : multiplicative_expression\n                              | additive_expression PLUS multiplicative_expression\n                              | additive_expression MINUS multiplicative_expressionmultiplicative_expression : unary_expression\n                                    | multiplicative_expression MUL unary_expression\n                                    | multiplicative_expression DIV unary_expression\n                                    | multiplicative_expression MOD unary_expressionunary_expression : primary_expression\n                           | MINUS unary_expression %prec UMINUSprimary_expression : IDENTIFIER\n                             | INT_LITERAL\n                             | FLOAT_LITERAL\n                             | STRING_LITERAL\n                             | CHAR_LITERAL\n                             | KEYWORD_TRUE\n                             | KEYWORD_FALSE\n                             | KEYWORD_NULL\n                             | LPAREN expression RPAREN\n                             | function_call\n                             | array_function_call\n                             | subscript_access\n                             | dictionary_literaldictionary_literal : LBRACE key_value_list_opt RBRACEkey_value_list_opt : key_value_list\n                              | emptykey_value_list : key_value\n                          | key_value_list COMMA key_valuekey_value : expression COLON expressionsubscript_access : IDENTIFIER LBRACKET expression RBRACKET'

_lr_action_items = {'KEYWORD_IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,62,63,64,65,89,90,101,121,122,164,165,166,204,207,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[20,20,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,20,20,-9,-87,20,-29,-68,-70,-71,-30,-88,-69,-51,20,20,-31,-35,-55,-57,-32,-2,20,-33,-56,-23,20,-24,20,-34,-58,20,20,20,]),'KEYWORD_WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,59,62,63,64,65,89,90,101,121,122,164,165,166,204,207,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[21,21,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,21,21,-9,112,-87,21,-29,-68,-70,-71,-30,-88,-69,-51,21,21,-31,-35,-55,-57,-32,-2,21,-33,-56,-23,21,-24,21,-34,-58,21,21,21,]),'KEYWORD_DO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,62,63,64,65,89,90,101,121,122,164,165,166,204,207,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[22,22,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,22,22,-9,-87,22,-29,-68,-70,-71,-30,-88,-69,-51,22,22,-31,-35,-55,-57,-32,-2,22,-33,-56,-23,22,-24,22,-34,-58,22,22,22,]),'KEYWORD_FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,62,63,64,65,89,90,101,121,122,164,165,166,204,207,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[23,23,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,23,23,-9,-87,23,-29,-68,-70,-71,-30,-88,-69,-51,23,23,-31,-35,-55,-57,-32,-2,23,-33,-56,-23,23,-24,23,-34,-58,23,23,23,]),'KEYWORD_SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,62,63,64,65,89,90,101,121,122,164,165,166,204,207,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[24,24,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,24,24,-9,-87,24,-29,-68,-70,-71,-30,-88,-69,-51,24,24,-31,-35,-55,-57,-32,-2,24,-33,-56,-23,24,-24,24,-34,-58,24,24,24,]),'KEYWORD_BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,62,63,64,65,89,90,101,121,122,164,165,166,204,207,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[26,26,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,26,26,-9,-87,26,-29,-68,-70,-71,-30,-88,-69,-51,26,26,-31,-35,-55,-57,-32,-2,26,-33,-56,-23,26,-24,26,-34,-58,26,26,26,]),'KEYWORD_RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,62,63,64,65,89,90,101,121,122,164,165,166,204,207,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[27,27,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,27,27,-9,-87,27,-29,-68,-70,-71,-30,-88,-69,-51,27,27,-31,-35,-55,-57,-32,-2,27,-33,-56,-23,27,-24,27,-34,-58,27,27,27,]),'LBRACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,27,52,54,55,56,57,58,61,62,63,64,65,72,83,88,89,90,93,95,96,97,98,99,100,101,102,103,113,114,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,162,164,165,166,167,174,175,177,193,194,197,200,201,203,204,207,209,212,213,215,226,228,230,232,237,240,251,252,253,254,255,258,260,262,263,264,265,268,],[25,25,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,25,25,88,-9,88,88,88,88,88,88,-87,25,-29,-68,88,88,88,-70,-71,88,88,88,88,88,88,88,-30,88,88,88,-61,-60,-88,-69,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-51,25,25,88,-59,88,217,88,88,88,88,88,88,-31,-35,25,-55,-57,88,-32,88,-2,25,88,88,-33,-56,-23,25,-24,25,-34,88,-58,25,25,25,]),'IDENTIFIER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,22,25,27,30,31,42,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,60,61,62,63,64,65,72,83,88,89,90,92,93,95,96,97,98,99,100,101,102,103,113,114,116,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,143,156,162,164,165,166,167,174,175,193,194,197,200,201,203,204,207,212,213,215,226,228,230,232,237,240,251,252,253,254,255,258,260,262,263,264,265,268,],[18,18,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,53,18,18,75,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-9,75,75,75,75,75,119,75,-87,18,-29,-68,75,75,75,-70,-71,144,75,75,75,75,75,75,75,-30,75,75,172,-61,-60,176,-88,-69,75,75,75,75,75,75,75,75,75,75,75,75,75,-50,208,75,-51,18,18,75,-59,75,75,75,75,75,75,75,-31,-35,-55,-57,172,-32,75,-2,18,75,75,-33,-56,-23,18,-24,18,-34,75,-58,18,18,18,]),'SYSTEM_INPUT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,27,52,54,55,56,57,58,61,62,63,64,65,72,83,88,89,90,93,95,96,97,98,99,100,101,102,103,113,114,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,162,164,165,166,167,174,175,193,194,197,200,201,203,204,207,212,213,215,226,228,230,232,237,240,251,252,253,254,255,258,260,262,263,264,265,268,],[33,33,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,33,33,33,-9,33,33,33,33,33,33,-87,33,-29,-68,33,33,33,-70,-71,33,33,33,33,33,33,33,-30,33,33,33,-61,-60,-88,-69,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-51,33,33,33,-59,33,33,33,33,33,33,33,-31,-35,-55,-57,33,-32,33,-2,33,33,33,-33,-56,-23,33,-24,33,-34,33,-58,33,33,33,]),'SYSTEM_OUTPUT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,27,52,54,55,56,57,58,61,62,63,64,65,72,83,88,89,90,93,95,96,97,98,99,100,101,102,103,113,114,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,162,164,165,166,167,174,175,193,194,197,200,201,203,204,207,212,213,215,226,228,230,232,237,240,251,252,253,254,255,258,260,262,263,264,265,268,],[34,34,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,34,34,34,-9,34,34,34,34,34,34,-87,34,-29,-68,34,34,34,-70,-71,34,34,34,34,34,34,34,-30,34,34,34,-61,-60,-88,-69,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-51,34,34,34,-59,34,34,34,34,34,34,34,-31,-35,-55,-57,34,-32,34,-2,34,34,34,-33,-56,-23,34,-24,34,-34,34,-58,34,34,34,]),'KEYWORD_EXIT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,27,52,54,55,56,57,58,61,62,63,64,65,72,83,88,89,90,93,95,96,97,98,99,100,101,102,103,113,114,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,162,164,165,166,167,174,175,193,194,197,200,201,203,204,207,212,213,215,226,228,230,232,237,240,251,252,253,254,255,258,260,262,263,264,265,268,],[35,35,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,35,35,35,-9,35,35,35,35,35,35,-87,35,-29,-68,35,35,35,-70,-71,35,35,35,35,35,35,35,-30,35,35,35,-61,-60,-88,-69,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-51,35,35,35,-59,35,35,35,35,35,35,35,-31,-35,-55,-57,35,-32,35,-2,35,35,35,-33,-56,-23,35,-24,35,-34,35,-58,35,35,35,]),'SYSTEM_ARR_PUSH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,27,52,54,55,56,57,58,61,62,63,64,65,72,83,88,89,90,93,95,96,97,98,99,100,101,102,103,113,114,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,162,164,165,166,167,174,175,193,194,197,200,201,203,204,207,212,213,215,226,228,230,232,237,240,251,252,253,254,255,258,260,262,263,264,265,268,],[36,36,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,36,36,36,-9,36,36,36,36,36,36,-87,36,-29,-68,36,36,36,-70,-71,36,36,36,36,36,36,36,-30,36,36,36,-61,-60,-88,-69,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-51,36,36,36,-59,36,36,36,36,36,36,36,-31,-35,-55,-57,36,-32,36,-2,36,36,36,-33,-56,-23,36,-24,36,-34,36,-58,36,36,36,]),'SYSTEM_ARR_POP':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,27,52,54,55,56,57,58,61,62,63,64,65,72,83,88,89,90,93,95,96,97,98,99,100,101,102,103,113,114,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,162,164,165,166,167,174,175,193,194,197,200,201,203,204,207,212,213,215,226,228,230,232,237,240,251,252,253,254,255,258,260,262,263,264,265,268,],[37,37,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,37,37,37,-9,37,37,37,37,37,37,-87,37,-29,-68,37,37,37,-70,-71,37,37,37,37,37,37,37,-30,37,37,37,-61,-60,-88,-69,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-51,37,37,37,-59,37,37,37,37,37,37,37,-31,-35,-55,-57,37,-32,37,-2,37,37,37,-33,-56,-23,37,-24,37,-34,37,-58,37,37,37,]),'SYSTEM_ARR_SIZE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,27,52,54,55,56,57,58,61,62,63,64,65,72,83,88,89,90,93,95,96,97,98,99,100,101,102,103,113,114,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,162,164,165,166,167,174,175,193,194,197,200,201,203,204,207,212,213,215,226,228,230,232,237,240,251,252,253,254,255,258,260,262,263,264,265,268,],[38,38,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,38,38,38,-9,38,38,38,38,38,38,-87,38,-29,-68,38,38,38,-70,-71,38,38,38,38,38,38,38,-30,38,38,38,-61,-60,-88,-69,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-51,38,38,38,-59,38,38,38,38,38,38,38,-31,-35,-55,-57,38,-32,38,-2,38,38,38,-33,-56,-23,38,-24,38,-34,38,-58,38,38,38,]),'SYSTEM_ARR_CONTAINS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,27,52,54,55,56,57,58,61,62,63,64,65,72,83,88,89,90,93,95,96,97,98,99,100,101,102,103,113,114,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,162,164,165,166,167,174,175,193,194,197,200,201,203,204,207,212,213,215,226,228,230,232,237,240,251,252,253,254,255,258,260,262,263,264,265,268,],[39,39,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,39,39,39,-9,39,39,39,39,39,39,-87,39,-29,-68,39,39,39,-70,-71,39,39,39,39,39,39,39,-30,39,39,39,-61,-60,-88,-69,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-51,39,39,39,-59,39,39,39,39,39,39,39,-31,-35,-55,-57,39,-32,39,-2,39,39,39,-33,-56,-23,39,-24,39,-34,39,-58,39,39,39,]),'SYSTEM_ARR_INDEXOF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,27,52,54,55,56,57,58,61,62,63,64,65,72,83,88,89,90,93,95,96,97,98,99,100,101,102,103,113,114,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,162,164,165,166,167,174,175,193,194,197,200,201,203,204,207,212,213,215,226,228,230,232,237,240,251,252,253,254,255,258,260,262,263,264,265,268,],[40,40,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,40,40,40,-9,40,40,40,40,40,40,-87,40,-29,-68,40,40,40,-70,-71,40,40,40,40,40,40,40,-30,40,40,40,-61,-60,-88,-69,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-51,40,40,40,-59,40,40,40,40,40,40,40,-31,-35,-55,-57,40,-32,40,-2,40,40,40,-33,-56,-23,40,-24,40,-34,40,-58,40,40,40,]),'SYSTEM_ARR_AVG':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,27,52,54,55,56,57,58,61,62,63,64,65,72,83,88,89,90,93,95,96,97,98,99,100,101,102,103,113,114,116,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,162,164,165,166,167,174,175,193,194,197,200,201,203,204,207,212,213,215,226,228,230,232,237,240,251,252,253,254,255,258,260,262,263,264,265,268,],[41,41,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,41,41,41,-9,41,41,41,41,41,41,-87,41,-29,-68,41,41,41,-70,-71,41,41,41,41,41,41,41,-30,41,41,41,-61,-60,-88,-69,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-51,41,41,41,-59,41,41,41,41,41,41,41,-31,-35,-55,-57,41,-32,41,-2,41,41,41,-33,-56,-23,41,-24,41,-34,41,-58,41,41,41,]),'KEYWORD_INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,60,62,63,64,65,89,90,101,104,121,122,164,165,166,195,196,204,207,210,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[42,42,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,42,42,-9,42,-87,42,-29,-68,-70,-71,-30,42,-88,-69,-51,42,42,42,42,-31,-35,42,-55,-57,-32,-2,42,-33,-56,-23,42,-24,42,-34,-58,42,42,42,]),'KEYWORD_FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,60,62,63,64,65,89,90,101,104,121,122,164,165,166,195,196,204,207,210,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[43,43,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,43,43,-9,43,-87,43,-29,-68,-70,-71,-30,43,-88,-69,-51,43,43,43,43,-31,-35,43,-55,-57,-32,-2,43,-33,-56,-23,43,-24,43,-34,-58,43,43,43,]),'KEYWORD_CHAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,60,62,63,64,65,89,90,101,104,121,122,164,165,166,195,196,204,207,210,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[44,44,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,44,44,-9,44,-87,44,-29,-68,-70,-71,-30,44,-88,-69,-51,44,44,44,44,-31,-35,44,-55,-57,-32,-2,44,-33,-56,-23,44,-24,44,-34,-58,44,44,44,]),'KEYWORD_VOID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,60,62,63,64,65,89,90,101,104,121,122,164,165,166,195,196,204,207,210,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[45,45,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,45,45,-9,45,-87,45,-29,-68,-70,-71,-30,45,-88,-69,-51,45,45,45,45,-31,-35,45,-55,-57,-32,-2,45,-33,-56,-23,45,-24,45,-34,-58,45,45,45,]),'KEYWORD_STRING':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,60,62,63,64,65,89,90,101,104,121,122,164,165,166,195,196,204,207,210,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[46,46,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,46,46,-9,46,-87,46,-29,-68,-70,-71,-30,46,-88,-69,-51,46,46,46,46,-31,-35,46,-55,-57,-32,-2,46,-33,-56,-23,46,-24,46,-34,-58,46,46,46,]),'KEYWORD_BOOL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,60,62,63,64,65,89,90,101,104,121,122,164,165,166,195,196,204,207,210,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[47,47,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,47,47,-9,47,-87,47,-29,-68,-70,-71,-30,47,-88,-69,-51,47,47,47,47,-31,-35,47,-55,-57,-32,-2,47,-33,-56,-23,47,-24,47,-34,-58,47,47,47,]),'KEYWORD_FILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,60,62,63,64,65,89,90,101,104,121,122,164,165,166,195,196,204,207,210,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[48,48,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,48,48,-9,48,-87,48,-29,-68,-70,-71,-30,48,-88,-69,-51,48,48,48,48,-31,-35,48,-55,-57,-32,-2,48,-33,-56,-23,48,-24,48,-34,-58,48,48,48,]),'KEYWORD_SOCKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,60,62,63,64,65,89,90,101,104,121,122,164,165,166,195,196,204,207,210,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[49,49,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,49,49,-9,49,-87,49,-29,-68,-70,-71,-30,49,-88,-69,-51,49,49,49,49,-31,-35,49,-55,-57,-32,-2,49,-33,-56,-23,49,-24,49,-34,-58,49,49,49,]),'KEYWORD_DICT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,60,62,63,64,65,89,90,101,104,121,122,164,165,166,195,196,204,207,210,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[50,50,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,50,50,-9,50,-87,50,-29,-68,-70,-71,-30,50,-88,-69,-51,50,50,50,50,-31,-35,50,-55,-57,-32,-2,50,-33,-56,-23,50,-24,50,-34,-58,50,50,50,]),'KEYWORD_ARRAY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,22,25,52,60,62,63,64,65,89,90,101,104,121,122,164,165,166,195,196,204,207,210,212,213,226,230,232,251,252,253,254,255,258,260,263,264,265,268,],[51,51,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,51,51,-9,51,-87,51,-29,-68,-70,-71,-30,51,-88,-69,-51,51,51,51,51,-31,-35,51,-55,-57,-32,-2,51,-33,-56,-23,51,-24,51,-34,-58,51,51,51,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,52,62,64,65,89,90,101,121,122,164,204,207,212,213,226,230,251,252,253,255,260,263,],[0,-1,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-9,-87,-29,-68,-70,-71,-30,-88,-69,-51,-31,-35,-55,-57,-32,-2,-33,-56,-23,-24,-34,-58,]),'RBRACE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,25,52,62,63,64,65,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,101,106,121,122,136,138,139,140,141,146,161,163,164,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,204,207,212,213,218,219,226,230,235,236,239,241,242,243,244,245,251,252,253,255,256,260,263,265,266,268,],[-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,62,-9,-87,121,-29,-68,-94,-95,-98,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-67,-70,-71,-30,-80,-88,-69,-114,192,-129,-130,-131,-84,-79,-134,-51,-96,-97,-99,-100,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-31,-35,-55,-57,-132,-133,-32,-2,255,-25,-81,-82,-72,-75,-76,-78,-33,-56,-23,-24,-26,-34,-58,-28,-83,-27,]),'KEYWORD_CASE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,52,62,64,65,89,90,101,121,122,164,204,207,212,213,217,226,230,235,236,251,252,253,255,256,260,263,265,268,],[-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-9,-87,-29,-68,-70,-71,-30,-88,-69,-51,-31,-35,-55,-57,237,-32,-2,237,-25,-33,-56,-23,-24,-26,-34,-58,-28,-27,]),'KEYWORD_DEFAULT':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,52,62,64,65,89,90,101,121,122,164,204,207,212,213,217,226,230,235,236,251,252,253,255,256,260,263,265,268,],[-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-9,-87,-29,-68,-70,-71,-30,-88,-69,-51,-31,-35,-55,-57,238,-32,-2,238,-25,-33,-56,-23,-24,-26,-34,-58,-28,-27,]),'KEYWORD_ELSE':([4,5,6,7,8,9,10,11,12,13,14,15,16,62,64,65,89,90,101,121,122,164,204,207,212,213,226,230,251,252,253,255,260,263,],[-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-87,-29,-68,-70,-71,-30,-88,-69,-51,-31,-35,232,-57,-32,-2,-33,-56,-23,-24,-34,-58,]),'ASSIGN':([18,19,32,53,117,119,155,163,172,173,176,205,],[-52,56,-53,102,175,-52,206,-134,-52,-53,102,227,]),'LPAREN':([18,20,21,23,24,27,33,34,35,36,37,38,39,40,41,53,54,55,56,57,58,61,72,75,83,88,93,95,96,97,98,99,100,101,102,103,112,113,114,116,123,124,125,126,127,128,129,130,131,132,133,134,135,162,167,172,174,175,193,194,197,200,201,203,204,207,215,226,228,237,240,251,260,262,],[54,57,58,60,61,83,92,93,94,95,96,97,98,99,100,104,83,83,83,83,83,83,83,54,83,83,83,83,83,83,83,83,83,-30,83,83,167,83,-61,-60,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,54,-59,83,83,83,83,83,83,83,-31,-35,83,-32,83,83,83,-33,-34,83,]),'LBRACKET':([18,30,42,43,44,45,46,47,48,49,50,51,53,75,119,172,176,206,227,],[55,91,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,103,55,55,55,103,228,228,]),'SEMICOLON':([26,27,28,29,53,60,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,101,106,109,113,114,115,116,136,146,153,155,161,163,168,169,170,171,172,173,174,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,204,205,207,216,226,229,233,239,241,242,243,244,245,246,251,260,261,266,],[64,65,89,90,101,114,122,-94,-95,-98,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-30,-80,164,-67,-61,174,-60,-114,-84,204,207,-79,-134,215,-64,-65,-66,-115,-126,-59,101,-96,-97,-99,-100,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-31,226,-35,-54,-32,251,253,-81,-82,-72,-75,-76,-78,260,-33,-34,-89,-83,]),'MINUS':([27,54,55,56,57,58,61,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,95,96,97,98,99,100,101,102,103,106,113,114,116,123,124,125,126,127,128,129,130,131,132,133,134,135,136,146,161,162,163,167,172,173,174,175,182,183,184,185,186,187,188,189,190,191,192,193,194,197,198,199,200,201,202,203,204,207,215,226,228,237,239,240,241,242,243,244,245,251,260,262,266,],[72,72,72,72,72,72,72,132,-106,72,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,72,-124,-125,-126,-127,72,72,72,72,72,72,72,72,-30,72,72,-80,72,-61,-60,72,72,72,72,72,72,72,72,72,72,72,72,72,-114,-84,-79,72,-134,72,-115,-126,-59,72,132,132,132,132,-107,-108,-110,-111,-112,-123,-128,72,72,72,-73,-74,72,72,-77,72,-31,-35,72,-32,72,72,-81,72,-82,-72,-75,-76,-78,-33,-34,72,-83,]),'INT_LITERAL':([27,54,55,56,57,58,61,72,83,88,93,95,96,97,98,99,100,101,102,103,113,114,116,123,124,125,126,127,128,129,130,131,132,133,134,135,162,167,174,175,193,194,197,200,201,203,204,207,215,226,228,237,240,251,260,262,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-30,76,76,76,-61,-60,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-59,76,76,76,76,76,76,76,-31,-35,76,-32,76,76,76,-33,-34,76,]),'FLOAT_LITERAL':([27,54,55,56,57,58,61,72,83,88,93,95,96,97,98,99,100,101,102,103,113,114,116,123,124,125,126,127,128,129,130,131,132,133,134,135,162,167,174,175,193,194,197,200,201,203,204,207,215,226,228,237,240,251,260,262,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-30,77,77,77,-61,-60,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-59,77,77,77,77,77,77,77,-31,-35,77,-32,77,77,77,-33,-34,77,]),'STRING_LITERAL':([27,54,55,56,57,58,61,72,83,88,93,95,96,97,98,99,100,101,102,103,113,114,116,123,124,125,126,127,128,129,130,131,132,133,134,135,162,167,174,175,193,194,197,200,201,203,204,207,215,226,228,237,240,251,260,262,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-30,78,78,78,-61,-60,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-59,78,78,78,78,78,78,78,-31,-35,78,-32,78,78,78,-33,-34,78,]),'CHAR_LITERAL':([27,54,55,56,57,58,61,72,83,88,93,95,96,97,98,99,100,101,102,103,113,114,116,123,124,125,126,127,128,129,130,131,132,133,134,135,162,167,174,175,193,194,197,200,201,203,204,207,215,226,228,237,240,251,260,262,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-30,79,79,79,-61,-60,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-59,79,79,79,79,79,79,79,-31,-35,79,-32,79,79,79,-33,-34,79,]),'KEYWORD_TRUE':([27,54,55,56,57,58,61,72,83,88,93,95,96,97,98,99,100,101,102,103,113,114,116,123,124,125,126,127,128,129,130,131,132,133,134,135,162,167,174,175,193,194,197,200,201,203,204,207,215,226,228,237,240,251,260,262,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-30,80,80,80,-61,-60,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-59,80,80,80,80,80,80,80,-31,-35,80,-32,80,80,80,-33,-34,80,]),'KEYWORD_FALSE':([27,54,55,56,57,58,61,72,83,88,93,95,96,97,98,99,100,101,102,103,113,114,116,123,124,125,126,127,128,129,130,131,132,133,134,135,162,167,174,175,193,194,197,200,201,203,204,207,215,226,228,237,240,251,260,262,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-30,81,81,81,-61,-60,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-59,81,81,81,81,81,81,81,-31,-35,81,-32,81,81,81,-33,-34,81,]),'KEYWORD_NULL':([27,54,55,56,57,58,61,72,83,88,93,95,96,97,98,99,100,101,102,103,113,114,116,123,124,125,126,127,128,129,130,131,132,133,134,135,162,167,174,175,193,194,197,200,201,203,204,207,215,226,228,237,240,251,260,262,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-30,82,82,82,-61,-60,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-59,82,82,82,82,82,82,82,-31,-35,82,-32,82,82,82,-33,-34,82,]),'RPAREN':([30,31,42,43,44,45,46,47,48,49,50,51,54,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,94,104,105,106,107,110,111,120,136,137,143,146,148,149,152,157,158,159,160,161,163,169,170,171,172,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,208,211,214,215,216,220,221,222,223,224,225,231,234,239,241,242,243,244,245,259,266,],[-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,106,-94,-95,-98,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,146,-67,161,-80,-85,165,166,177,-114,191,-50,-84,198,199,202,209,-3,-4,-5,-79,-134,-64,-65,-66,-115,-126,-96,-97,-99,-100,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-7,-86,233,-67,-54,239,241,242,243,244,245,-6,254,-81,-82,-72,-75,-76,-78,266,-83,]),'COMMA':([30,31,42,43,44,45,46,47,48,49,50,51,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,105,106,107,136,139,141,143,144,145,146,147,150,151,152,158,160,161,163,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,208,211,218,219,221,231,239,241,242,243,244,245,248,250,266,267,],[-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-94,-95,-98,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,162,-80,-85,-114,193,-131,-50,195,196,-84,197,200,201,203,210,-5,-79,-134,-96,-97,-99,-100,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-7,-86,-132,-133,240,-6,-81,-82,-72,-75,-76,-78,262,-92,-83,-93,]),'RBRACKET':([67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,91,103,106,108,136,146,154,161,163,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,228,239,241,242,243,244,245,247,248,249,250,266,267,],[-94,-95,-98,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,143,155,-80,163,-114,-84,205,-79,-134,-96,-97,-99,-100,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-67,-81,-82,-72,-75,-76,-78,261,-90,-91,-92,-83,-93,]),'COLON':([67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,142,146,161,163,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,238,239,241,242,243,244,245,257,266,],[-94,-95,-98,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,194,-84,-79,-134,-96,-97,-99,-100,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,258,-81,-82,-72,-75,-76,-78,264,-83,]),'AND':([67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,146,161,163,172,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,239,241,242,243,244,245,266,],[123,-95,-98,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,-84,-79,-134,-115,-126,-96,-97,-99,-100,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-81,-82,-72,-75,-76,-78,-83,]),'OR':([67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,146,161,163,172,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,239,241,242,243,244,245,266,],[124,-95,-98,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,-84,-79,-134,-115,-126,-96,-97,-99,-100,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-81,-82,-72,-75,-76,-78,-83,]),'EQ':([68,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,146,161,163,172,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,239,241,242,243,244,245,266,],[125,-98,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,-84,-79,-134,-115,-126,125,125,-99,-100,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-81,-82,-72,-75,-76,-78,-83,]),'NEQ':([68,69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,146,161,163,172,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,239,241,242,243,244,245,266,],[126,-98,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,-84,-79,-134,-115,-126,126,126,-99,-100,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-81,-82,-72,-75,-76,-78,-83,]),'GT':([69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,146,161,163,172,173,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,239,241,242,243,244,245,266,],[127,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,-84,-79,-134,-115,-126,127,127,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-81,-82,-72,-75,-76,-78,-83,]),'LT':([69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,146,161,163,172,173,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,239,241,242,243,244,245,266,],[128,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,-84,-79,-134,-115,-126,128,128,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-81,-82,-72,-75,-76,-78,-83,]),'GEQ':([69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,146,161,163,172,173,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,239,241,242,243,244,245,266,],[129,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,-84,-79,-134,-115,-126,129,129,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-81,-82,-72,-75,-76,-78,-83,]),'LEQ':([69,70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,146,161,163,172,173,180,181,182,183,184,185,186,187,188,189,190,191,192,198,199,202,239,241,242,243,244,245,266,],[130,-101,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,-84,-79,-134,-115,-126,130,130,-102,-103,-104,-105,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-81,-82,-72,-75,-76,-78,-83,]),'PLUS':([70,71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,146,161,163,172,173,182,183,184,185,186,187,188,189,190,191,192,198,199,202,239,241,242,243,244,245,266,],[131,-106,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,-84,-79,-134,-115,-126,131,131,131,131,-107,-108,-110,-111,-112,-123,-128,-73,-74,-77,-81,-82,-72,-75,-76,-78,-83,]),'MUL':([71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,146,161,163,172,173,186,187,188,189,190,191,192,198,199,202,239,241,242,243,244,245,266,],[133,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,-84,-79,-134,-115,-126,133,133,-110,-111,-112,-123,-128,-73,-74,-77,-81,-82,-72,-75,-76,-78,-83,]),'DIV':([71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,146,161,163,172,173,186,187,188,189,190,191,192,198,199,202,239,241,242,243,244,245,266,],[134,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,-84,-79,-134,-115,-126,134,134,-110,-111,-112,-123,-128,-73,-74,-77,-81,-82,-72,-75,-76,-78,-83,]),'MOD':([71,73,74,75,76,77,78,79,80,81,82,84,85,86,87,106,136,146,161,163,172,173,186,187,188,189,190,191,192,198,199,202,239,241,242,243,244,245,266,],[135,-109,-113,-115,-116,-117,-118,-119,-120,-121,-122,-124,-125,-126,-127,-80,-114,-84,-79,-134,-115,-126,135,135,-110,-111,-112,-123,-128,-73,-74,-77,-81,-82,-72,-75,-76,-78,-83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,25,258,264,],[2,63,265,268,]),'statement':([0,2,22,25,63,165,166,232,254,258,264,265,268,],[3,52,59,3,52,212,213,252,263,3,3,52,52,]),'declaration_statement':([0,2,22,25,60,63,165,166,232,254,258,264,265,268,],[4,4,4,4,116,4,4,4,4,4,4,4,4,4,]),'assignment_statement':([0,2,22,25,63,165,166,232,254,258,264,265,268,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'if_statement':([0,2,22,25,63,165,166,232,254,258,264,265,268,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'while_statement':([0,2,22,25,63,165,166,232,254,258,264,265,268,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'do_while_statement':([0,2,22,25,63,165,166,232,254,258,264,265,268,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'for_statement':([0,2,22,25,63,165,166,232,254,258,264,265,268,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'switch_statement':([0,2,22,25,63,165,166,232,254,258,264,265,268,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'break_statement':([0,2,22,25,63,165,166,232,254,258,264,265,268,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'return_statement':([0,2,22,25,63,165,166,232,254,258,264,265,268,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'function_call_statement':([0,2,22,25,63,165,166,232,254,258,264,265,268,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'array_function_call_statement':([0,2,22,25,63,165,166,232,254,258,264,265,268,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'block_statement':([0,2,22,25,63,165,166,209,232,254,258,264,265,268,],[15,15,15,15,15,15,15,230,15,15,15,15,15,15,]),'function_definition':([0,2,22,25,63,165,166,232,254,258,264,265,268,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'type_specifier':([0,2,22,25,60,63,104,165,166,195,196,210,232,254,258,264,265,268,],[17,17,17,17,118,17,156,17,17,220,221,156,17,17,17,17,17,17,]),'left_hand_side':([0,2,22,25,60,63,113,165,166,215,232,254,258,264,265,268,],[19,19,19,19,117,19,117,19,19,117,19,19,19,19,19,19,]),'function_call':([0,2,22,25,27,54,55,56,57,58,61,63,72,83,88,93,95,96,97,98,99,100,102,103,113,123,124,125,126,127,128,129,130,131,132,133,134,135,162,165,166,167,175,193,194,197,200,201,203,215,228,232,237,240,254,258,262,264,265,268,],[28,28,28,28,84,84,84,84,84,84,84,28,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,28,28,84,84,84,84,84,84,84,84,84,84,28,84,84,28,28,84,28,28,28,]),'array_function_call':([0,2,22,25,27,54,55,56,57,58,61,63,72,83,88,93,95,96,97,98,99,100,102,103,113,123,124,125,126,127,128,129,130,131,132,133,134,135,162,165,166,167,175,193,194,197,200,201,203,215,228,232,237,240,254,258,262,264,265,268,],[29,29,29,29,85,85,85,85,85,85,85,29,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,29,29,85,85,85,85,85,85,85,85,85,85,29,85,85,29,29,85,29,29,29,]),'primitive_type':([0,2,22,25,60,63,104,165,166,195,196,210,232,254,258,264,265,268,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'array_type':([0,2,22,25,60,63,104,165,166,195,196,210,232,254,258,264,265,268,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'subscript_access':([0,2,22,25,27,54,55,56,57,58,60,61,63,72,83,88,93,95,96,97,98,99,100,102,103,113,123,124,125,126,127,128,129,130,131,132,133,134,135,162,165,166,167,175,193,194,197,200,201,203,215,228,232,237,240,254,258,262,264,265,268,],[32,32,32,32,86,86,86,86,86,86,32,86,32,86,86,86,86,86,86,86,86,86,86,86,86,173,86,86,86,86,86,86,86,86,86,86,86,86,86,86,32,32,86,86,86,86,86,86,86,86,173,86,32,86,86,32,32,86,32,32,32,]),'expression':([27,54,55,56,57,58,61,83,88,93,95,96,97,98,99,100,102,103,113,162,167,175,193,194,197,200,201,203,215,228,237,240,262,],[66,107,108,109,110,111,120,137,142,145,147,148,149,150,151,152,153,154,169,211,214,216,142,219,222,223,224,225,169,250,257,259,267,]),'logical_expression':([27,54,55,56,57,58,61,83,88,93,95,96,97,98,99,100,102,103,113,162,167,175,193,194,197,200,201,203,215,228,237,240,262,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'equality_expression':([27,54,55,56,57,58,61,83,88,93,95,96,97,98,99,100,102,103,113,123,124,162,167,175,193,194,197,200,201,203,215,228,237,240,262,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,178,179,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'relational_expression':([27,54,55,56,57,58,61,83,88,93,95,96,97,98,99,100,102,103,113,123,124,125,126,162,167,175,193,194,197,200,201,203,215,228,237,240,262,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,180,181,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'additive_expression':([27,54,55,56,57,58,61,83,88,93,95,96,97,98,99,100,102,103,113,123,124,125,126,127,128,129,130,162,167,175,193,194,197,200,201,203,215,228,237,240,262,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,182,183,184,185,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'multiplicative_expression':([27,54,55,56,57,58,61,83,88,93,95,96,97,98,99,100,102,103,113,123,124,125,126,127,128,129,130,131,132,162,167,175,193,194,197,200,201,203,215,228,237,240,262,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,186,187,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'unary_expression':([27,54,55,56,57,58,61,72,83,88,93,95,96,97,98,99,100,102,103,113,123,124,125,126,127,128,129,130,131,132,133,134,135,162,167,175,193,194,197,200,201,203,215,228,237,240,262,],[73,73,73,73,73,73,73,136,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,188,189,190,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'primary_expression':([27,54,55,56,57,58,61,72,83,88,93,95,96,97,98,99,100,102,103,113,123,124,125,126,127,128,129,130,131,132,133,134,135,162,167,175,193,194,197,200,201,203,215,228,237,240,262,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'dictionary_literal':([27,54,55,56,57,58,61,72,83,88,93,95,96,97,98,99,100,102,103,113,123,124,125,126,127,128,129,130,131,132,133,134,135,162,167,175,193,194,197,200,201,203,215,228,237,240,262,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'argument_list':([54,],[105,]),'for_init':([60,],[113,]),'assignment_statement_no_semi':([60,113,215,],[115,170,170,]),'key_value_list_opt':([88,],[138,]),'key_value_list':([88,],[139,]),'empty':([88,104,113,215,228,],[140,159,171,171,249,]),'key_value':([88,193,],[141,218,]),'params':([104,],[157,]),'param_list':([104,],[158,]),'param':([104,210,],[160,231,]),'expression_opt':([113,215,],[168,234,]),'initializer_list':([206,227,],[229,246,]),'case_list':([217,],[235,]),'case_clause':([217,235,],[236,256,]),'expression_list_opt':([228,],[247,]),'expression_list':([228,],[248,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',263),
  ('function_definition -> type_specifier IDENTIFIER LPAREN params RPAREN block_statement','function_definition',6,'p_function_definition','parser.py',267),
  ('params -> param_list','params',1,'p_params','parser.py',275),
  ('params -> empty','params',1,'p_params','parser.py',276),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',283),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','parser.py',284),
  ('param -> type_specifier IDENTIFIER','param',2,'p_param','parser.py',291),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',295),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',296),
  ('statement -> declaration_statement','statement',1,'p_statement','parser.py',303),
  ('statement -> assignment_statement','statement',1,'p_statement','parser.py',304),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',305),
  ('statement -> while_statement','statement',1,'p_statement','parser.py',306),
  ('statement -> do_while_statement','statement',1,'p_statement','parser.py',307),
  ('statement -> for_statement','statement',1,'p_statement','parser.py',308),
  ('statement -> switch_statement','statement',1,'p_statement','parser.py',309),
  ('statement -> break_statement','statement',1,'p_statement','parser.py',310),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',311),
  ('statement -> function_call_statement','statement',1,'p_statement','parser.py',312),
  ('statement -> array_function_call_statement','statement',1,'p_statement','parser.py',313),
  ('statement -> block_statement','statement',1,'p_statement','parser.py',314),
  ('statement -> function_definition','statement',1,'p_statement','parser.py',315),
  ('do_while_statement -> KEYWORD_DO statement KEYWORD_WHILE LPAREN expression RPAREN SEMICOLON','do_while_statement',7,'p_do_while_statement','parser.py',319),
  ('switch_statement -> KEYWORD_SWITCH LPAREN expression RPAREN LBRACE case_list RBRACE','switch_statement',7,'p_switch_statement','parser.py',323),
  ('case_list -> case_clause','case_list',1,'p_case_list','parser.py',327),
  ('case_list -> case_list case_clause','case_list',2,'p_case_list','parser.py',328),
  ('case_clause -> KEYWORD_CASE expression COLON statement_list','case_clause',4,'p_case_clause','parser.py',335),
  ('case_clause -> KEYWORD_DEFAULT COLON statement_list','case_clause',3,'p_case_clause','parser.py',336),
  ('break_statement -> KEYWORD_BREAK SEMICOLON','break_statement',2,'p_break_statement','parser.py',343),
  ('declaration_statement -> type_specifier IDENTIFIER SEMICOLON','declaration_statement',3,'p_declaration_statement','parser.py',347),
  ('declaration_statement -> type_specifier IDENTIFIER ASSIGN expression SEMICOLON','declaration_statement',5,'p_declaration_statement','parser.py',348),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET SEMICOLON','declaration_statement',6,'p_declaration_statement','parser.py',349),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET ASSIGN initializer_list SEMICOLON','declaration_statement',7,'p_declaration_statement','parser.py',350),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET expression RBRACKET ASSIGN initializer_list SEMICOLON','declaration_statement',8,'p_declaration_statement','parser.py',351),
  ('declaration_statement -> type_specifier IDENTIFIER LBRACKET RBRACKET SEMICOLON','declaration_statement',5,'p_declaration_statement','parser.py',352),
  ('array_assignment_rhs -> expression','array_assignment_rhs',1,'p_array_assignment_rhs','parser.py',367),
  ('array_assignment_rhs -> initializer_list','array_assignment_rhs',1,'p_array_assignment_rhs','parser.py',368),
  ('type_specifier -> primitive_type','type_specifier',1,'p_type_specifier','parser.py',372),
  ('type_specifier -> array_type','type_specifier',1,'p_type_specifier','parser.py',373),
  ('primitive_type -> KEYWORD_INT','primitive_type',1,'p_primitive_type','parser.py',377),
  ('primitive_type -> KEYWORD_FLOAT','primitive_type',1,'p_primitive_type','parser.py',378),
  ('primitive_type -> KEYWORD_CHAR','primitive_type',1,'p_primitive_type','parser.py',379),
  ('primitive_type -> KEYWORD_VOID','primitive_type',1,'p_primitive_type','parser.py',380),
  ('primitive_type -> KEYWORD_STRING','primitive_type',1,'p_primitive_type','parser.py',381),
  ('primitive_type -> KEYWORD_BOOL','primitive_type',1,'p_primitive_type','parser.py',382),
  ('primitive_type -> KEYWORD_FILE','primitive_type',1,'p_primitive_type','parser.py',383),
  ('primitive_type -> KEYWORD_SOCKET','primitive_type',1,'p_primitive_type','parser.py',384),
  ('primitive_type -> KEYWORD_DICT','primitive_type',1,'p_primitive_type','parser.py',385),
  ('primitive_type -> KEYWORD_ARRAY','primitive_type',1,'p_primitive_type','parser.py',386),
  ('array_type -> primitive_type LBRACKET RBRACKET','array_type',3,'p_array_type','parser.py',390),
  ('assignment_statement -> left_hand_side ASSIGN expression SEMICOLON','assignment_statement',4,'p_assignment_statement','parser.py',394),
  ('left_hand_side -> IDENTIFIER','left_hand_side',1,'p_left_hand_side','parser.py',398),
  ('left_hand_side -> subscript_access','left_hand_side',1,'p_left_hand_side','parser.py',399),
  ('assignment_statement_no_semi -> left_hand_side ASSIGN expression','assignment_statement_no_semi',3,'p_assignment_statement_no_semi','parser.py',406),
  ('if_statement -> KEYWORD_IF LPAREN expression RPAREN statement','if_statement',5,'p_if_statement','parser.py',410),
  ('if_statement -> KEYWORD_IF LPAREN expression RPAREN statement KEYWORD_ELSE statement','if_statement',7,'p_if_statement','parser.py',411),
  ('while_statement -> KEYWORD_WHILE LPAREN expression RPAREN statement','while_statement',5,'p_while_statement','parser.py',418),
  ('for_statement -> KEYWORD_FOR LPAREN for_init expression_opt SEMICOLON expression_opt RPAREN statement','for_statement',8,'p_for_statement','parser.py',422),
  ('for_init -> assignment_statement_no_semi SEMICOLON','for_init',2,'p_for_init','parser.py',426),
  ('for_init -> declaration_statement','for_init',1,'p_for_init','parser.py',427),
  ('for_init -> SEMICOLON','for_init',1,'p_for_init','parser.py',428),
  ('expression_statement -> expression SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',437),
  ('expression_statement -> SEMICOLON','expression_statement',1,'p_expression_statement','parser.py',438),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',445),
  ('expression_opt -> assignment_statement_no_semi','expression_opt',1,'p_expression_opt','parser.py',446),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','parser.py',447),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',451),
  ('return_statement -> KEYWORD_RETURN SEMICOLON','return_statement',2,'p_return_statement','parser.py',455),
  ('return_statement -> KEYWORD_RETURN expression SEMICOLON','return_statement',3,'p_return_statement','parser.py',456),
  ('function_call_statement -> function_call SEMICOLON','function_call_statement',2,'p_function_call_statement','parser.py',463),
  ('array_function_call_statement -> array_function_call SEMICOLON','array_function_call_statement',2,'p_array_function_call_statement','parser.py',467),
  ('array_function_call -> SYSTEM_ARR_PUSH LPAREN expression COMMA expression RPAREN','array_function_call',6,'p_array_function_call','parser.py',471),
  ('array_function_call -> SYSTEM_ARR_POP LPAREN expression RPAREN','array_function_call',4,'p_array_function_call','parser.py',472),
  ('array_function_call -> SYSTEM_ARR_SIZE LPAREN expression RPAREN','array_function_call',4,'p_array_function_call','parser.py',473),
  ('array_function_call -> SYSTEM_ARR_CONTAINS LPAREN expression COMMA expression RPAREN','array_function_call',6,'p_array_function_call','parser.py',474),
  ('array_function_call -> SYSTEM_ARR_INDEXOF LPAREN expression COMMA expression RPAREN','array_function_call',6,'p_array_function_call','parser.py',475),
  ('array_function_call -> SYSTEM_ARR_AVG LPAREN expression RPAREN','array_function_call',4,'p_array_function_call','parser.py',476),
  ('array_function_call -> SYSTEM_ARR_AVG LPAREN expression COMMA expression RPAREN','array_function_call',6,'p_array_function_call','parser.py',477),
  ('function_call -> IDENTIFIER LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',496),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','parser.py',497),
  ('function_call -> SYSTEM_INPUT LPAREN IDENTIFIER COMMA type_specifier RPAREN','function_call',6,'p_function_call','parser.py',498),
  ('function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier RPAREN','function_call',6,'p_function_call','parser.py',499),
  ('function_call -> SYSTEM_OUTPUT LPAREN expression COMMA type_specifier COMMA expression RPAREN','function_call',8,'p_function_call','parser.py',500),
  ('function_call -> KEYWORD_EXIT LPAREN RPAREN','function_call',3,'p_function_call','parser.py',501),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',515),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','parser.py',516),
  ('block_statement -> LBRACE RBRACE','block_statement',2,'p_block_statement','parser.py',523),
  ('block_statement -> LBRACE statement_list RBRACE','block_statement',3,'p_block_statement','parser.py',524),
  ('initializer_list -> LBRACKET expression_list_opt RBRACKET','initializer_list',3,'p_initializer_list','parser.py',531),
  ('expression_list_opt -> expression_list','expression_list_opt',1,'p_expression_list_opt','parser.py',535),
  ('expression_list_opt -> empty','expression_list_opt',1,'p_expression_list_opt','parser.py',536),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parser.py',543),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','parser.py',544),
  ('expression -> logical_expression','expression',1,'p_expression','parser.py',551),
  ('logical_expression -> equality_expression','logical_expression',1,'p_logical_expression','parser.py',555),
  ('logical_expression -> logical_expression AND equality_expression','logical_expression',3,'p_logical_expression','parser.py',556),
  ('logical_expression -> logical_expression OR equality_expression','logical_expression',3,'p_logical_expression','parser.py',557),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',564),
  ('equality_expression -> equality_expression EQ relational_expression','equality_expression',3,'p_equality_expression','parser.py',565),
  ('equality_expression -> equality_expression NEQ relational_expression','equality_expression',3,'p_equality_expression','parser.py',566),
  ('relational_expression -> additive_expression','relational_expression',1,'p_relational_expression','parser.py',573),
  ('relational_expression -> relational_expression GT additive_expression','relational_expression',3,'p_relational_expression','parser.py',574),
  ('relational_expression -> relational_expression LT additive_expression','relational_expression',3,'p_relational_expression','parser.py',575),
  ('relational_expression -> relational_expression GEQ additive_expression','relational_expression',3,'p_relational_expression','parser.py',576),
  ('relational_expression -> relational_expression LEQ additive_expression','relational_expression',3,'p_relational_expression','parser.py',577),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',584),
  ('additive_expression -> additive_expression PLUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',585),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',586),
  ('multiplicative_expression -> unary_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',593),
  ('multiplicative_expression -> multiplicative_expression MUL unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',594),
  ('multiplicative_expression -> multiplicative_expression DIV unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',595),
  ('multiplicative_expression -> multiplicative_expression MOD unary_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',596),
  ('unary_expression -> primary_expression','unary_expression',1,'p_unary_expression','parser.py',603),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_unary_expression','parser.py',604),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression','parser.py',611),
  ('primary_expression -> INT_LITERAL','primary_expression',1,'p_primary_expression','parser.py',612),
  ('primary_expression -> FLOAT_LITERAL','primary_expression',1,'p_primary_expression','parser.py',613),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','parser.py',614),
  ('primary_expression -> CHAR_LITERAL','primary_expression',1,'p_primary_expression','parser.py',615),
  ('primary_expression -> KEYWORD_TRUE','primary_expression',1,'p_primary_expression','parser.py',616),
  ('primary_expression -> KEYWORD_FALSE','primary_expression',1,'p_primary_expression','parser.py',617),
  ('primary_expression -> KEYWORD_NULL','primary_expression',1,'p_primary_expression','parser.py',618),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','parser.py',619),
  ('primary_expression -> function_call','primary_expression',1,'p_primary_expression','parser.py',620),
  ('primary_expression -> array_function_call','primary_expression',1,'p_primary_expression','parser.py',621),
  ('primary_expression -> subscript_access','primary_expression',1,'p_primary_expression','parser.py',622),
  ('primary_expression -> dictionary_literal','primary_expression',1,'p_primary_expression','parser.py',623),
  ('dictionary_literal -> LBRACE key_value_list_opt RBRACE','dictionary_literal',3,'p_dictionary_literal','parser.py',637),
  ('key_value_list_opt -> key_value_list','key_value_list_opt',1,'p_key_value_list_opt','parser.py',641),
  ('key_value_list_opt -> empty','key_value_list_opt',1,'p_key_value_list_opt','parser.py',642),
  ('key_value_list -> key_value','key_value_list',1,'p_key_value_list','parser.py',649),
  ('key_value_list -> key_value_list COMMA key_value','key_value_list',3,'p_key_value_list','parser.py',650),
  ('key_value -> expression COLON expression','key_value',3,'p_key_value','parser.py',657),
  ('subscript_access -> IDENTIFIER LBRACKET expression RBRACKET','subscript_access',4,'p_subscript_access','parser.py',661),
]
